{"version":3,"sources":["Sider/sider.tsx","Api.tsx","Dashboard/resumen.tsx","Dashboard/aprobar.tsx","Dashboard/dashboard.tsx","Users/resumen.tsx","Users/users.tsx","Users/edituser.tsx","Users/edit.tsx","upload/files.tsx","upload/results.tsx","Experiments/rmn.jsx","Experiments/new.tsx","Payments/addPayment/add.tsx","Payments/transfer/transfer.tsx","Payments/buybugs/buybugs.tsx","Proyects/resumen.tsx","Proyects/proyects.tsx","Observate/resumen.tsx","Observate/proyects.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["Sidebar","className","href","data-toggle","role","aria-haspopup","aria-expanded","id","to","title","Component","client","ApolloClient","uri","request","operation","setContext","headers","Authorization","GQL","literals","_literals","this","query","gql","confirm","Modal","CallProcess","process","data","method","args","url","esc","encodeURIComponent","Object","keys","map","k","join","body","JSON","stringify","ID","console","log","Promise","resolve","reject","fetch","then","response","json","myJson","Api","_process","params","Data","notification","success","message","description","content","okText","okType","cancelText","onOk","onCancel","ApiExperiments","Resumen","props","state","experiments","getAll","setState","allExperiments","edges","selected","value","reduce","a","b","node","groupPay","experimentDetailsByExperimentId","price","experiment","ix","key","machineByMachineId","name","userByOwnerId","lastName","proyectByProyectId","isReady","length","jsonDateString","d","Date","getDate","getMonth","getFullYear","parseDate","createdAt","Approves","Aprobar","users","proyects","allProyects","user","Name","LastName","min","max","defaultValue","onChange","proyectsUsersByProyectId","proyect","jx","userByUserId","Proyect","onClick","showConfirm","showDeleteConfirm","style","height","encurso","dependientes","Dashboard","money","experimentos","totalCount","experimentsByProyectId","c","allUsers","email","rolesUsersByUserId","roleByRoleId","rut","dv","Users","EditUserId","rol","roleId","action","type","limit","credit","address","roles","defaultChecked","check","htmlFor","proyectsUsersByUserId","activateTime","userByActivateBy","proyectsByOwnerId","EditUser","load","match","allRoles","Files","nextProps","file","Upload","send","RMN","machine","DefaultState","proyect_id","out","allMachines","amount","allProyectsCredits","includes","obj","H1","C13","dept","cosy","tocsy","hsqc","hmbc","noesy","B11","F19","P31","Si29","Pt125","Li7","Al27","Ag109","Otro","num","preparete","recovery","option","Price","event","target","observate","solvente","preventDefault","parse","push","exp","new","user_id","machine_id","pop","onSubmit","e","handleSubmit","handleName","ng-model","handleSolvent","handlePreparete","checked","handleObservate","rows","handleRecovery","handleOption","hmqc","handleSend","handleLast","NewExperiment","machines","owned","allProyectsUsers","handleMachine","handleProyect","AddPayment","placeholder","Transfer","BuyBugs","available","Proyects","allExperimentDetails","experimentByExperimentId","Observates","App","exact","path","component","Boolean","window","location","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.cec6e1c0.chunk.js","sourcesContent":["import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nclass Sidebar extends Component {\n \n  render() {\n \n\n    return  <aside className=\"left-sidebar\">\n    {/* Sidebar scroll*/}\n    <div className=\"scroll-sidebar\">\n      {/* User profile */}\n      <div className=\"user-profile\">\n        {/* User profile image */}\n        {/* <div className=\"profile-img\"> <img src=\"assets/images/users/1.jpg\" alt=\"user\" /> </div> */}\n        {/* User profile text*/}\n        <div className=\"profile-text\"> <a href=\"#\" className=\"dropdown-toggle link u-dropdown\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"true\">Manuel Alba <span className=\"caret\" /></a>\n          <div className=\"dropdown-menu animated flipInY\">\n            <a href=\"#\" className=\"dropdown-item\"><i className=\"ti-user\" /> Mi perfil</a>\n            <a href=\"#\" className=\"dropdown-item\"><i className=\"ti-wallet\" /> Mi balance</a>\n            <a href=\"#\" className=\"dropdown-item\"><i className=\"ti-email\" /> Mensajes</a>\n            <div className=\"dropdown-divider\" /> <a href=\"#\" className=\"dropdown-item\"><i className=\"ti-settings\" /> Configurar cuenta</a>\n            <div className=\"dropdown-divider\" /> <a href=\"login.html\" className=\"dropdown-item\"><i className=\"fa fa-power-off\" /> Cerrar sesión</a>\n          </div>\n        </div>\n      </div>\n      {/* End User profile text*/}\n      {/* Sidebar navigation*/}\n      <nav className=\"sidebar-nav\">\n        <ul id=\"sidebarnav\">\n          <li>\n            <a className=\"has-arrow\" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-gauge\" /><span className=\"hide-menu\">Experimentos \n            {/* <span className=\"label label-rounded label-success\">5</span> */}\n            </span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><Link to=\"/app/upload/RMN400\">RMN 400</Link></li>\n              <li><Link to=\"/app/upload/RM200\">RMN 200</Link></li>\n              <li><Link to=\"/app/upload/FT-IR\">FT-IR</Link></li>\n              <li><Link to=\"/app/upload/LCMS\">LC-MS/MS</Link></li>\n              <li><Link to=\"/app/upload/GSMS\">GS-MS</Link></li>\n              <li><Link to=\"/app/upload/AFM\">AFM</Link></li>\n            </ul>\n          </li>\n          <li>\n            <a className=\"has-arrow \" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-cash\" /><span className=\"hide-menu\">Pagos</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><Link to=\"/app/AddPayment\">Agregar un Pago</Link></li>\n              <li><Link to=\"/app/transfer\">Transferir saldos</Link></li>\n              <li><Link to=\"/app/buybugs\">Comprar bolsa de RMN</Link></li>\n              <li><Link to=\"/app/checkpayments\">Revisar mis Pagos</Link></li>\n              <li><Link to=\"/app/not-billing\">No Pagado</Link></li>\n              <li><Link to=\"/app/billing\">Facturaciónes</Link></li>\n              <li><Link to=\"/app/all-billing\">Todas las facturaciones</Link></li>\n\n            </ul>\n          </li>\n          <li>\n            <a className=\"has-arrow \" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-email\" /><span className=\"hide-menu\">Observaciones</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><Link to=\"/app/observates\">Experimentos observados</Link></li>\n              {/* <li><a href=\"app-email-detail.html\">Mailbox Detail</a></li>\n              <li><a href=\"app-compose.html\">Compose Mail</a></li> */}\n            </ul>\n          </li>\n          <li>\n            <a className=\"has-arrow\" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-account-multiple-plus\" /><span className=\"hide-menu\">Usuarios</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\"> \n              <li> <Link to=\"/app/add-users\">Agregar Usuarios</Link></li>\n              <li> <Link to=\"/app/edit-users\">Editar Usuarios</Link></li>\n              <li> <Link to=\"/app/add-proyects\">Agregar Proyecto</Link></li>\n              <li> <Link to=\"/app/edit-proyects\">Editar  proyecto</Link></li>\n              {/* <li><a href=\"ui-buttons.html\">Buttons</a></li>\n              <li><a href=\"ui-modals.html\">Modals</a></li>\n              <li><a href=\"ui-tab.html\">Tab</a></li>\n              <li><a href=\"ui-tooltip-popover.html\">Tooltip &amp; Popover</a></li>\n              <li><a href=\"ui-tooltip-stylish.html\">Tooltip stylish</a></li>\n              <li><a href=\"ui-sweetalert.html\">Sweet Alert</a></li>\n              <li><a href=\"ui-notification.html\">Notification</a></li>\n              <li><a href=\"ui-progressbar.html\">Progressbar</a></li>\n              <li><a href=\"ui-nestable.html\">Nestable</a></li>\n              <li><a href=\"ui-range-slider.html\">Range slider</a></li>\n              <li><a href=\"ui-timeline.html\">Timeline</a></li>\n              <li><a href=\"ui-typography.html\">Typography</a></li>\n              <li><a href=\"ui-horizontal-timeline.html\">Horizontal Timeline</a></li>\n              <li><a href=\"ui-session-timeout.html\">Session Timeout</a></li>\n              <li><a href=\"ui-session-ideal-timeout.html\">Session Ideal Timeout</a></li>\n              <li><a href=\"ui-bootstrap.html\">Bootstrap Ui</a></li>\n              <li><a href=\"ui-breadcrumb.html\">Breadcrumb</a></li>\n              <li><a href=\"ui-bootstrap-switch.html\">Bootstrap Switch</a></li>\n              <li><a href=\"ui-list-media.html\">List Media</a></li>\n              <li><a href=\"ui-ribbons.html\">Ribbons</a></li>\n              <li><a href=\"ui-grid.html\">Grid</a></li>\n              <li><a href=\"ui-carousel.html\">Carousel</a></li>\n              <li><a href=\"ui-date-paginator.html\">Date-paginator</a></li>\n              <li><a href=\"ui-dragable-portlet.html\">Dragable Portlet</a></li>\n              <li><a href=\"ui-spinner.html\">Spinner</a></li>\n              <li><a href=\"ui-scrollspy.html\">Scrollspy</a></li>\n              <li><a href=\"ui-toasts.html\">Toasts</a></li> */}\n            </ul>\n          </li>\n         {/*  <li className=\"nav-devider\" />\n          <li className=\"nav-small-cap\">Administrar Resultados</li>\n          <li className=\"nav-small-cap\">Facturación</li>\n          <li className=\"nav-small-cap\">Usuarios</li>\n          <li>\n            <a className=\"has-arrow\" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-file\" /><span className=\"hide-menu\">Forms</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><a href=\"form-basic.html\">Basic Forms</a></li>\n              <li><a href=\"form-layout.html\">Form Layouts</a></li>\n              <li><a href=\"form-addons.html\">Form Addons</a></li>\n              <li><a href=\"form-material.html\">Form Material</a></li>\n              <li><a href=\"form-float-input.html\">Floating Lable</a></li>\n              <li><a href=\"form-pickers.html\">Form Pickers</a></li>\n              <li><a href=\"form-upload.html\">File Upload</a></li>\n              <li><a href=\"form-mask.html\">Form Mask</a></li>\n              <li><a href=\"form-validation.html\">Form Validation</a></li>\n              <li><a href=\"form-bootstrap-validation.html\">Form Bootstrap Validation</a></li>\n              <li><a href=\"form-dropzone.html\">File Dropzone</a></li>\n              <li><a href=\"form-icheck.html\">Icheck control</a></li>\n              <li><a href=\"form-img-cropper.html\">Image Cropper</a></li>\n              <li><a href=\"form-bootstrapwysihtml5.html\">HTML5 Editor</a></li>\n              <li><a href=\"form-typehead.html\">Form Typehead</a></li>\n              <li><a href=\"form-wizard.html\">Form Wizard</a></li>\n              <li><a href=\"form-xeditable.html\">Xeditable Editor</a></li>\n              <li><a href=\"form-summernote.html\">Summernote Editor</a></li>\n              <li><a href=\"form-tinymce.html\">Tinymce Editor</a></li>\n            </ul>\n          </li>\n          <li>\n            <a className=\"has-arrow \" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-table\" /><span className=\"hide-menu\">Tables</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><a href=\"table-basic.html\">Basic Tables</a></li>\n              <li><a href=\"table-layout.html\">Table Layouts</a></li>\n              <li><a href=\"table-data-table.html\">Data Tables</a></li>\n              <li><a href=\"table-footable.html\">Footable</a></li>\n              <li><a href=\"table-jsgrid.html\">Js Grid Table</a></li>\n              <li><a href=\"table-responsive.html\">Responsive Table</a></li>\n              <li><a href=\"table-bootstrap.html\">Bootstrap Tables</a></li>\n              <li><a href=\"table-editable-table.html\">Editable Table</a></li>\n            </ul>\n          </li>\n          <li>\n            <a className=\"has-arrow \" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-widgets\" /><span className=\"hide-menu\">Widgets</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><a href=\"widget-apps.html\">Widget Apps</a></li>\n              <li><a href=\"widget-data.html\">Widget Data</a></li>\n              <li><a href=\"widget-charts.html\">Widget Charts</a></li>\n            </ul>\n          </li>\n          <li className=\"nav-devider\" />\n          <li className=\"nav-small-cap\">EXTRA COMPONENTS</li>\n          <li>\n            <a className=\"has-arrow \" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-book-multiple\" /><span className=\"hide-menu\">Page Layout</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><a href=\"layout-single-column.html\">1 Column</a></li>\n              <li><a href=\"layout-fix-header.html\">Fix header</a></li>\n              <li><a href=\"layout-fix-sidebar.html\">Fix sidebar</a></li>\n              <li><a href=\"layout-fix-header-sidebar.html\">Fixe header &amp; Sidebar</a></li>\n              <li><a href=\"layout-boxed.html\">Boxed Layout</a></li>\n              <li><a href=\"layout-logo-center.html\">Logo in Center</a></li>\n            </ul>\n          </li>\n          <li>\n            <a className=\"has-arrow \" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-book-open-variant\" /><span className=\"hide-menu\">Sample Pages</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><a href=\"starter-kit.html\">Starter Kit</a></li>\n              <li><a href=\"pages-blank.html\">Blank page</a></li>\n              <li><a href=\"#\" className=\"has-arrow\">Authentication <span className=\"label label-rounded label-success\">6</span></a>\n                <ul aria-expanded=\"false\" className=\"collapse\">\n                  <li><a href=\"pages-login.html\">Login 1</a></li>\n                  <li><a href=\"pages-login-2.html\">Login 2</a></li>\n                  <li><a href=\"pages-register.html\">Register</a></li>\n                  <li><a href=\"pages-register2.html\">Register 2</a></li>\n                  <li><a href=\"pages-lockscreen.html\">Lockscreen</a></li>\n                  <li><a href=\"pages-recover-password.html\">Recover password</a></li>\n                </ul>\n              </li>\n              <li><a href=\"pages-profile.html\">Profile page</a></li>\n              <li><a href=\"pages-animation.html\">Animation</a></li>\n              <li><a href=\"pages-fix-innersidebar.html\">Sticky Left sidebar</a></li>\n              <li><a href=\"pages-fix-inner-right-sidebar.html\">Sticky Right sidebar</a></li>\n              <li><a href=\"pages-invoice.html\">Invoice</a></li>\n              <li><a href=\"pages-treeview.html\">Treeview</a></li>\n              <li><a href=\"pages-utility-classes.html\">Helper Classes</a></li>\n              <li><a href=\"pages-search-result.html\">Search result</a></li>\n              <li><a href=\"pages-scroll.html\">Scrollbar</a></li>\n              <li><a href=\"pages-pricing.html\">Pricing</a></li>\n              <li><a href=\"pages-lightbox-popup.html\">Lighbox popup</a></li>\n              <li><a href=\"pages-gallery.html\">Gallery</a></li>\n              <li><a href=\"pages-faq.html\">Faqs</a></li>\n              <li><a href=\"#\" className=\"has-arrow\">Error Pages</a>\n                <ul aria-expanded=\"false\" className=\"collapse\">\n                  <li><a href=\"pages-error-400.html\">400</a></li>\n                  <li><a href=\"pages-error-403.html\">403</a></li>\n                  <li><a href=\"pages-error-404.html\">404</a></li>\n                  <li><a href=\"pages-error-500.html\">500</a></li>\n                  <li><a href=\"pages-error-503.html\">503</a></li>\n                </ul>\n              </li>\n            </ul>\n          </li>\n          <li>\n            <a className=\"has-arrow \" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-file-chart\" /><span className=\"hide-menu\">Charts</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><a href=\"chart-morris.html\">Morris Chart</a></li>\n              <li><a href=\"chart-chartist.html\">Chartis Chart</a></li>\n              <li><a href=\"chart-echart.html\">Echarts</a></li>\n              <li><a href=\"chart-flot.html\">Flot Chart</a></li>\n              <li><a href=\"chart-knob.html\">Knob Chart</a></li>\n              <li><a href=\"chart-chart-js.html\">Chartjs</a></li>\n              <li><a href=\"chart-sparkline.html\">Sparkline Chart</a></li>\n              <li><a href=\"chart-extra-chart.html\">Extra chart</a></li>\n              <li><a href=\"chart-peity.html\">Peity Charts</a></li>\n            </ul>\n          </li>\n          <li>\n            <a className=\"has-arrow \" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-brush\" /><span className=\"hide-menu\">Icons</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><a href=\"icon-material.html\">Material Icons</a></li>\n              <li><a href=\"icon-fontawesome.html\">Fontawesome Icons</a></li>\n              <li><a href=\"icon-themify.html\">Themify Icons</a></li>\n              <li><a href=\"icon-linea.html\">Linea Icons</a></li>\n              <li><a href=\"icon-weather.html\">Weather Icons</a></li>\n              <li><a href=\"icon-simple-lineicon.html\">Simple Lineicons</a></li>\n              <li><a href=\"icon-flag.html\">Flag Icons</a></li>\n            </ul>\n          </li>\n          <li>\n            <a className=\"has-arrow \" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-map-marker\" /><span className=\"hide-menu\">Maps</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><a href=\"map-google.html\">Google Maps</a></li>\n              <li><a href=\"map-vector.html\">Vector Maps</a></li>\n            </ul>\n          </li>*/}\n          {/* <li> \n            <a className=\"has-arrow \" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-arrange-send-backward\" /><span className=\"hide-menu\">Multi level dd</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><a href=\"#\">item 1.1</a></li>\n              <li><a href=\"#\">item 1.2</a></li>\n              <li>\n                <a className=\"has-arrow\" href=\"#\" aria-expanded=\"false\">Menu 1.3</a>\n                <ul aria-expanded=\"false\" className=\"collapse\">\n                  <li><a href=\"#\">item 1.3.1</a></li>\n                  <li><a href=\"#\">item 1.3.2</a></li>\n                  <li><a href=\"#\">item 1.3.3</a></li>\n                  <li><a href=\"#\">item 1.3.4</a></li>\n                </ul>\n              </li>\n              <li><a href=\"#\">item 1.4</a></li>\n            </ul>\n          </li> */}\n        </ul>\n      </nav>\n      {/* End Sidebar navigation */}\n    </div>\n    {/* End Sidebar scroll*/}\n    {/* Bottom points*/}\n    <div className=\"sidebar-footer\">\n      {/* item*/}\n      <a className=\"link\" data-toggle=\"tooltip\" title=\"Settings\"><i className=\"ti-settings\" /></a>\n      {/* item*/}\n      <a className=\"link\" data-toggle=\"tooltip\" title=\"Email\"><i className=\"mdi mdi-gmail\" /></a>\n      {/* item*/}\n      <a className=\"link\" data-toggle=\"tooltip\" title=\"Logout\"><i className=\"mdi mdi-power\" /></a>\n    </div>\n    {/* End Bottom points*/}\n  </aside>;\n  }\n}\n\nexport default Sidebar;\n","import { notification } from 'antd';\nimport { Modal, Button } from 'antd';\nimport ApolloClient, { gql }  from \"apollo-boost\";\n\nconst client = new ApolloClient({\n    uri: \"/api/graphql\",\n    request: operation => {\n        operation.setContext({\n            headers: {\n                Authorization: \"eyJhbGciOiJIUzI1NiIsInR5cCI6IkpXVCJ9.eyJVc2VySWQiOiIxIiwiR3JvdXBzIjpbIlN1cGVyIEFkbWluaXN0cmFkb3IiXX0.FwHme_UJ2GbvYiXXcjHHOWaWQrssEVK0ewyI1njl8Hs\"\n            },\n        });\n    }\n});\n\nexport class GQL {\n\n    _literals: any;\n\n    constructor(literals: any, ...placeholders: any[]){\n\n        this._literals= literals\n    \n    } \n\n    getAll(params = {}) {\n        return client.query({\n            query: gql(this._literals)\n                            })\n\n    }\n\n\n\n}\n\n \n\n\n\nconst confirm = Modal.confirm;\n\n\nfunction CallProcess(process: string, data: any, method: string) {\n\n    let args = {}\n    let url = '/api/' + process\n    if (method == \"GET\") {\n\n        args = {}\n        var esc = encodeURIComponent;\n            var query = Object.keys(data)\n            .map(k => esc(k) + '=' + esc(data[k]))\n            .join('&');\n\n            url = url +\"?\"+query\n        \n\n    }\n    else if (method == \"POST\") {\n        args = {\n            method: 'POST',\n            headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n            body: JSON.stringify(data)\n        }\n\n    }\n\n    else if (method == \"PUT\") {\n\n        args = {\n            method: 'PUT',\n            headers: { \"Content-Type\": \"application/json; charset=utf-8\" },\n            body: JSON.stringify(data)\n        }\n        url = url +\"/\"+data.ID\n\n    }\n\n\n    else if (method == \"DELETE\") {\n        args = {\n            method: 'DELETE',\n            headers: { \"Content-Type\": \"application/json; charset=utf-8\" }\n        }\n        url = url +\"/\"+data.ID\n\n    }\n\n\n    console.log(\"URL\",url)\n\n\n\n    return new Promise((resolve, reject) => {\n\n\n\n\n        fetch(url, args).then(function (response) {\n            return response.json();\n        })\n            .then(function (myJson: any) {\n\n                resolve(myJson)\n            });\n\n\n    })\n}\n\n\n\nclass Api {\n\n    _process: string;\n    constructor(process: string) {\n        this._process = process;\n    }\n\n\n    new(params: any) {\n\n\n        return new Promise((resolve, reject) => {\n\n            CallProcess(this._process, params, \"POST\").then((data: any) => {\n\n                resolve(data.Data)\n\n                notification.success({\n                    message: 'Se ha insertado con exito ',\n                    description: 'El Id de inserccion es  ' + data.Data.ID,\n                });\n\n            })\n        })\n\n    }\n\n\n    get(ID : number,params = {}) {\n        console.log(\"ID\",ID)\n        return new Promise((resolve, reject) => {\n            CallProcess(this._process+ \"/\"+ID , params, \"GET\").then((data: any) => { resolve(data.Data) })\n        })\n\n    }\n\n    getAll(params = {}) {\n        return new Promise((resolve, reject) => {\n            CallProcess(this._process, params, \"GET\").then((data: any) => { resolve(data) })\n        })\n\n    }\n    save(process : any) {\n\n        return new Promise((resolve, reject) => {\n\n            CallProcess(this._process,process,\"PUT\").then((data:any )=>{\n                notification.success({\n                    message: 'Se ha actualizado con exito ',\n                    description: 'El Id ' + data.Data.ID,\n                });\n\n\n                resolve(data.Data)\n            })\n\n        })\n    }\n    delete(process : any) {\n\n        return new Promise((resolve, reject) => {\n\n\n        confirm({\n            title: '¿Esta seguro que desea borrar?',\n            content: 'Esta seguro que desea borrar el registro id : '+process.ID,\n            okText: 'Si',\n            okType: 'danger',\n            cancelText: 'No',\n            onOk:()=> {\n              \n\n                CallProcess(this._process,process,\"DELETE\").then((data:any )=>{\n                    resolve(data.Data)\n                })\n            },\n            onCancel() {\n                resolve(process)\n            },\n          });\n\n\n        })\n\n\n    }\n\n}\n\nexport default Api","import React, { Component } from 'react';\nimport {GQL} from '../Api';\n\n//const ApiExperiments  =new  Api(\"experiments\")\n\nconst ApiExperiments=new GQL(`{\n  allExperiments(orderBy:ID_DESC,first:200) {\n    edges {\n      node {\n        id\n        groupPay\n\n        createdAt\n        experimentDetailsByExperimentId {\n          edges {\n            node {\n              id\n              file\n              isReady\n              price\n            }\n          }\n        }\n        machineByMachineId {\n          name\n        }\n        userByOwnerId {\n          id\n          name\n          lastName\n          email\n        }\n        proyectByProyectId  {\n          id\n          name\n        }\n        \n      }\n    }\n  }\n}`)\n\n\nfunction parseDate(jsonDateString : string)  {\n  var d= new Date(jsonDateString);\n  return d.getDate() + \"/\" + d.getMonth() + \"/\" + d.getFullYear(); \n}\n\n\nclass Resumen extends Component {\n  state={experiments:[]}\n\n  constructor(props:any) {\n    super(props)\n\n    ApiExperiments.getAll().then((experiments :any) => {  \n\n      console.log(experiments)\n     this.setState({experiments:experiments.data.allExperiments.edges}) \n}  )\n    \n\n}\n\n  render() {\n    return (  <div className=\"card\">\n    <div className=\"card-body\">\n      <div className=\"d-flex no-block\">\n        <h4 className=\"card-title\">Resumen Mensual</h4>\n        \n      </div>\n      <h6 className=\"card-subtitle\">Ultimos 30 dias </h6>\n    </div>\n    <div className=\"card-body bg-light\">\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <h2 className=\"mb-0\">Resumen por mes</h2>\n          <select className=\"custom-select\">\n            <option selected>Ultimos 30 dias</option>\n            <option value={1}>Septiembbre 2018</option>\n            <option value={2}>Agosto 2019</option>\n            <option value={3}>Julio 2019</option>\n          </select>\n        \n          </div>\n        <div className=\"col-6 align-self-center display-6 text-info text-right\"> {this.state.experiments.reduce( (a:number, b:any) => a + b.node.groupPay==2?b.node.experimentDetailsByExperimentId.edges.reduce( (a:number, b:any) => a + b.node.price, 0):0  , 0)} :CR  ${this.state.experiments.reduce( (a:number, b:any) => a + b.node.groupPay==1?b.node.experimentDetailsByExperimentId.edges.reduce( (a:number, b:any) => a + b.node.price, 0):0  , 0)} : U.F. </div>\n        \n      </div>\n    </div>\n    <div className=\"table-responsive\">\n      <table className=\"table table-hover no-wrap\">\n        <thead>\n          <tr>\n            <th className=\"text-center\">#</th>\n            <th>Equipo</th>\n            <th>Usuario</th>\n            <th>Proyecto</th>\n            <th>Estado</th>\n            <th>Fecha</th>\n            <th>Precio</th>\n          </tr>\n        </thead>\n        <tbody>\n           {this.state.experiments.map((experiment:any,ix) => {\n          return <tr key={ix}>\n            <td className=\"text-center\">{experiment.node.id}</td>\n            <td className=\"txt-oflo\">{experiment.node.machineByMachineId.name}</td>\n            <td className=\"txt-oflo\">{experiment.node.userByOwnerId.name} {experiment.node.userByOwnerId.lastName}</td>\n            <td className=\"txt-oflo\">{experiment.node.proyectByProyectId.name}</td>\n            <td>{experiment.node.experimentDetailsByExperimentId.edges.reduce( (a:number, b:any) => a + b.node.isReady, 0) == experiment.node.experimentDetailsByExperimentId.edges.length ? <span className=\"label label-success label-rouded\">Finalizado</span>:null} </td>\n            <td className=\"txt-oflo\">{parseDate(experiment.node.createdAt)}</td>\n      \n            <td><span className=\"text-success\">\n           {experiment.node.groupPay==2?<div>{experiment.node.experimentDetailsByExperimentId.edges.reduce( (a:number, b:any) => a + b.node.price, 0)} CR\n\n           </div>:<div>\n           ${experiment.node.experimentDetailsByExperimentId.edges.reduce( (a:number, b:any) => a + b.node.price, 0)} U.F.\n           </div>}    \n            \n            \n            </span></td>\n          </tr>\n          })} \n          \n        </tbody>\n      </table>\n    </div>\n  </div>\n)\n\n    }\n}\nexport default Resumen;\n","import React, { Component } from 'react';\nimport Resumen from './resumen';\nimport Api, { GQL } from '../Api';\nimport { Modal, Button } from 'antd';\nimport { InputNumber } from 'antd';\n\nconst { confirm } = Modal;\n\n\n\nconst Approves = new GQL(`{\n    allProyects(condition: {ownerId: 3}) {\n      edges {\n        node {\n          id\n          name\n          proyectsUsersByProyectId(orderBy: ID_ASC, condition: {activateTime: null, deletedAt: null}) {\n            edges {\n              node {\n                id\n                createdAt\n                userByUserId {\n                  id\n                  name\n                  lastName\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  `)\n\n\n  function parseDate(jsonDateString : string)  {\n    var d= new Date(jsonDateString);\n    return d.getDate() + \"/\" + d.getMonth() + \"/\" + d.getFullYear(); \n  }\n  \nexport default class Aprobar extends Component {\n\n    state = { users: [] }\n\n    constructor(props: any) {\n        super(props)\n\n\n        Approves.getAll().then((proyects) => {\n            console.log(proyects.data.allProyects.edges)\n            this.setState({ users: proyects.data.allProyects.edges })\n\n        })\n\n    }\n\n    onChange(value: any) {\n        console.log('changed', value);\n    }\n\n\n    showConfirm(user: any) {\n        confirm({\n            title: `¿Deseas aceptar a ${user.Name} ${user.LastName}? `,\n            content: (\n                <div>\n                    <p>Agregar cupo en UF Maximo 10 UF </p>\n                    <p> <InputNumber min={1} max={10} defaultValue={1} onChange={this.onChange} /> </p>\n                </div>\n            ),\n            onOk() {\n                console.log('OK');\n            },\n            onCancel() {\n                console.log('Cancel');\n            },\n        });\n    }\n\n    showDeleteConfirm(user: any) {\n        confirm({\n            title: '¿Estas seguro que no desea aceptar a ',\n            content: `${user.Name} ${user.LastName} ?`,\n            okText: 'Si',\n            okType: 'danger',\n            cancelText: 'No',\n            onOk() {\n                console.log('OK');\n            },\n            onCancel() {\n                console.log('Cancel');\n            },\n        });\n    }\n\n\n    render() {\n\n        return <div className=\"col-12\">\n            <div className=\"card\">\n                <div className=\"row\">\n                    <div className=\"col-lg-4\">\n\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Usuarios pendientes</h4>\n                                <h6 className=\"card-subtitle\">{this.state.users.reduce( (a:number, b:any) => a + b.node.proyectsUsersByProyectId.edges.length, 0)} usuarios pendientes</h6>\n                                <div className=\"steamline mt-5\">\n\n                                    {this.state.users.map((proyect: any, ix: number) => {\n\n                                        return <div> {proyect.node.proyectsUsersByProyectId.edges.map((user: any, jx: number) => {\n                                            return <div className=\"sl-item\" key={ix + \"-\" + jx}>\n                                                {/* <div className=\"sl-left\"> <img className=\"img-circle\" alt=\"user\" src=\"assets/images/users/3.jpg\" /> </div> */}\n                                                <div className=\"sl-right\">\n                                                    <div><a href=\"#\">{user.node.userByUserId.name} {user.node.userByUserId.lastName}</a> <span className=\"sl-date\">{parseDate(user.node.createdAt)} </span></div>\n                                                    <div className=\"desc\">{user.Proyect}\n                                                        <br /><button onClick={() => { this.showConfirm(user) }} className=\"btn mt-2 mr-1 btn-rounded btn-outline-success\">Aceptar</button> <button onClick={() => { this.showDeleteConfirm(user) }} className=\"btn mt-2 btn-rounded btn-outline-danger\">Rechazar</button> </div>\n                                                </div>\n                                            </div>\n                                        }\n                                        )} </div>\n                                    }\n\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n\n\n\n                    </div>\n                    <div className=\"col-lg-8 border-left\">\n                        <div className=\"card-body\">\n                            <div className=\"d-flex no-block align-items-center\">\n                                <h4 className=\"font-medium text-inverse\">Resumen de experimentos por semana</h4>\n                                <div className=\"ml-auto\">\n                                    <ul className=\"list-inline\">\n                                        <li className=\"pl-0\">\n                                            <h6 className=\"text-muted\"><i className=\"fa fa-circle mr-1 text-success\" />2016</h6>\n                                        </li>\n                                        <li>\n                                            <h6 className=\"text-muted\"><i className=\"fa fa-circle mr-1 text-info\" />2019</h6>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                            <div className=\"total-revenue4\" style={{ height: '350px' }} />\n                        </div>\n                    </div>\n                </div>\n            </div>\n        </div>\n        {/* Column */ }\n    }\n}\n","import React, { Component } from 'react';\nimport Resumen from './resumen';\nimport Aprobar from './aprobar';\nimport { GQL } from '../Api';\nimport { Link } from 'react-router-dom';\n\n\n\nconst experiments = new GQL(`{\n  allProyects(condition: {ownerId: 2}) {\n    edges {\n      node {\n        experimentsByProyectId {\n          edges {\n            node {\n              experimentDetailsByExperimentId {\n                totalCount\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  allProyectsUsers(condition: {userId: 2} )  {\n    edges {\n      node {\n        proyectByProyectId {\n          experimentsByProyectId {\n            edges {\n              node {\n                experimentDetailsByExperimentId {\n                  totalCount\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}`)\n\n\n\nconst encurso = new GQL(`{\n  allProyects(condition: {ownerId: 1}) {\n    edges {\n      node {\n        experimentsByProyectId {\n          edges {\n            node {\n              experimentDetailsByExperimentId(condition:{isReady:false}) {\n                totalCount\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  allProyectsUsers(condition: {userId: 2} )  {\n    edges {\n      node {\n        proyectByProyectId {\n          experimentsByProyectId {\n            edges {\n              node {\n                experimentDetailsByExperimentId(condition:{isReady:false}) {\n                  totalCount\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}`)\n\nconst dependientes = new GQL(`{\n  allProyects(condition:{ownerId:2}) {\n    edges {\n      node {\n        proyectsUsersByProyectId {\n          totalCount\n        \n        }\n      }\n    }\n  }\n}`)\n\nconst montos = new GQL(`{\n  allProyects(condition:{ownerId:2}) {\n    edges {\n      node {\n        proyectsUsersByProyectId {\n          totalCount\n        \n        }\n      }\n    }\n  }\n}`)\n\n\n\nclass Dashboard extends Component {\n  state = { money: 0, dependientes: 0, experimentos: 0, encurso: 0 }\n  constructor(props: any) {\n    super(props)\n\n    dependientes.getAll().then((data: any) => {\n      this.setState({ dependientes: data.data.allProyects.edges.reduce((a: number, b: any) => a +  b.node.proyectsUsersByProyectId.totalCount, 0) })\n    })\n \n \n\n    encurso.getAll().then((data: any) => {\n      this.setState({ encurso: data.data.allProyects.edges.reduce((a: number, b: any) => a + b.node.experimentsByProyectId.edges.reduce((c: number, d: any) => c + d.node.experimentDetailsByExperimentId.totalCount,0 ) , 0) })\n    })\n    \n    experiments.getAll().then((data: any) => {\n      this.setState({ experimentos: data.data.allProyects.edges.reduce((a: number, b: any) => a + b.node.experimentsByProyectId.edges.reduce((c: number, d: any) => c + d.node.experimentDetailsByExperimentId.totalCount,0 ) , 0) })\n    })\n \n\n  }\n\n  render() {\n    return <div>\n      <div className=\"row page-titles\">\n        <div className=\"col-md-6 col-8 align-self-center\">\n          <h3 className=\"text-themecolor mb-0 mt-0\">Resumen</h3>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Inicio</a></li>\n            <li className=\"breadcrumb-item active\">Resumen</li>\n          </ol>\n        </div>\n        <div className=\"col-md-6 col-4 align-self-center\">\n\n          <Link to={\"/app/NewExperiment\"} className=\"btn  hidden-sm-down btn-success\"><i className=\"mdi mdi-plus-circle\" /> Solicitar un nuevo experimento </Link>\n \n\n          &nbsp;&nbsp;\n          <a href=\"http://uci-fq.uc.cl/GoToOldSystem\"className=\"btn float-right hidden-sm-down btn-info\"><i className=\"mdi mdi-plus-circle\" /> Ir al portal antiguo </a>\n\n\n        </div>\n      </div>\n      {/* ============================================================== */}\n      {/* End Bread crumb and right sidebar toggle */}\n      {/* ============================================================== */}\n      {/* ============================================================== */}\n      {/* Start Page Content */}\n      {/* ============================================================== */}\n      <div className=\"row\">\n        {/* Column */}\n        <div className=\"col-md-6 col-lg-2 col-xlg-2\">\n          <div className=\"card card-inverse card-info\">\n            <div className=\"box bg-info text-center\">\n              <h1 className=\"font-light text-white\">10 UF</h1>\n              <h6 className=\"text-white\">Monto Disponible</h6>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6 col-lg-2 col-xlg-2\">\n          <div className=\"card card-inverse card-info\">\n            <div className=\"box bg-info text-center\">\n              <h1 className=\"font-light text-white\">10 CR</h1>\n              <h6 className=\"text-white\">Creditos Disponible</h6>\n            </div>\n          </div>\n        </div>\n\n        {/* Column */}\n        <div className=\"col-md-6 col-lg-3 col-xlg-3\">\n          <div className=\"card card-primary card-inverse\">\n            <div className=\"box text-center\">\n              <h1 className=\"font-light text-white\">{this.state.dependientes}</h1>\n              <h6 className=\"text-white\">Dependientes</h6>\n            </div>\n          </div>\n        </div>\n        {/* Column */}\n        <div className=\"col-md-6 col-lg-3 col-xlg-3\">\n          <div className=\"card card-inverse card-success\">\n            <div className=\"box text-center\">\n              <h1 className=\"font-light text-white\">{this.state.experimentos}</h1>\n              <h6 className=\"text-white\">Experimentos</h6>\n            </div>\n          </div>\n        </div>\n        {/* Column */}\n        <div className=\"col-md-6 col-lg-2 col-xlg-2\">\n          <div className=\"card card-inverse card-warning\">\n            <div className=\"box text-center\">\n              <h1 className=\"font-light text-white\">{this.state.encurso}</h1>\n              <h6 className=\"text-white\">Experimentos en curso</h6>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* Row */}\n      <div className=\"row\">\n        {/* Column */}\n\n        <Aprobar />\n      </div>\n\n      <div className=\"col-lg-12\">\n\n        <Resumen />\n\n      </div>\n\n      {/* Row */}\n      {/* Row */}\n      <div className=\"row\">\n\n        {/* Column */}\n\n        {/* Column */}\n      </div>\n      {/* Row */}\n\n      {/* Row */}\n      {/* Row */}\n\n\n    </div>\n\n\n  }\n\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport {GQL} from '../Api';\nimport { Link } from \"react-router-dom\";\n\n\n//const ApiExperiments  =new  Api(\"experiments\")\n\nconst ApiExperiments=new GQL(`{\n  allUsers {\n    edges {\n      node {\n        id\n        name\n        lastName\n        email\n        rut\n        dv\n        rolesUsersByUserId {\n          edges {\n            node {\n              roleByRoleId {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`)\n\n\nfunction parseDate(jsonDateString : string)  {\n  var d= new Date(jsonDateString);\n  return d.getDate() + \"/\" + d.getMonth() + \"/\" + d.getFullYear(); \n}\n\n\nclass Resumen extends Component {\n  state={experiments:[]}\n\n  constructor(props:any) {\n    super(props)\n\n    ApiExperiments.getAll().then((experiments :any) => {  \n\n      console.log(experiments)\n     this.setState({experiments:experiments.data.allUsers.edges}) \n}  )\n    \n\n}\n\n  render() {\n    return (  <div className=\"card\">\n\n    \n    <div className=\"table-responsive\">\n      <table className=\"table table-hover no-wrap\">\n        <thead>\n          <tr>\n            <th className=\"text-center\">#</th>\n            <th>Nombre</th>\n            <th>Apellido</th>\n            <th>Email</th>\n            <th>Rol</th>\n            <th>Rut</th>\n            <th>Editar</th>\n          </tr>\n        </thead>\n        <tbody>\n           {this.state.experiments.map((experiment:any,ix) => {\n          return     <tr key={ix}>\n         \n            <td className=\"text-center\">{experiment.node.id}</td>\n            <td className=\"txt-oflo\">{experiment.node.name}</td>\n            <td className=\"txt-oflo\">{experiment.node.lastName}</td>\n            <td className=\"txt-oflo\">{experiment.node.email}</td>\n           <td className=\"txt-oflo\">{experiment.node.rolesUsersByUserId.edges.map((role :any ,ix:number )=>{return  <div key={ix}> {role.node.roleByRoleId.name} </div> }) }</td>\n            <td className=\"txt-oflo\">{experiment.node.rut}-{experiment.node.dv}</td>\n\n            <td className=\"txt-oflo\"> <Link to={\"/app/users/\"+experiment.node.id} >  Editar </Link></td>\n       \n          </tr>     \n          })} \n          \n        </tbody>\n      </table>\n    </div>\n  </div>\n)\n\n    }\n}\nexport default Resumen;\n","import React, { Component } from 'react';\nimport Resumen from './resumen';\n\n\nclass Users extends Component {\n\n  render() {\n    return <div>\n      <div className=\"row page-titles\">\n        <div className=\"col-md-6 col-8 align-self-center\">\n          <h3 className=\"text-themecolor mb-0 mt-0\">Usuarios</h3>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Inicio</a></li>\n            <li className=\"breadcrumb-item active\">Listar usuarios</li>\n          </ol>\n        </div>\n\n      </div>\n\n      <div className=\"col-lg-12\">\n\n        <Resumen />\n\n      </div>\n\n\n\n    </div>\n\n\n  }\n\n}\n\nexport default Users;\n","import { Link } from \"react-router-dom\";\n\nimport React, { Component, Props } from 'react';\nimport Resumen from './resumen';\nimport { GQL } from \"../Api\";\nimport { any } from \"prop-types\";\nimport Users from \"./users\";\n\n\nclass EditUserId extends Component<{ user: any, roles: any }> {\n    user: any\n\n    constructor(props: any) {\n        super(props)\n\n\n        this.user = props.user\n    }\n\n    check(rol:any,user:any){\n\n        for(let user_rol of user.rolesUsersByUserId.edges){\n            if(user_rol.node.roleId == rol.node.id){\n                return true\n            }\n        }\n        return false\n\n\n    }\n\n    render() {\n        return <div className=\"card card-outline-info\">\n            <div className=\"card-header\">\n                <h4 className=\"mb-0 text-white\">{this.user.name} {this.user.lastName}</h4>\n            </div>\n            <div className=\"card-body\">\n                <form action=\"#\" className=\"form-horizontal\">\n                    <div className=\"form-body\">\n                        <h3 className=\"box-title\">Información Personal</h3>\n                        <hr className=\"mt-0 mb-5\" />\n                        <div className=\"row\">\n                            <div className=\"col-lg-6 col-md-12\">\n                                <div className=\"form-group row\">\n                                    <label className=\"col-sm-3 text-right col-form-label\">Nombre</label>\n                                    <div className=\"col-md-9\">\n                                        <input type=\"text\" className=\"form-control\" defaultValue={this.user.name} />\n                                    </div>\n                                </div>\n                            </div>\n                            {/*/span*/}\n                            <div className=\"col-lg-6 col-md-12\">\n                                <div className=\"form-group  row\">\n                                    <label className=\"control-label text-right col-md-3\">Apellido</label>\n                                    <div className=\"col-md-9\">\n                                        <input type=\"text\" className=\"form-control form-control-danger\" defaultValue={this.user.lastName} />\n                                    </div>\n                                </div>\n                            </div>\n                            {/*/span*/}\n                        </div>\n                        {/*/row*/}\n\n                        <div className=\"row\">\n                            <div className=\"col-lg-6 col-md-12\">\n                                <div className=\"form-group row\">\n                                    <label className=\"col-sm-3 text-right col-form-label\">Email</label>\n                                    <div className=\"col-md-9\">\n                                        <input type=\"text\" className=\"form-control\" defaultValue={this.user.email} />\n                                    </div>\n                                </div>\n                                <div className=\"form-group row\">\n                                    <label className=\"col-sm-3 text-right col-form-label\">Limite</label>\n                                    <div className=\"col-md-9\">\n                                        <input type=\"text\" className=\"form-control\" defaultValue={this.user.limit} />\n                                    </div>\n                                </div>\n                                \n                            </div>\n                            {/*/span*/}\n                            <div className=\"col-lg-6 col-md-12\">\n                            <div className=\"form-group row\">\n                                    <label className=\"col-sm-3 text-right col-form-label\">Creditos</label>\n                                    <div className=\"col-md-9\">\n                                        <input type=\"text\" className=\"form-control\" defaultValue={this.user.credit} />\n                                    </div>\n                                </div>\n                                <div className=\"form-group  row\">\n                                    <label className=\"control-label text-right col-md-3\">Contraseña</label>\n                                    <div className=\"col-md-9\">\n                                        <input type=\"password\" className=\"form-control\" defaultValue=\"\" />\n                                    </div>\n                                </div>\n                            </div>\n                            {/*/span*/}\n                        </div>\n                        {/*/row*/}\n\n\n\n\n                        <div className=\"row\">\n                            <div className=\"col-lg-6 col-md-12\">\n                                <div className=\"form-group row\">\n                                    <label className=\"control-label text-right col-md-3\">Dirección</label>\n                                    <div className=\"col-md-9\">\n                                        <input type=\"text\" className=\"form-control\" defaultValue={this.user.address} />\n                                    </div>\n                                </div>\n                            </div>\n                            {/*/span*/}\n                            <div className=\"col-lg-6 col-md-12\">\n                                <div className=\"form-group row\">\n                                    <label className=\"control-label text-right col-md-3\">Categorias</label>\n                                    <div className=\"col-md-9\">\n                                        <div className=\"mb-2\">\n                                            {this.props.roles.map((rol: any, ix: number) => <div className=\"custom-control custom-checkbox\" key={ix}>\n                                                <input type=\"checkbox\" className=\"custom-control-input\" defaultChecked={this.check(rol,this.user )} id={\"customCheck\"+ix} />\n                                                <label className=\"custom-control-label\" htmlFor={\"customCheck\"+ix} >{rol.node.name}</label>\n                                            </div>)\n                                            }\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            {/*/span*/}\n                        </div>\n\n                        <hr />\n                        <div className=\"form-actions\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-offset-3 col-md-9\">\n                                            <button type=\"submit\" className=\"btn btn-success\">Actualizar cambios </button>\n                                            <button type=\"button\" className=\"btn btn-inverse\">Cancel</button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6\"> </div>\n                            </div>\n                        </div>\n\n\n\n                        <h3 className=\"box-title\">Proyectos</h3>\n                        <hr className=\"mt-0 mb-5\" />\n                        {/*/row*/}\n                        <div className=\"row\">\n                            <div className=\"col-lg-12 col-md-12\">\n\n                                <div className=\"table-responsive\">\n                                    <table className=\"table no-wrap\">\n                                        <thead>\n                                            <tr>\n                                                <th>#</th>\n                                                <th>Proyecto</th>\n                                                <th>Responsable </th>\n                                                <th>Activado/por </th>\n                                                <th>Desactivado</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.user.proyectsUsersByUserId.edges.map((proyect: any, ix: number) => {\n                                                return <tr key={ix}>\n                                                    <td> {proyect.node.proyectByProyectId.id}</td>\n                                                    <td>{proyect.node.proyectByProyectId.name}</td>\n                                                    <td> {proyect.node.proyectByProyectId.userByOwnerId.name} {proyect.node.proyectByProyectId.userByOwnerId.lastName} </td>\n                                                    <td>{proyect.node.proyectByProyectId.activateTime ? null : \"Aun no aceptado\"} {proyect.node.proyectByProyectId.userByActivateBy ? <div>{proyect.node.proyectByProyectId.userByActivateBy.name} {proyect.node.proyectByProyectId.userByActivateBy.lastName}</div> : null}</td>\n                                                    <td><span className=\"label label-danger\">Desactivar</span> </td>\n                                                </tr>\n                                            })}\n\n                                            {this.user.proyectsByOwnerId.edges.map((proyect: any, ix: number) => {\n                                                return <tr key={ix}>\n                                                    <td> {proyect.node.id}</td>\n                                                    <td>{proyect.node.name}</td>\n                                                    <td> {this.user.name} {this.user.lastName} </td>\n                                                    <td> </td>\n                                                    <td><span className=\"label label-info\">Propio</span> </td>\n                                                </tr>\n                                            })}\n\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                        {/*/row*/}\n                    </div>\n\n                    <hr />\n                    <div className=\"form-actions\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-offset-3 col-md-9\">\n                                        <button type=\"submit\" className=\"btn btn-success\">Agregar nuevo proyecto como colaborador</button>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-6\"> </div>\n                        </div>\n                    </div>\n\n\n\n                </form>\n            </div>\n        </div>\n\n\n\n\n    }\n\n}\n\nexport default EditUserId;\n","import { Link } from \"react-router-dom\";\n\nimport React, { Component } from 'react';\nimport Resumen from './resumen';\nimport EditUserId from \"./edituser\";\nimport { GQL } from \"../Api\";\n\n\nclass EditUser extends Component<{match:any}> {\n  user : any\n  state={load:false,user:null,roles:[]}\n  constructor(props :any){\n      super(props)\n      this.user= new GQL(`{\n        allRoles {\n          edges {\n            node {\n              id\n              name\n            }\n          }\n        }\n        allUsers(condition: {id: ${+props.match.params.id}}, first: 1) {\n          edges {\n            node {\n              id\n              name\n              lastName\n              email\n              address\n              rut\n              dv\n              limit\n              credit\n              createdAt\n              updatedAt\n              rolesUsersByUserId {\n                edges {\n                  node {\n                    roleId\n                  }\n                }\n              }\n              proyectsUsersByUserId {\n                edges {\n                  node {\n                    proyectByProyectId {\n                      id\n                      name\n                      userByOwnerId {\n                        id\n                        name\n                        lastName\n                      }\n                    }\n                    userByActivateBy {\n                      id\n                      name\n                      lastName\n                      email\n                    }\n                    activateTime\n                    desactiveBy\n                    userByDesactiveBy {\n                      id\n                      name\n                      lastName\n                      email\n                    }\n                  }\n                }\n              }\n              proyectsByOwnerId {\n                edges {\n                  node {\n                    id\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }      \n      `)\n      this.user.getAll().then((user:any) => {  this.setState({load:true,user:user.data.allUsers.edges[0].node,roles:user.data.allRoles.edges })})\n\n\n\n    }\n\n  render() {\n    return <div>\n      <div className=\"row page-titles\">\n        <div className=\"col-md-6 col-8 align-self-center\">\n          <h3 className=\"text-themecolor mb-0 mt-0\">Usuarios</h3>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Inicio</a></li>\n            <li className=\"breadcrumb-item active\">Editar usuarios</li>\n          </ol>\n        </div>\n\n      </div>\n\n      <div className=\"col-lg-12\">\n\n   {this.state.load ?<EditUserId user={this.state.user} roles={this.state.roles} />:null}\n\n\n      </div>\n\n\n\n    </div>\n\n\n  }\n\n}\n\nexport default EditUser;\n","import { Link } from \"react-router-dom\";\n\nimport React, { Component } from 'react';\n\nimport { GQL } from \"../Api\";\nimport { any } from \"prop-types\";\n\n\ninterface Node {\n    id: number;\n    name: string;\n    file: string;\n    __typename: string;\n}\n\ninterface Edge {\n    node: Node;\n    __typename: string;\n}\n\ninterface ExperimentDetailsByExperimentId {\n    edges: Edge[];\n    __typename: string;\n}\n\ninterface UserByOwnerId {\n    id: number;\n    name: string;\n    lastName: string;\n    __typename: string;\n}\n\ninterface UserByOwnerId2 {\n    id: number;\n    name: string;\n    lastName: string;\n    __typename: string;\n}\n\ninterface ProyectByProyectId {\n    id: number;\n    name: string;\n    userByOwnerId: UserByOwnerId2;\n    __typename: string;\n}\n\ninterface RootObject {\n    id: number;\n    experimentDetailsByExperimentId: ExperimentDetailsByExperimentId;\n    userByOwnerId: UserByOwnerId;\n    proyectByProyectId: ProyectByProyectId;\n    __typename: string;\n}\n\n\nclass Files extends Component<{experiments:any},{experiments:RootObject}> {\n\n\n  constructor(props :any){\n      super(props)\n      this.state={experiments : props.experiments as RootObject}\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps:any){\n        this.setState({experiments : nextProps.experiments as RootObject})\n\n\n    }\n    \n\n  render() {\n    return <div className=\"row\">\n    <div className=\"col-sm-12\">\n      <div className=\"card card-body\">\n        <h4 className=\"card-title\">Cargando muestra # {this.state.experiments.id} para {this.state.experiments.userByOwnerId.name} {this.state.experiments.userByOwnerId.lastName}  </h4>\n        <h5 className=\"card-subtitle\"> Proyecto {this.state.experiments.proyectByProyectId.name} Responsable {this.state.experiments.proyectByProyectId.userByOwnerId.name} {this.state.experiments.proyectByProyectId.userByOwnerId.lastName}  </h5>\n        <div className=\"row\">\n          <div className=\"col-sm-6 col-xs-12\">\n            <form className=\"form-horizontal row\">\n              <div className=\"col-12\">\n                \n              <div className=\"table-responsive\">\n                                    <table className=\"table no-wrap\">\n                                        <thead>\n                                            <tr>\n                                                <th>Posicion </th>\n                                                <th>Nombre</th>\n                                                <th>Archivo </th>\n                                                <th>Opciones </th>\n                                              \n                                            \n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                           {this.state.experiments.experimentDetailsByExperimentId.edges.map((experiment:Edge,ix:number)=>{\n                                                return   <tr key={ix}>\n                                                <td> {ix+1 }</td>\n                                                <td> {experiment.node.name }</td>\n                                                <td> {experiment.node.file }</td>\n\n                                                <td><span className=\"label label-success\">Seleccionar</span> <span className=\"label label-info\">Enviar RMN200</span> </td>\n                                            </tr> })} \n  {/* \n\n                                            {this.user.proyectsByOwnerId.edges.map((proyect:any,ix:number)=>{\n                                                return   <tr key={ix}>\n                                                <td> {proyect.node.id }</td>\n                                                <td>{proyect.node.name }</td>\n                                                <td> {this.user.name } {this.user.lastName } </td>\n                                                <td> </td>\n                                                <td><span className=\"label label-danger\">Desactivar</span> </td>\n                                            </tr> })} */}\n                                            \n                                        </tbody>\n                                    </table>\n                                </div>\n                           \n\n              </div>\n            </form>\n       \n          </div>\n          <div className=\"col-sm-5 offset-sm-1 col-xs-12\">\n            \n          <div className=\"table-responsive\">\n                                    <table className=\"table no-wrap\">\n                                        <thead>\n                                            <tr>\n                                                <th>#</th>\n                                                <th>Archivo </th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                          {/* {this.state.data.map((data:any,ix:number)=>{\n                                                return   <tr key={ix}>\n                                                <td> {data.node.id }</td>\n                                                <td> {data.node.userByOwnerId.name } {data.node.userByOwnerId.lastName } </td>\n                                                <td> {data.node.proyectByProyectId.name }</td>\n                                                <td> {data.node.proyectByProyectId.userByOwnerId.name }  {data.node.proyectByProyectId.userByOwnerId.lastName }</td>\n\n                                                <td><span className=\"label label-success\">Seleccionar</span> <span className=\"label label-info\">Enviar RMN200</span> </td>\n                                            </tr> })} */}\n  {/* \n\n                                            {this.user.proyectsByOwnerId.edges.map((proyect:any,ix:number)=>{\n                                                return   <tr key={ix}>\n                                                <td> {proyect.node.id }</td>\n                                                <td>{proyect.node.name }</td>\n                                                <td> {this.user.name } {this.user.lastName } </td>\n                                                <td> </td>\n                                                <td><span className=\"label label-danger\">Desactivar</span> </td>\n                                            </tr> })} */}\n                                            \n                                        </tbody>\n                                    </table>\n                                </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  }\n\n}\n\nexport default Files;","import { Link } from \"react-router-dom\";\n\nimport React, { Component } from 'react';\n\nimport { GQL } from \"../Api\";\nimport Files from \"./files\";\n\n\nclass Upload extends Component<{match:any}> {\n  experiments : any\n  state={load:false,data:[],experiments:null}\n  constructor(props :any){\n      super(props)\n      this.experiments= new GQL(`{\n        allExperiments(first:100,orderBy:ID_DESC,condition:{machineId:1}) {\n          edges {\n            node {\n              id\n              experimentDetailsByExperimentId(condition:{isReady:true}) {\n                edges {\n                  node {\n                    id\n                    name\n                    file\n                  }\n                }\n              }\n              userByOwnerId {\n                id\n                name\n                lastName\n              }\n              proyectByProyectId {\n                id\n                name\n                userByOwnerId {\n                  id\n                  name\n                  lastName\n                }\n              }\n            }\n          }\n        }\n      }    \n      `)\n      this.experiments.getAll().then((user:any) => {  this.setState({load:true,data:user.data.allExperiments.edges })})\n\n\n\n    }\n\n  render() {\n    return <div>\n      <div className=\"row page-titles\">\n        <div className=\"col-md-6 col-8 align-self-center\">\n          <h3 className=\"text-themecolor mb-0 mt-0\">Cargar resultados de RMN400</h3>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Inicio</a></li>\n            <li className=\"breadcrumb-item active\">carga de resultado</li>\n          </ol>\n        </div>\n\n      </div>\n\n      <div className=\"col-lg-12\">\n\n\n      <div className=\"card card-outline-info\">\n      \n            <div className=\"card-body\">\n                <form action=\"#\" className=\"form-horizontal\">\n                    <div className=\"form-body\">\n                        \n                        \n                       {this.state.experiments?<Files experiments={this.state.experiments}/>:null}\n\n                        <h3 className=\"box-title\">Experimentos</h3>\n                        <hr className=\"mt-0 mb-5\" />\n                        {/*/row*/}\n                        <div className=\"row\">\n                            <div className=\"col-lg-12 col-md-12\">\n\n                                <div className=\"table-responsive\">\n                                    <table className=\"table no-wrap\">\n                                        <thead>\n                                            <tr>\n                                                <th>#</th>\n                                                <th>Usuario </th>\n                                                <th>Proyecto</th>\n                                                <th>Responsable </th>\n                                                <th>Opciones </th>\n                                              \n                                            \n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                          {this.state.data.map((data:any,ix:number)=>{\n                                                return   <tr key={ix}>\n                                                <td> {data.node.id }</td>\n                                                <td> {data.node.userByOwnerId.name } {data.node.userByOwnerId.lastName } </td>\n                                                <td> {data.node.proyectByProyectId.name }</td>\n                                                <td> {data.node.proyectByProyectId.userByOwnerId.name }  {data.node.proyectByProyectId.userByOwnerId.lastName }</td>\n                                                <td><span onClick={()=>{ this.setState({experiments:data.node})} } className=\"label label-success\">Seleccionar</span> <span className=\"label label-info\">Enviar RMN200</span> </td>\n                                            </tr> })}\n \n                                            \n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                        {/*/row*/}\n                    </div>\n\n                    <hr />\n                    <div className=\"form-actions\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-offset-3 col-md-9\">\n                                        <button type=\"submit\" className=\"btn btn-success\">Agregar nuevo proyecto</button>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-6\"> </div>\n                        </div>\n                    </div>\n\n\n\n                </form>\n            </div>\n        </div>\n\n\n\n      </div>\n\n\n\n    </div>\n\n\n  }\n\n}\n\nexport default Upload;","import React, { Component } from 'react';\nimport Api, { GQL } from \"../Api\";\n\nconst send = new Api(\"createExperiment\")\n\n\nclass RMN extends Component{\n\n\n  constructor(props) {\n    super(props)\n\n    // this.state = { load: false, machines: [], owned: [], proyects: [] }\n  this.state={machine:null,experiment : this.DefaultState() ,experiments : [] }\n    this.user = new GQL(`\n      {\n        allProyectsCredits(condition: {id: ${this.props.proyect_id}}) {\n          edges {\n            node {\n              id\n              name\n              lastName\n              proyect\n              available\n              credit\n            }\n          }\n        }\n        allMachines(condition:{id:2}) {\n          edges {\n            node {\n              id\n              name\n            }\n          }\n        }\n      }       \n      `)\n    //   this.state = {machines:{} as AllMachines }\n    this.user.getAll().then((out) => { this.setState({ machine: out.data.allMachines.edges, amount: +out.data.allProyectsCredits.edges[0].node.credit  }) })\n\n\n\n  }\n\n  Price(name){\n    let bidimensional = [\"cosy\",\"tocsy\",\"hsqc= obj.hmbc\",\"noesy\"]\n\n    if (bidimensional.includes(name)){\n        return 2\n    }\n    return 1 \n\n  }\n\n  DefaultState(){\n    let obj ={}\n    obj.name=\"\"\n    obj.solvente=\"\"\n    obj.preparete=1\n    obj.observate=\"\"\n    obj.recovery = true\n    obj.H1 =obj.C13 = obj.dept = obj.cosy = obj.tocsy = obj.hsqc= obj.hmbc = obj.noesy  =false\n    obj.B11 = obj.F19 = obj.P31 = obj.Si29 = obj.Pt125 =obj.Li7 = obj.Al27  = obj.Ag109 = obj.Otro = false\n    return obj\n\n  }\n\n  handlePreparete(num) {\n    let obj = this.state.experiment\n    obj.preparete = num\n    this.setState({ experiment: obj })\n\n  }\n\n  handleRecovery(recovery) {\n     let obj = this.state.experiment\n      obj.recovery = recovery\n    \n    this.setState({ experiment: obj })\n  }\n\n  handleOption(option){\n        let obj = this.state.experiment\n        obj[option] = !obj[option] \n        let amount = this.state.amount\n        if (  obj[option] ){\n          amount = amount-this.Price(option)\n        } \n        else{\n          amount = amount+this.Price(option)\n        }\n\n\n        this.setState({ experiment: obj,amount:amount })\n\n  }\n\n  handleName(event){\n    let obj = this.state.experiment\n    obj.name = event.target.value\n    this.setState({ experiment: obj })\n  }\n\n  handleObservate(event){\n    let obj = this.state.experiment\n    obj.observate = event.target.value\n    this.setState({ experiment: obj })\n  }\n\n  handleSolvent(event) {\n    let obj = this.state.experiment\n    obj.solvente = event.target.value\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    // alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n    let obj = JSON.parse(JSON.stringify (this.state.experiment) )\n    this.state.experiments.push(obj)\n    let exp = this.DefaultState()\n    this.setState({experiment:exp})\n  }\n  handleSend(event) {\n    // alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n    send.new({user_id : 1 , machine_id: +this.props.machine_id,experiments: this.state.experiments, proyect_id: +this.props.proyect_id })\n    \n\n  }\n\n\n  handleLast(){\n      this.state.experiments.pop()\n      this.setState({})\n  }\n\n  render() {\n    return <div className=\"col-lg-12\">\n\n\n        <div className=\"card card-outline-info\">\n\n          <div className=\"card-body\">\n            <form  className=\"form-horizontal\" onSubmit={(e)=> this.handleSubmit(e)}>\n              <div className=\"form-body\" >\n                <h3 className=\"box-title float-left \">{ this.state.machine!=null? this.state.machine[0].node.name :null }                            </h3>\n                <h2 className=\"box-title  float-right\">                   Creditos disponibles :    { this.state.amount!=null? this.state.amount :null }          </h2>\n              \n                <div className=\"form-horizontal\">\n        <div className=\"panel panel-default\">\n          <div className=\"panel-heading\">\n            <p className=\"mb20\"></p>\n            <div className=\"table-responsive\">\n              <table className=\"table mb30\">\n                <thead>\n                  <tr>\n                    <th> <label htmlFor=\"nombre_de_muestra\">Nombre de la muestra</label></th>\n                    <th> <label htmlFor=\"solvente\">Solvente</label></th>\n                    <th> <label htmlFor=\"preparacion_muestra\">Preparacion de la muestra</label></th>\n                    <th> <label htmlFor=\"Observaciones\">Observaciones/Cinetica u otros </label></th>\n                    <th> <label htmlFor=\"devolucion\">Recuperación la muestra</label></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td><input value={this.state.experiment.name} onChange={(e)=>{this.handleName(e)} }  className=\"form-control ng-pristine ng-valid ng-touched\" id=\"nombre_de_muestra\" name=\"nombre_de_muestra\" ng-model=\"test.nombre_de_muestra\" type=\"text\"  /></td>\n                    <td><select className=\"form-control ng-pristine ng-untouched ng-valid\"  onChange={(e)=> this.handleSolvent(e)}>                        \n                    <option value=\"\"></option>\n                        <option value=\"Cloroformo-d1\">Cloroformo-d1</option>\n                        <option value=\"DMSO-d6\">DMSO-d6</option>\n                        <option value=\"D2O\">D2O</option>\n                        <option value=\"Acetona-d6\">Acetona-d6</option>\n                        <option value=\"Acido acetico-d4\">Acido acetico-d4</option>\n                        <option value=\"Acido F3-Acetico-d1\">Acido F3-Acetico-d1</option>\n                        <option value=\"Aceto nitrilo-d3\">Aceto nitrilo-d3</option>\n                        <option value=\"Benceno-d6\">Benceno-d6</option>\n                        <option value=\"Ciclohexano-d12\">Ciclohexano-d12</option>\n                        <option value=\"Diclorometano-d2\">Diclorometano-d2</option>\n                        <option value=\"Dietileter-d10\">Dietileter-d10</option>\n                        <option value=\"Diohexano-d6\">Diohexano-d6</option>\n                        <option value=\"DCl\">DCl</option>\n                        <option value=\"D2So4\">D2So4</option>\n                        <option value=\"Etanol-d6\">Etanol-d6</option>\n                        <option value=\"Metanol-d4\">Metanol-d4</option>\n                        <option value=\"Nitrobenceno-d5\">Nitrobenceno-d5</option>\n                        <option value=\"nitrometano-d3\">nitrometano-d3</option>\n                        <option value=\"Propanol-d8\">Propanol-d8</option>\n                        <option value=\"Piridina-d5\">Piridina-d5</option>\n                        <option value=\"Tolueno-d8\">Tolueno-d8</option>\n                        <option value=\"THF-d8\">THF-d8</option>\n                        <option value=\"DMF-d7\">DMF-d7</option>\n                        <option value=\"Otro\">Otro</option></select></td>\n                    <td><div ><label><input type=\"checkbox\" onClick={(e)=>{this.handlePreparete(1) }} checked={this.state.experiment.preparete==1}/> Lista en tubo</label></div>\n                      <div ><label><input type=\"checkbox\"  onClick={(e)=>{this.handlePreparete(2) }} checked={this.state.experiment.preparete==2} /> Muestra en solvente deulterado (Requiere tubo)</label></div>\n                      <div ><label><input type=\"checkbox\"  onClick={(e)=>{this.handlePreparete(3) }} checked={this.state.experiment.preparete==3} /> Preparación UCI-FQ (se añade solvente y tubo)</label></div></td>\n                    <td><textarea value={this.state.experiment.solvente} onChange={(e)=>{this.handleObservate(e)} }   className=\"form-control ng-pristine ng-untouched ng-valid\" id=\"Observaciones\" name=\"Observaciones\" ng-model=\"test.Observaciones\" rows={1} value={\"\"} /></td>\n                    <td><div ><label><input type=\"checkbox\"  onClick={(e)=>{this.handleRecovery(true) }  } checked={this.state.experiment.recovery} />SI</label></div>\n                      <div ><label><input type=\"checkbox\" onClick={(e)=>{this.handleRecovery(false) }  } checked={!this.state.experiment.recovery} />NO</label></div></td>\n                  </tr>\n                </tbody>\n              </table>\n              <table className=\"table mb30\">\n                <thead>\n                  <tr>\n                    <th> <label htmlFor=\"H1\">H1</label></th>\n                    <th> <label htmlFor=\"C13\">C13</label></th>\n                    <th> <label htmlFor=\"dept\">DEPT</label></th>\n                    <th> <label htmlFor=\"cosy\">COSY</label></th>\n                    <th> <label htmlFor=\"tocsy\">TOCSY</label></th>\n                    <th> <label htmlFor=\"HMQC\">HSQC</label></th>\n                    <th> <label htmlFor=\"HMBC\">HMBC</label></th>\n                    <th> <label htmlFor=\"NOESY\">NOESY</label></th>\n                    <th> <label htmlFor=\"OtrosNucleos\">OtrosNucleos</label></th>\n                  </tr>\n                  <tr>\n                    <td><input onClick={(e)=>this.handleOption(\"H1\")  } id=\"H1\" name=\"H1\" ng-model=\"test.H1\" type=\"checkbox\" checked={this.state.experiment.H1} className=\"ng-pristine ng-untouched ng-valid\" /></td>\n                    <td><input onClick={(e)=>this.handleOption(\"C13\")  } id=\"C13\" name=\"C13\" ng-model=\"test.C13\" type=\"checkbox\" checked={this.state.experiment.C13} className=\"ng-pristine ng-untouched ng-valid\" /></td>\n                    <td><input onClick={(e)=>this.handleOption(\"dept\")  } id=\"dept\" name=\"dept\" ng-model=\"test.dept\" type=\"checkbox\" checked={this.state.experiment.dept} className=\"ng-pristine ng-untouched ng-valid\" /></td>\n                    <td><input onClick={(e)=>this.handleOption(\"cosy\")  } id=\"cosy\" name=\"cosy\" ng-model=\"test.cosy\" type=\"checkbox\" checked={this.state.experiment.cosy} className=\"ng-pristine ng-untouched ng-valid\" /></td>\n                    <td><input onClick={(e)=>this.handleOption(\"tocsy\")  } id=\"tocsy\" name=\"tocsy\" ng-model=\"test.tocsy\" type=\"checkbox\" checked={this.state.experiment.tocsy} className=\"ng-pristine ng-untouched ng-valid\" /></td>\n                    <td><input onClick={(e)=>this.handleOption(\"hsqc\")  } id=\"HMQC\" name=\"HMQC\" ng-model=\"test.HMQC\" type=\"checkbox\" checked={this.state.experiment.hsqc} className=\"ng-pristine ng-untouched ng-valid\" /></td>\n                    <td><input onClick={(e)=>this.handleOption(\"hmqc\")  } id=\"HMBC\" name=\"HMBC\" ng-model=\"test.HMBC\" type=\"checkbox\" checked={this.state.experiment.hmqc} className=\"ng-pristine ng-untouched ng-valid\" /></td>\n                    <td><input onClick={(e)=>this.handleOption(\"noesy\")  } id=\"NOESY\" name=\"NOESY\" ng-model=\"test.NOESY\" type=\"checkbox\" checked={this.state.experiment.noesy} className=\"ng-pristine ng-untouched ng-valid\" /></td>\n                    <td>   \n                        <div ><label><input checked={this.state.experiment.B11}  onClick={(e)=>this.handleOption(\"B11\")  }  type=\"checkbox\"  /> B11</label></div>\n                      <div ><label><input checked={this.state.experiment.F19}  onClick={(e)=>this.handleOption(\"F19\")  }  type=\"checkbox\"  /> F19</label></div>\n                      <div ><label><input checked={this.state.experiment.P31}  onClick={(e)=>this.handleOption(\"P31\")  }  type=\"checkbox\"  /> P31</label></div>\n                      <div ><label><input checked={this.state.experiment.Si29}  onClick={(e)=>this.handleOption(\"Si29\")  }  type=\"checkbox\" /> Si29</label></div>\n                      <div ><label><input checked={this.state.experiment.Pt125}  onClick={(e)=>this.handleOption(\"Pt125\")  }  type=\"checkbox\" /> Pt125</label></div>\n                      <div ><label><input checked={this.state.experiment.Li7}  onClick={(e)=>this.handleOption(\"Li7\")  }  type=\"checkbox\" /> Li7</label></div>\n                      <div ><label><input checked={this.state.experiment.Al27}  onClick={(e)=>this.handleOption(\"Al27\")  }  type=\"checkbox\" /> Al27</label></div>\n                      <div ><label><input checked={this.state.experiment.Ag109}  onClick={(e)=>this.handleOption(\"Ag109\")  }  type=\"checkbox\" /> Ag109</label></div>\n\n                      \n                      <div ><label><input checked={this.state.experiment.Otro}  onClick={(e)=>this.handleOption(\"Otro\")  }  type=\"checkbox\" /> Otro</label></div>\n                    </td>\n                  </tr>\n                </thead></table>\n            </div>{/* panel-body */}\n \n          </div>{/* panel-default */}\n        </div>\n      </div>\n\n                <hr />\n                <div className=\"form-actions\">\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <div className=\"row\">\n                        <div className=\"col-md-offset-3 col-md-9\">\n                          <button type=\"submit\" className=\"btn btn-success\">Agregar </button>\n                          <button type=\"button\" className=\"btn btn-inverse\">Cancel</button>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\"> </div>\n                  </div>\n                </div>\n\n\n\n\n              </div>\n\n\n\n            </form>\n          </div>\n        \n        \n        \n        </div>\n\n\n        <div className=\"card card-outline-info\">\n\n{this.state.experiments.length?<div className=\"card-body\">\n  <form  className=\"form-horizontal\" onSubmit={(e)=> this.handleSend(e)}>\n    \n  <div className=\"form-horizontal\">\n        <div className=\"panel panel-default\">\n          <div className=\"panel-heading\">\n            <div className=\"table-responsive\">\n              <table className=\"table mb30\">\n                <thead>\n                  <tr><th> <label htmlFor=\"nombre_de_muestra\">Numero </label></th>\n                    <th> <label htmlFor=\"nombre_de_muestra\">Muestra</label></th>\n                    <th> <label htmlFor=\"nombre_de_muestra\">Costo Presupuestado</label></th>\n                  </tr></thead>\n                <tbody>\n                 {this.state.experiments.map((experiment,ix)=><tr key={ix} className=\"ng-scope\">\n                    <th className=\"ng-binding\">{ix+1}</th>\n                    <th className=\"ng-binding\">{experiment.name}</th>\n                    <th className=\"ng-binding\">100</th>\n                 </tr> )}\n                </tbody>\n              </table>\n            </div>{/* table-responsive */}\n            <div className=\"panel-footer\">\n              <button className=\"btn btn-success mr5\" >Enviar orden</button>\n              <button className=\"btn btn-danger\" onClick={()=>{ this.handleLast()}  } >Eliminar Ultimo</button>\n            </div>{/* panel-footer */}\n          </div>{/* table-responsive */} </div>{/* table-responsive */}\n      </div>\n\n  </form>\n</div>:null}\n\n\n\n</div>\n\n\n\n      </div>\n\n\n \n\n\n  }\n\n}\n\nexport default RMN;","\nimport React, { Component } from 'react';\nimport { GQL } from \"../Api\";\nimport { thisTypeAnnotation } from '@babel/types';\nimport RMN from './rmn';\n\ninterface Node {\n  id: number;\n  name: string;\n}\n\ninterface Machines {\n  node: Node;\n}\n\ninterface AllMachines {\n  edges: Machines[];\n}\n\ninterface UserByOwnerId {\n  id: number;\n  name: string;\n  lastName: string;\n}\n\ninterface Node2 {\n  id: number;\n  name: string;\n  userByOwnerId: UserByOwnerId;\n}\n\ninterface Edge2 {\n  node: Node2;\n}\n\ninterface AllProyects {\n  edges: Edge2[];\n}\n\ninterface UserByOwnerId2 {\n  name: string;\n  lastName: string;\n}\n\ninterface ProyectByProyectId {\n  name: string;\n  userByOwnerId: UserByOwnerId2;\n}\n\ninterface Node3 {\n  proyectByProyectId: ProyectByProyectId;\n}\n\ninterface Edge3 {\n  node: Node3;\n}\n\ninterface AllProyectsUsers {\n  edges: Edge3[];\n}\n\ninterface Data {\n  allMachines: AllMachines;\n  allProyects: AllProyects;\n  allProyectsUsers: AllProyectsUsers;\n}\n\nexport interface RootObject {\n  data: Data;\n}\n\n\nclass NewExperiment extends Component<{}, { load: boolean, machines: Machines[], owned: Edge2[], proyects: Edge3[], proyect_id: number, machine: number }> {\n  user: any\n\n\n  constructor(props: any) {\n    super(props)\n\n    this.state = { load: false, machines: [], owned: [], proyects: [],proyect_id:0 , machine:0 }\n    //   this.state={machines:[] as Machines ,owned:null,proyects:null}\n    this.user = new GQL(`{\n        allMachines(condition:{enabled:true}) {\n          edges {\n            node {\n              id\n              name\n            }\n          }\n        }\n        allProyects(condition: {ownerId: 1}) {\n          edges {\n            node {\n              id\n              name\n              userByOwnerId {\n                id\n                name\n                lastName\n              }\n            }\n          }\n        }\n        allProyectsUsers(condition: {userId: 1}) {\n          edges {\n            node {\n              proyectByProyectId {\n                name\n                userByOwnerId {\n                  name\n                  lastName\n                }\n              }\n            }\n          }\n        }\n      }       \n      `)\n    //   this.state = {machines:{} as AllMachines }\n    this.user.getAll().then((out: any) => { this.setState({ machines: out.data.allMachines.edges as Machines[], owned: out.data.allProyects.edges as Edge2[], proyects: out.data.allProyectsUsers.edges as Edge3[] }) })\n\n\n\n  }\n\n  handleProyect(event: any) {\n    this.setState({ proyect_id: event.target.value })\n\n  }\n\n  handleMachine(event: any) {\n    this.setState({ machine: event.target.value })\n  }\n\n\n  handleSubmit(event: any) {\n    event.preventDefault();\n    this.setState({load:true})\n\n  }\n\n\n\n  render() {\n    return <div>\n      <div className=\"row page-titles\">\n        <div className=\"col-md-6 col-8 align-self-center\">\n          <h3 className=\"text-themecolor mb-0 mt-0\">Crear un nuevo  Experimento</h3>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Inicio</a></li>\n            <li className=\"breadcrumb-item active\">Nuevo experimento</li>\n          </ol>\n        </div>\n\n      </div>\n\n      <div className=\"col-lg-12\">\n\n\n        <div className=\"card card-outline-info\">\n\n          <div className=\"card-body\">\n            <form action=\"#\" className=\"form-horizontal\" onSubmit={(e:any) => this.handleSubmit(e)   }>\n              <div className=\"form-body\">\n                <h3 className=\"box-title\">Información Personal                                 </h3>\n                <hr className=\"mt-0 mb-3\" />\n                <div className=\"row\">\n                  <div className=\"col-lg-12 col-md-12\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-sm-3 text-right col-form-label\">Maquina</label>\n                      <div className=\"col-md-9\">\n                        <select className=\"custom-select col-12\" onChange={(e: any) => { this.handleMachine(e) }}>\n                          <option >Seleccionar una maquina</option>\n                          {this.state.machines.map((machine: any, ix: number) => <option key={ix} value={machine.node.id} >{machine.node.name}</option>)}\n                        </select>\n\n\n                      </div>\n                    </div>\n\n                  </div>\n                  {/*/span*/}\n                  <div className=\"col-lg12 col-md-12\">\n                    <div className=\"form-group  row\">\n                      <label className=\"control-label text-right col-md-3\">Proyecto</label>\n                      <div className=\"col-md-9\">\n                        <select className=\"custom-select col-12\" onChange={(e: any) => { this.handleProyect(e) }} >\n                          <option >Seleccione un proyecto</option>\n                          {this.state.owned.map((owned: any, ix: number) => <option key={\"1\" + ix} value={owned.node.id} >{owned.node.name} Responsable {owned.node.userByOwnerId.name} {owned.node.userByOwnerId.lastName}</option>)}\n\n\n                          {this.state.proyects.map((proyect: any, ix: number) => <option key={\"A\" + ix} value={proyect.node.proyectByProyectId.id} >{proyect.node.proyectByProyectId.name} Responsable {proyect.node.proyectByProyectId.userByOwnerId.name} {proyect.node.proyectByProyectId.userByOwnerId.lastName} </option>)}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                  {/*/span*/}\n                </div>\n                {/*/row*/}\n\n                <hr />\n                <div className=\"form-actions\">\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <div className=\"row\">\n                        <div className=\"col-md-offset-3 col-md-9\">\n                          <button type=\"submit\" className=\"btn btn-success\">Siguiente </button>\n                          <button type=\"button\" className=\"btn btn-inverse\">Cancel</button>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\"> </div>\n                  </div>\n                </div>\n\n\n\n\n              </div>\n\n\n\n            </form>\n          </div>\n        </div>\n\n\n\n      </div>\n\n\n      {this.state.load ? <RMN proyect_id={this.state.proyect_id} machine_id={this.state.machine} /> : null}\n\n      {/* <RMN proyect_id={144} machine_id={1} /> */}\n    </div>\n\n\n  }\n\n}\n\nexport default NewExperiment;","\nimport React, { Component } from 'react';\nimport { GQL } from '../../Api';\n\n\n\nclass AddPayment extends Component<{}, {users:any,proyects:any }> {\n  user: any\n\n\n  constructor(props: any) {\n    super(props)\n\n    this.state = { users: [], proyects: [] }\n    //   this.state={machines:[] as Machines ,owned:null,proyects:null}\n    this.user = new GQL(`{\n      allUsers {\n        edges {\n          node {\n            id\n            name\n            lastName\n          }\n        }\n      }\n      allProyects {\n        edges {\n          node {\n            id\n            name\n            userByOwnerId {\n              id\n              name\n              lastName\n            }\n          }\n        }\n      }\n    }\n    `).getAll().then((out:any) => { this.setState({users:out.data.allUsers.edges, proyects:out.data.allProyects.edges }) } )\n\n\n\n  }\n\n  render() {\n    return <div>\n\n\n\n      <div className=\"row page-titles\">\n        <div className=\"col-md-6 col-8 align-self-center\">\n          <h3 className=\"text-themecolor mb-0 mt-0\">Agregar un pago</h3>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Inicio</a></li>\n            <li className=\"breadcrumb-item active\">Agregar un pago  a un usuario o un proyecto</li>\n          </ol>\n        </div>\n\n      </div>\n\n\n\n\n\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Agregar saldo a un usuario</h4>\n              <form className=\"form pt-3\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputuname\">Usuario </label>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\" id=\"basic-addon1\">\n                        <i className=\"ti-user\" />\n                      </span>\n                    </div>\n                    <select className=\"form-control\" >\n                            <option>Elegir un usuario</option>\n\n                            {this.state.users.map((user:any,ix:number)=><option key={ix} value={user.node.id }> {user.node.name}  {user.node.lastName}</option>  )}\n\n                    </select>                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputEmail1\">Saldo</label>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\" id=\"basic-addon1\">\n                        <i className=\"ti-money\" />\n                      </span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Agregar saldo en U.F.\" />\n                  </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-success waves-effect waves-light mr-2\">Agregar Saldo</button>\n                <button type=\"submit\" className=\"btn btn-inverse waves-effect waves-light\">Cancel</button>\n              </form>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Agregar saldo a un proyecto</h4>\n              <form className=\"form pt-3\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputuname\">Proyecto </label>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\" id=\"basic-addon1\">\n                        <i className=\"ti-user\" />\n                      </span>\n                    </div>\n                    <select className=\"form-control\" >\n                            <option>Elegir un proyecto</option>\n\n                            {this.state.proyects.map((proyect:any,ix:number)=><option key={ix} value={proyect.node.id }> {proyect.node.name} R :  {proyect.node.userByOwnerId.name} {proyect.node.userByOwnerId.lastName}</option>  )}\n\n                    </select>                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputEmail1\">Saldo</label>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\" id=\"basic-addon1\">\n                        <i className=\"ti-money\" />\n                      </span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Agregar saldo en U.F.\" />\n                  </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-success waves-effect waves-light mr-2\">Agregar Saldo</button>\n                <button type=\"submit\" className=\"btn btn-inverse waves-effect waves-light\">Cancel</button>\n              </form>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n\n\n    </div>\n\n\n  }\n\n}\n\nexport default AddPayment;","\nimport React, { Component } from 'react';\nimport { GQL } from '../../Api';\n\nclass Transfer extends Component<{}, {proyects:any}> {\n  user: any\n\n\n  constructor(props: any) {\n    super(props)\n\n    this.state = {  proyects: [] }\n    //   this.state={machines:[] as Machines ,owned:null,proyects:null}\n    this.user = new GQL(`{\n\n      allProyects {\n        edges {\n          node {\n            id\n            name\n            \n          }\n        }\n      }\n    }\n    `).getAll().then((out:any) => { this.setState({proyects:out.data.allProyects.edges }) } )\n\n\n\n  }\n\n  render() {\n    return <div>\n      <div className=\"row page-titles\">\n        <div className=\"col-md-6 col-8 align-self-center\">\n          <h3 className=\"text-themecolor mb-0 mt-0\">Transferir saldo desde mi cuenta  a un proyecto </h3>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Inicio</a></li>\n            <li className=\"breadcrumb-item active\">Transferencia de saldos </li>\n          </ol>\n        </div>\n\n      </div>\n\n\n\n\n\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Transferir saldos en U.F.</h4>\n              <form className=\"form pt-3\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputuname\">Usuario </label>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\" id=\"basic-addon1\">\n                        <i className=\"ti-user\" />\n                      </span>\n                    </div>\n                    <select className=\"form-control\" >\n                            <option>Elegir un proyecto</option>\n\n                            {this.state.proyects.map((proyect:any,ix:number)=><option key={ix} value={proyect.node.id }> {proyect.node.name} </option>  )}\n\n                    </select>                   </div>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputEmail1\">Saldo</label>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\" id=\"basic-addon1\">\n                        <i className=\"ti-money\" />\n                      </span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Agregar saldo en U.F.\" />\n                  </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-success waves-effect waves-light mr-2\">Agregar saldo</button>\n                <button type=\"submit\" className=\"btn btn-inverse waves-effect waves-light\">Cancel</button>\n              </form>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Transferir creditos </h4>\n              <form className=\"form pt-3\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputuname\">Proyecto </label>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\" id=\"basic-addon1\">\n                        <i className=\"ti-user\" />\n                      </span>\n                    </div>\n                    <select className=\"form-control\" >\n                            <option>Elegir un proyecto</option>\n\n                            {this.state.proyects.map((proyect:any,ix:number)=><option key={ix} value={proyect.node.id }> {proyect.node.name} </option>  )}\n\n                    </select>                    </div>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputEmail1\">Saldo</label>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\" id=\"basic-addon1\">\n                        <i className=\"ti-money\" />\n                      </span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Agregar saldo en U.F.\" />\n                  </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-success waves-effect waves-light mr-2\">Agregar saldo</button>\n                <button type=\"submit\" className=\"btn btn-inverse waves-effect waves-light\">Cancel</button>\n              </form>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n\n\n    </div>\n\n\n  }\n\n}\n\nexport default Transfer;","\nimport React, { Component } from 'react';\nimport { GQL } from '../../Api';\n\nclass BuyBugs extends Component<{}, {}> {\n  user: any\n\n\n  constructor(props: any) {\n    super(props)\n\n    this.state = { load: false, machines: [], owned: [], proyects: [] }\n    //   this.state={machines:[] as Machines ,owned:null,proyects:null}\n    this.user = new GQL(`{\n        allMachines {\n          edges {\n            node {\n              id\n              name\n            }\n          }\n        }\n        allProyects(condition: {ownerId: 2}) {\n          edges {\n            node {\n              id\n              name\n              userByOwnerId {\n                id\n                name\n                lastName\n              }\n            }\n          }\n        }\n        allProyectsUsers(condition: {userId: 246}) {\n          edges {\n            node {\n              proyectByProyectId {\n                name\n                userByOwnerId {\n                  name\n                  lastName\n                }\n              }\n            }\n          }\n        }\n      }       \n      `)\n\n\n\n  }\n\n  render() {\n    return <div>\n      <div className=\"row page-titles\">\n        <div className=\"col-md-6 col-8 align-self-center\">\n          <h3 className=\"text-themecolor mb-0 mt-0\">Comprar bolsas RMN </h3>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Inicio</a></li>\n            <li className=\"breadcrumb-item active\">comprar bolsas RMN </li>\n          </ol>\n        </div>\n\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"row pricing-plan\">\n                <div className=\"col-md-4 col-xs-12 col-sm-6 no-padding\">\n                  <div className=\"pricing-box\">\n                    <div className=\"pricing-body border-left\">\n                      <div className=\"pricing-header\">\n                        <h4 className=\"text-center\">Silver</h4>\n                        <h2 className=\"text-center\"><span className=\"price-sign\">$</span>18</h2>\n                        <p className=\"uppercase\">U.F.</p>\n                      </div>\n                      <div className=\"price-table-content\">\n                        <div className=\"price-row\"><i className=\"icon-user\" /> 3 Members</div>\n                        <div className=\"price-row\"><i className=\"icon-screen-smartphone\" /> Single Device</div>\n                        <div className=\"price-row\"><i className=\"icon-drawar\" /> 50GB Storage</div>\n                        <div className=\"price-row\"><i className=\"icon-refresh\" /> Monthly Backups</div>\n                        <div className=\"price-row\">\n                          <button className=\"btn btn-success waves-effect waves-light mt-3\">Canjear</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-4 col-xs-12 col-sm-6 no-padding\">\n                  <div className=\"pricing-box border-left\">\n                    <div className=\"pricing-body\">\n                      <div className=\"pricing-header\">\n                        <h4 className=\"text-center\">Gold</h4>\n                        <h2 className=\"text-center\"><span className=\"price-sign\">$</span>27</h2>\n                        <p className=\"uppercase\">U.F.</p>\n                      </div>\n                      <div className=\"price-table-content\">\n                        <div className=\"price-row\"><i className=\"icon-user\" /> 5 Members</div>\n                        <div className=\"price-row\"><i className=\"icon-screen-smartphone\" /> Single Device</div>\n                        <div className=\"price-row\"><i className=\"icon-drawar\" /> 80GB Storage</div>\n                        <div className=\"price-row\"><i className=\"icon-refresh\" /> Monthly Backups</div>\n                        <div className=\"price-row\">\n                          <button className=\"btn btn-success waves-effect waves-light mt-3\">Canjear</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-4 col-xs-12 col-sm-6 no-padding\">\n                  <div className=\"pricing-box featured-plan\">\n                    <div className=\"pricing-body\">\n                      <div className=\"pricing-header\">\n                        <h4 className=\"price-lable text-white bg-success  \">Mas barato</h4>\n                        <h4 className=\"text-center\">Platinum</h4>\n                        <h2 className=\"text-center\"><span className=\"price-sign\">$</span>36</h2>\n                        <p className=\"uppercase\">U.F.</p>\n                      </div>\n                      <div className=\"price-table-content\">\n                        <div className=\"price-row\"><i className=\"icon-user\" /> 10 Members</div>\n                        <div className=\"price-row\"><i className=\"icon-screen-smartphone\" /> Single Device</div>\n                        <div className=\"price-row\"><i className=\"icon-drawar\" /> 120GB Storage</div>\n                        <div className=\"price-row\"><i className=\"icon-refresh\" /> Monthly Backups</div>\n                        <div className=\"price-row\">\n                          <button className=\"btn btn-lg btn-info waves-effect waves-light mt-3\">Canjear</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n\n  }\n\n}\n\nexport default BuyBugs;","import React, { Component } from 'react';\nimport {GQL} from '../Api';\nimport { Link } from \"react-router-dom\";\n\n\n//const ApiExperiments  =new  Api(\"experiments\")\n\nconst ApiExperiments=new GQL(`\n{\n  allProyectsCredits{\n    edges {\n      node {\n        id\n        name\n        proyect\n        lastName\n        available\n        credit\n      }\n    }\n  }\n}\n\n`)\n\n\nfunction parseDate(jsonDateString : string)  {\n  var d= new Date(jsonDateString);\n  return d.getDate() + \"/\" + d.getMonth() + \"/\" + d.getFullYear(); \n}\n\n\nclass Resumen extends Component {\n  state={experiments:[]}\n\n  constructor(props:any) {\n    super(props)\n\n    ApiExperiments.getAll().then((experiments :any) => {  \n\n      console.log(experiments)\n     this.setState({experiments:experiments.data.allProyectsCredits.edges}) \n}  )\n    \n\n}\n\n  render() {\n    return (  <div className=\"card\">\n\n    \n    <div className=\"table-responsive\">\n      <table className=\"table table-hover no-wrap\">\n        <thead>\n          <tr>\n            <th className=\"text-center\">#</th>\n            <th>Proyecto</th>\n            <th>Responsable </th>\n            <th>Saldo Max Posible</th>\n            <th>Credito Max Posible</th>\n            <th>Editar</th>\n          </tr>\n        </thead>\n        <tbody>\n           {this.state.experiments.map((experiment:any,ix) => {\n          return     <tr key={ix}>\n         \n            <td className=\"text-center\">{experiment.node.id}</td>\n            <td className=\"txt-oflo\">{experiment.node.proyect}</td>\n            <td className=\"txt-oflo\">{experiment.node.name} {experiment.node.lastName} </td>\n            <td className=\"txt-oflo\">{experiment.node.available/100} U.F. </td>\n            <td className=\"txt-oflo\">{experiment.node.credit} CR </td>      \n            <td className=\"txt-oflo\"> <Link to={\"/proyects/\"+experiment.node.id} >  Editar </Link></td>\n       \n          </tr>     \n          })} \n          \n        </tbody>\n      </table>\n    </div>\n  </div>\n)\n\n    }\n}\nexport default Resumen;\n","import React, { Component } from 'react';\nimport Resumen from './resumen';\n\n\nclass Proyects extends Component {\n\n  render() {\n    return <div>\n      <div className=\"row page-titles\">\n        <div className=\"col-md-6 col-8 align-self-center\">\n          <h3 className=\"text-themecolor mb-0 mt-0\">Proyectos</h3>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Inicio</a></li>\n            <li className=\"breadcrumb-item active\">Lista de proyectos</li>\n          </ol>\n        </div>\n\n      </div>\n\n      <div className=\"col-lg-12\">\n\n        <Resumen />\n\n      </div>\n\n\n\n    </div>\n\n\n  }\n\n}\n\nexport default Proyects;\n","import React, { Component } from 'react';\nimport {GQL} from '../Api';\nimport { Link } from \"react-router-dom\";\n\n\n//const ApiExperiments  =new  Api(\"experiments\")\n\nconst ApiExperiments=new GQL(`\n{\n  allExperimentDetails(condition: {isObservate: true}) {\n    edges {\n      node {\n        id\n        name\n        price\n        observate\n        experimentByExperimentId {\n          id\n          proyectByProyectId {\n            id\n            name\n            userByOwnerId {\n              id\n              name\n              lastName\n            }\n          }\n          userByOwnerId {\n            id\n            name\n            lastName\n          }\n        }\n      }\n    }\n  }\n}\n\n`)\n\n\nfunction parseDate(jsonDateString : string)  {\n  var d= new Date(jsonDateString);\n  return d.getDate() + \"/\" + d.getMonth() + \"/\" + d.getFullYear(); \n}\n\n\nclass Resumen extends Component {\n  state={experiments:[]}\n\n  constructor(props:any) {\n    super(props)\n\n    ApiExperiments.getAll().then((experiments :any) => {  \n\n      console.log(experiments)\n     this.setState({experiments:experiments.data.allExperimentDetails.edges}) \n}  )\n    \n\n}\n\n  render() {\n    return (  <div className=\"card\">\n\n    \n    <div className=\"table-responsive\">\n      <table className=\"table table-hover no-wrap\">\n        <thead>\n          <tr>\n            <th className=\"text-center\">#</th>\n            <th>Experimento</th>\n            <th>Creador</th>\n            <th>Proyecto</th>\n            <th>Responsable</th>\n\n            <th>Observacion</th>\n            <th>Costo</th>\n            <th>Muestra</th>\n          </tr>\n        </thead>\n        <tbody>\n           {this.state.experiments.map((experiment:any,ix) => {\n          return     <tr key={ix}>\n         \n            <td className=\"text-center\">{experiment.node.experimentByExperimentId.id}</td>\n            <td className=\"txt-oflo\">{experiment.node.name}</td>\n            <td className=\"txt-oflo\">{experiment.node.experimentByExperimentId.userByOwnerId.name} {experiment.node.experimentByExperimentId.userByOwnerId.lastName} </td>\n            <td className=\"txt-oflo\">{experiment.node.experimentByExperimentId.proyectByProyectId.name}  </td>      \n            <td className=\"txt-oflo\">{experiment.node.experimentByExperimentId.proyectByProyectId.userByOwnerId.name} {experiment.node.experimentByExperimentId.proyectByProyectId.userByOwnerId.lastName} </td>\n            <td className=\"txt-oflo\">{experiment.node.observate}</td>\n\n            <td className=\"txt-oflo\">{experiment.node.price/100} U.F.</td>\n\n            <td className=\"txt-oflo\"> <Link to={\"/proyects/\"+experiment.node.id} > Solicitud </Link> <Link to={\"/proyects/\"+experiment.node.id} >  Descargar </Link></td>\n       \n          </tr>     \n          })} \n          \n        </tbody>\n      </table>\n    </div>\n  </div>\n)\n\n    }\n}\nexport default Resumen;\n","import React, { Component } from 'react';\nimport Resumen from './resumen';\n\n\nclass Observates extends Component {\n\n  render() {\n    return <div>\n      <div className=\"row page-titles\">\n        <div className=\"col-md-6 col-8 align-self-center\">\n          <h3 className=\"text-themecolor mb-0 mt-0\">Proyectos</h3>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Inicio</a></li>\n            <li className=\"breadcrumb-item active\">Lista de proyectos</li>\n          </ol>\n        </div>\n\n      </div>\n\n      <div className=\"col-lg-12\">\n\n        <Resumen />\n\n      </div>\n\n\n\n    </div>\n\n\n  }\n\n}\n\nexport default Observates;\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Sidebar from './Sider/sider';\nimport Dashboard from './Dashboard/dashboard';\nimport Users from './Users/users';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport EditUser from './Users/edit';\nimport Upload from './upload/results';\nimport NewExperiment from './Experiments/new';\nimport AddPayment from './Payments/addPayment/add';\nimport Transfer from './Payments/transfer/transfer';\nimport BuyBugs from './Payments/buybugs/buybugs';\nimport Proyects from './Proyects/proyects';\nimport Observates from './Observate/proyects';\n\n\nconst App: React.FC = () => {\n  return (       <Router> <div id=\"main-wrapper\">\n  {/* ============================================================== */}\n  {/* Topbar header - style you can find in pages.scss */}\n  {/* ============================================================== */}\n  <header className=\"topbar\">\n    <nav className=\"navbar top-navbar navbar-expand-md navbar-light\">\n      {/* ============================================================== */}\n      {/* Logo */}\n      {/* ============================================================== */}\n\n      {/* ============================================================== */}\n      <div className=\"navbar-collapse\">\n        {/* ============================================================== */}\n        {/* toggle and nav items */}\n        {/* ============================================================== */}\n        <ul className=\"navbar-nav mr-auto mt-md-0 \">\n          {/* This is  */}\n          <li className=\"nav-item\"> <a className=\"nav-link nav-toggler hidden-md-up text-muted waves-effect waves-dark\" href=\"javascript:void(0)\"><i className=\"ti-menu\" /></a> </li>\n         \n        </ul>\n        {/* ============================================================== */}\n        {/* User profile and search */}\n        {/* ============================================================== */}\n        <ul className=\"navbar-nav my-lg-0\">\n          <li className=\"nav-item hidden-sm-down\">\n            <form className=\"app-search\">\n              <input type=\"text\" className=\"form-control\" placeholder=\"Buscar ...\" /> <a className=\"srh-btn\"><i className=\"ti-search\" /></a> </form>\n          </li>\n          <li className=\"nav-item dropdown\">\n            <a className=\"nav-link dropdown-toggle text-muted waves-effect waves-dark\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Manuel Alba </a>\n            <div className=\"dropdown-menu dropdown-menu-right animated flipInY\">\n              <ul className=\"dropdown-user\">\n                <li>\n                  <div className=\"dw-user-box\">\n                    <div className=\"u-text\">\n                      <h4>Manuel Alba</h4>\n                      <p className=\"text-muted\">malba@mmae.cl</p><a href=\"profile.html\" className=\"btn btn-rounded btn-danger btn-sm\">Ver Perfil  </a></div>\n                  </div>\n                </li>\n                <li role=\"separator\" className=\"divider\" />\n                <li><a href=\"#\"><i className=\"ti-user\" /> Mi perfil</a></li>\n                <li><a href=\"#\"><i className=\"ti-wallet\" /> Mi balance</a></li>\n                {/* <li><a href=\"#\"><i className=\"ti-email\" /> Mensajes</a></li> */}\n                <li role=\"separator\" className=\"divider\" />\n                <li><a href=\"#\"><i className=\"ti-settings\" />  Configurar cuenta</a></li>\n                <li role=\"separator\" className=\"divider\" />\n                <li><a href=\"#\"><i className=\"fa fa-power-off\" /> Cerrar sesión</a></li>\n              </ul>\n            </div>\n          </li>\n        </ul>\n      </div>\n    </nav>\n  </header>\n  {/* ============================================================== */}\n  {/* End Topbar header */}\n  {/* ============================================================== */}\n  {/* ============================================================== */}\n  {/* Left Sidebar - style you can find in sidebar.scss  */}\n  {/* ============================================================== */}\n \n  <Sidebar/>\n  {/* ============================================================== */}\n  {/* End Left Sidebar - style you can find in sidebar.scss  */}\n  {/* ============================================================== */}\n  {/* ============================================================== */}\n  {/* Page wrapper  */}\n  {/* ============================================================== */}\n  <div className=\"page-wrapper\">\n    {/* ============================================================== */}\n    {/* Container fluid  */}\n    {/* ============================================================== */}\n    <div className=\"container-fluid\">\n      {/* ============================================================== */}\n      {/* Bread crumb and right sidebar toggle */}\n      {/* ============================================================== */}\n   \n     <Route exact path=\"/\"  component={Dashboard} />\n     <Route exact path=\"/app/\"  component={Dashboard} />\n     <Route exact path=\"/app/edit-users\"  component={Users} />\n     <Route exact path=\"/app/users/:id\"  component={EditUser} />\n     <Route exact path=\"/app/upload/:machine\"  component={Upload} />\n     <Route exact path=\"/app/NewExperiment\"  component={NewExperiment} />\n     <Route exact path=\"/app/AddPayment\"  component={AddPayment} />\n     <Route exact path=\"/app/Transfer\"  component={Transfer} />\n     <Route exact path=\"/app/buybugs\"  component={BuyBugs} />\n     <Route exact path=\"/app/edit-proyects\"  component={Proyects} />\n     <Route exact path=\"/app/observates\"  component={Observates} />\n\n\n\n   \n      {/* ============================================================== */}\n      {/* End Right sidebar */}\n      {/* ============================================================== */}\n    </div>\n    {/* ============================================================== */}\n    {/* End Container fluid  */}\n    {/* ============================================================== */}\n    {/* ============================================================== */}\n    {/* footer */}\n    {/* ============================================================== */}\n    <footer className=\"footer\">\n      © 2019 Uci-fq.uc.cl Powered By mmae.cl\n    </footer>\n    {/* ============================================================== */}\n    {/* End footer */}\n    {/* ============================================================== */}\n  </div>\n  {/* ============================================================== */}\n  {/* End Page wrapper  */}\n  {/* ============================================================== */}\n</div></Router>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}