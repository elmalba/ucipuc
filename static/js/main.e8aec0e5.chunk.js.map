{"version":3,"sources":["user.tsx","Sider/sider.tsx","Api.tsx","Dashboard/modal.tsx","Dashboard/resumen.tsx","Dashboard/aprobar.tsx","Dashboard/dashboard.tsx","Users/resumen.tsx","Users/users.tsx","Users/addproyect.tsx","Users/edituser.tsx","Users/edit.tsx","upload/files.tsx","upload/results.tsx","Experiments/rmn.jsx","Experiments/new.tsx","Payments/addPayment/add.tsx","Payments/transfer/transfer.tsx","Payments/buybugs/buybugs.tsx","Proyects/resumen.tsx","Proyects/proyects.tsx","Observate/resumen.tsx","Observate/proyects.tsx","Login/App.tsx","App.tsx","serviceWorker.ts","index.tsx"],"names":["User","UserId","Name","LastName","Email","Groups","data","this","groups","group","Sidebar","className","href","data-toggle","role","aria-haspopup","aria-expanded","onClick","window","localStorage","clear","location","reload","id","style","display","hasGroup","to","title","Component","headers","Authorization","getItem","client","ApolloClient","uri","request","operation","setContext","GQL","literals","_literals","query","gql","confirm","Modal","CallProcess","process","method","args","url","esc","encodeURIComponent","Object","keys","map","k","join","body","JSON","stringify","ID","console","log","Promise","resolve","reject","fetch","then","response","json","myJson","Api","_process","msg","params","notification","success","message","description","Data","content","okText","okType","cancelText","onOk","onCancel","Experiment","props","parse","solvente","error","detail","isReady","isCanceled","isObservate","variant","experiment","size","show","onHide","close","Header","closeButton","Title","node","machineByMachineId","name","userByOwnerId","lastName","Body","striped","bordered","hover","experimentDetailsByExperimentId","edges","ix","step","price","Footer","ApiExperiments","Resumen","state","experiments","modal","getAll","setState","allExperiments","selected","value","reduce","a","b","groupPay","key","proyectByProyectId","length","jsonDateString","d","Date","getDate","getMonth","getFullYear","parseDate","createdAt","Approves","Aprobar","users","proyects","allProyects","user","min","max","defaultValue","onChange","proyectsUsersByProyectId","proyect","jx","userByUserId","Proyect","showConfirm","showDeleteConfirm","encurso","dependientes","Dashboard","money","experimentos","totalCount","experimentsByProyectId","c","allUsers","email","rolesUsersByUserId","roleByRoleId","rut","dv","Users","AddProyects","search","open","duration","n","toLowerCase","includes","toLocaleLowerCase","Group","controlId","Control","type","placeholder","e","target","edge","alert","EditUserId","rol","roleId","action","limit","credit","address","roles","defaultChecked","check","htmlFor","proyectsUsersByUserId","activateTime","userByActivateBy","proyectsByOwnerId","preventDefault","EditUser","load","match","allRoles","Files","nextProps","file","Upload","send","RMN","machine","DefaultState","proyect_id","out","allMachines","amount","allProyectsCredits","obj","H1","C13","dept","cosy","tocsy","hsqc","hmbc","noesy","B11","F19","P31","Si29","Pt125","Li7","Al27","Ag109","Otro","num","preparete","recovery","option","Price","event","observate","push","exp","new","user_id","machine_id","pop","onSubmit","handleSubmit","handleName","ng-model","handleSolvent","handlePreparete","checked","handleObservate","rows","handleRecovery","handleOption","hmqc","handleSend","handleLast","NewExperiment","machines","owned","allProyectsUsers","handleMachine","handleProyect","AddPayment","Transfer","BuyBugs","available","Proyects","allExperimentDetails","experimentByExperimentId","Observates","login","Login","password","setItem","Jwt","backgroundImage","required","App","exact","path","component","autorization","INIT","Boolean","hostname","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","registration","unregister"],"mappings":"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","file":"static/js/main.e8aec0e5.chunk.js","sourcesContent":["import { Group } from \"antd/lib/radio\";\n\nexport interface UserObject {\n    UserId: number;\n    Name: string;\n    LastName: string;\n    Email: string;\n    Groups: any;\n}\nclass user implements UserObject {\n    UserId=0\n    Name =\"\"\n    LastName=\"\"\n    Email=\"\"\n    Groups = []\n    constructor(){\n\n    }\n    load(data:UserObject){\n        this.UserId = data.UserId\n        this.Name = data.Name\n        this.LastName = data.LastName\n        this.Email = data.Email\n        this.Groups = data.Groups\n\n    }\n\n    hasGroup(groups : string[]){\n        for (let group of groups){\n            for (let usergroup of this.Groups){\n                if (group == usergroup){\n                    return true\n                }\n            }\n        }\n        return false\n    }\n\n}\n\nconst User = new user()\nexport default User\n","import React, { Component } from 'react';\nimport { Link } from \"react-router-dom\";\nimport User from '../user';\nclass Sidebar extends Component {\n\n  render() {\n\n\n    return <aside className=\"left-sidebar\">\n      {/* Sidebar scroll*/}\n      <div className=\"scroll-sidebar\">\n        {/* User profile */}\n        <div className=\"user-profile\">\n          {/* User profile image */}\n          {/* <div className=\"profile-img\"> <img src=\"assets/images/users/1.jpg\" alt=\"user\" /> </div> */}\n          {/* User profile text*/}\n          <div className=\"profile-text\"> <a href=\"#\" className=\"dropdown-toggle link u-dropdown\" data-toggle=\"dropdown\" role=\"button\" aria-haspopup=\"true\" aria-expanded=\"true\">Manuel Alba <span className=\"caret\" /></a>\n            <div className=\"dropdown-menu animated flipInY\">\n              <a href=\"#\" className=\"dropdown-item\"><i className=\"ti-user\" /> Mi perfil</a>\n              <a href=\"#\" className=\"dropdown-item\"><i className=\"ti-wallet\" /> Mi balance</a>\n              <a href=\"#\" className=\"dropdown-item\"><i className=\"ti-email\" /> Mensajes</a>\n              <div className=\"dropdown-divider\" /> <a href=\"#\" className=\"dropdown-item\"><i className=\"ti-settings\" /> Configurar cuenta</a>\n              <div className=\"dropdown-divider\" /> <a onClick={()=>{ window.localStorage.clear();window.location.reload() }} className=\"dropdown-item\"><i className=\"fa fa-power-off\" /> Cerrar sesión</a>\n            </div>\n          </div>\n        </div>\n        {/* End User profile text*/}\n        {/* Sidebar navigation*/}\n        <nav className=\"sidebar-nav\">\n          <ul id=\"sidebarnav\">\n            <li style={{ display: User.hasGroup([\"Super Administrador\", \"Laboratoristas\"]) ? \"\" : 'none' }}>\n              <a className=\"has-arrow\" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-gauge\" /><span className=\"hide-menu\">Experimentos\n            {/* <span className=\"label label-rounded label-success\">5</span> */}\n              </span></a>\n              <ul aria-expanded=\"false\" className=\"collapse\">\n                <li><Link to=\"/app/upload/RMN400\">RMN 400</Link></li>\n                <li><Link to=\"/app/upload/RM200\">RMN 200</Link></li>\n                <li><Link to=\"/app/upload/FT-IR\">FT-IR</Link></li>\n                <li><Link to=\"/app/upload/LCMS\">LC-MS/MS</Link></li>\n                <li><Link to=\"/app/upload/GSMS\">GS-MS</Link></li>\n                <li><Link to=\"/app/upload/AFM\">AFM</Link></li>\n              </ul>\n            </li>\n            <li style={{ display: User.hasGroup([\"Super Administrador\", \"Finanza\"]) ? \"\" : 'none' }}>\n              <a className=\"has-arrow \" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-cash\" /><span className=\"hide-menu\">Pagos</span></a>\n              <ul aria-expanded=\"false\" className=\"collapse\">\n                <li><Link to=\"/app/AddPayment\">Agregar un Pago</Link></li>\n                <li><Link to=\"/app/transfer\">Transferir saldos</Link></li>\n                <li><Link to=\"/app/buybugs\">Comprar bolsa de RMN</Link></li>\n                <li><Link to=\"/app/checkpayments\">Revisar mis Pagos</Link></li>\n                <li><Link to=\"/app/not-billing\">No Pagado</Link></li>\n                <li><Link to=\"/app/billing\">Facturaciónes</Link></li>\n                <li><Link to=\"/app/all-billing\">Todas las facturaciones</Link></li>\n\n              </ul>\n            </li>\n            <li style={{ display: User.hasGroup([\"Super Administrador\", \"Profesor\", \"Investigador\", \"Laboratorista\"]) ? \"\" : 'none' }}>\n              <a className=\"has-arrow \" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-email\" /><span className=\"hide-menu\">Observaciones</span></a>\n              <ul aria-expanded=\"false\" className=\"collapse\">\n                <li><Link to=\"/app/observates\">Experimentos observados</Link></li>\n                {/* <li><a href=\"app-email-detail.html\">Mailbox Detail</a></li>\n              <li><a href=\"app-compose.html\">Compose Mail</a></li> */}\n              </ul>\n            </li>\n            <li style={{ display: User.hasGroup([\"Super Administrador\", \"Laboratorista\"]) ? \"\" : 'none' }}>\n              <a className=\"has-arrow\" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-account-multiple-plus\" /><span className=\"hide-menu\">Usuarios</span></a>\n              <ul aria-expanded=\"false\" className=\"collapse\">\n                <li> <Link to=\"/app/add-users\">Agregar Usuarios</Link></li>\n                <li> <Link to=\"/app/edit-users\">Editar Usuarios</Link></li>\n                <li> <Link to=\"/app/add-proyects\">Agregar Proyecto</Link></li>\n                <li> <Link to=\"/app/edit-proyects\">Editar  proyecto</Link></li>\n                {/* <li><a href=\"ui-buttons.html\">Buttons</a></li>\n              <li><a href=\"ui-modals.html\">Modals</a></li>\n              <li><a href=\"ui-tab.html\">Tab</a></li>\n              <li><a href=\"ui-tooltip-popover.html\">Tooltip &amp; Popover</a></li>\n              <li><a href=\"ui-tooltip-stylish.html\">Tooltip stylish</a></li>\n              <li><a href=\"ui-sweetalert.html\">Sweet Alert</a></li>\n              <li><a href=\"ui-notification.html\">Notification</a></li>\n              <li><a href=\"ui-progressbar.html\">Progressbar</a></li>\n              <li><a href=\"ui-nestable.html\">Nestable</a></li>\n              <li><a href=\"ui-range-slider.html\">Range slider</a></li>\n              <li><a href=\"ui-timeline.html\">Timeline</a></li>\n              <li><a href=\"ui-typography.html\">Typography</a></li>\n              <li><a href=\"ui-horizontal-timeline.html\">Horizontal Timeline</a></li>\n              <li><a href=\"ui-session-timeout.html\">Session Timeout</a></li>\n              <li><a href=\"ui-session-ideal-timeout.html\">Session Ideal Timeout</a></li>\n              <li><a href=\"ui-bootstrap.html\">Bootstrap Ui</a></li>\n              <li><a href=\"ui-breadcrumb.html\">Breadcrumb</a></li>\n              <li><a href=\"ui-bootstrap-switch.html\">Bootstrap Switch</a></li>\n              <li><a href=\"ui-list-media.html\">List Media</a></li>\n              <li><a href=\"ui-ribbons.html\">Ribbons</a></li>\n              <li><a href=\"ui-grid.html\">Grid</a></li>\n              <li><a href=\"ui-carousel.html\">Carousel</a></li>\n              <li><a href=\"ui-date-paginator.html\">Date-paginator</a></li>\n              <li><a href=\"ui-dragable-portlet.html\">Dragable Portlet</a></li>\n              <li><a href=\"ui-spinner.html\">Spinner</a></li>\n              <li><a href=\"ui-scrollspy.html\">Scrollspy</a></li>\n              <li><a href=\"ui-toasts.html\">Toasts</a></li> */}\n              </ul>\n            </li>\n            {/*  <li className=\"nav-devider\" />\n          <li className=\"nav-small-cap\">Administrar Resultados</li>\n          <li className=\"nav-small-cap\">Facturación</li>\n          <li className=\"nav-small-cap\">Usuarios</li>\n          <li>\n            <a className=\"has-arrow\" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-file\" /><span className=\"hide-menu\">Forms</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><a href=\"form-basic.html\">Basic Forms</a></li>\n              <li><a href=\"form-layout.html\">Form Layouts</a></li>\n              <li><a href=\"form-addons.html\">Form Addons</a></li>\n              <li><a href=\"form-material.html\">Form Material</a></li>\n              <li><a href=\"form-float-input.html\">Floating Lable</a></li>\n              <li><a href=\"form-pickers.html\">Form Pickers</a></li>\n              <li><a href=\"form-upload.html\">File Upload</a></li>\n              <li><a href=\"form-mask.html\">Form Mask</a></li>\n              <li><a href=\"form-validation.html\">Form Validation</a></li>\n              <li><a href=\"form-bootstrap-validation.html\">Form Bootstrap Validation</a></li>\n              <li><a href=\"form-dropzone.html\">File Dropzone</a></li>\n              <li><a href=\"form-icheck.html\">Icheck control</a></li>\n              <li><a href=\"form-img-cropper.html\">Image Cropper</a></li>\n              <li><a href=\"form-bootstrapwysihtml5.html\">HTML5 Editor</a></li>\n              <li><a href=\"form-typehead.html\">Form Typehead</a></li>\n              <li><a href=\"form-wizard.html\">Form Wizard</a></li>\n              <li><a href=\"form-xeditable.html\">Xeditable Editor</a></li>\n              <li><a href=\"form-summernote.html\">Summernote Editor</a></li>\n              <li><a href=\"form-tinymce.html\">Tinymce Editor</a></li>\n            </ul>\n          </li>\n          <li>\n            <a className=\"has-arrow \" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-table\" /><span className=\"hide-menu\">Tables</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><a href=\"table-basic.html\">Basic Tables</a></li>\n              <li><a href=\"table-layout.html\">Table Layouts</a></li>\n              <li><a href=\"table-data-table.html\">Data Tables</a></li>\n              <li><a href=\"table-footable.html\">Footable</a></li>\n              <li><a href=\"table-jsgrid.html\">Js Grid Table</a></li>\n              <li><a href=\"table-responsive.html\">Responsive Table</a></li>\n              <li><a href=\"table-bootstrap.html\">Bootstrap Tables</a></li>\n              <li><a href=\"table-editable-table.html\">Editable Table</a></li>\n            </ul>\n          </li>\n          <li>\n            <a className=\"has-arrow \" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-widgets\" /><span className=\"hide-menu\">Widgets</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><a href=\"widget-apps.html\">Widget Apps</a></li>\n              <li><a href=\"widget-data.html\">Widget Data</a></li>\n              <li><a href=\"widget-charts.html\">Widget Charts</a></li>\n            </ul>\n          </li>\n          <li className=\"nav-devider\" />\n          <li className=\"nav-small-cap\">EXTRA COMPONENTS</li>\n          <li>\n            <a className=\"has-arrow \" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-book-multiple\" /><span className=\"hide-menu\">Page Layout</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><a href=\"layout-single-column.html\">1 Column</a></li>\n              <li><a href=\"layout-fix-header.html\">Fix header</a></li>\n              <li><a href=\"layout-fix-sidebar.html\">Fix sidebar</a></li>\n              <li><a href=\"layout-fix-header-sidebar.html\">Fixe header &amp; Sidebar</a></li>\n              <li><a href=\"layout-boxed.html\">Boxed Layout</a></li>\n              <li><a href=\"layout-logo-center.html\">Logo in Center</a></li>\n            </ul>\n          </li>\n          <li>\n            <a className=\"has-arrow \" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-book-open-variant\" /><span className=\"hide-menu\">Sample Pages</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><a href=\"starter-kit.html\">Starter Kit</a></li>\n              <li><a href=\"pages-blank.html\">Blank page</a></li>\n              <li><a href=\"#\" className=\"has-arrow\">Authentication <span className=\"label label-rounded label-success\">6</span></a>\n                <ul aria-expanded=\"false\" className=\"collapse\">\n                  <li><a href=\"pages-login.html\">Login 1</a></li>\n                  <li><a href=\"pages-login-2.html\">Login 2</a></li>\n                  <li><a href=\"pages-register.html\">Register</a></li>\n                  <li><a href=\"pages-register2.html\">Register 2</a></li>\n                  <li><a href=\"pages-lockscreen.html\">Lockscreen</a></li>\n                  <li><a href=\"pages-recover-password.html\">Recover password</a></li>\n                </ul>\n              </li>\n              <li><a href=\"pages-profile.html\">Profile page</a></li>\n              <li><a href=\"pages-animation.html\">Animation</a></li>\n              <li><a href=\"pages-fix-innersidebar.html\">Sticky Left sidebar</a></li>\n              <li><a href=\"pages-fix-inner-right-sidebar.html\">Sticky Right sidebar</a></li>\n              <li><a href=\"pages-invoice.html\">Invoice</a></li>\n              <li><a href=\"pages-treeview.html\">Treeview</a></li>\n              <li><a href=\"pages-utility-classes.html\">Helper Classes</a></li>\n              <li><a href=\"pages-search-result.html\">Search result</a></li>\n              <li><a href=\"pages-scroll.html\">Scrollbar</a></li>\n              <li><a href=\"pages-pricing.html\">Pricing</a></li>\n              <li><a href=\"pages-lightbox-popup.html\">Lighbox popup</a></li>\n              <li><a href=\"pages-gallery.html\">Gallery</a></li>\n              <li><a href=\"pages-faq.html\">Faqs</a></li>\n              <li><a href=\"#\" className=\"has-arrow\">Error Pages</a>\n                <ul aria-expanded=\"false\" className=\"collapse\">\n                  <li><a href=\"pages-error-400.html\">400</a></li>\n                  <li><a href=\"pages-error-403.html\">403</a></li>\n                  <li><a href=\"pages-error-404.html\">404</a></li>\n                  <li><a href=\"pages-error-500.html\">500</a></li>\n                  <li><a href=\"pages-error-503.html\">503</a></li>\n                </ul>\n              </li>\n            </ul>\n          </li>\n          <li>\n            <a className=\"has-arrow \" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-file-chart\" /><span className=\"hide-menu\">Charts</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><a href=\"chart-morris.html\">Morris Chart</a></li>\n              <li><a href=\"chart-chartist.html\">Chartis Chart</a></li>\n              <li><a href=\"chart-echart.html\">Echarts</a></li>\n              <li><a href=\"chart-flot.html\">Flot Chart</a></li>\n              <li><a href=\"chart-knob.html\">Knob Chart</a></li>\n              <li><a href=\"chart-chart-js.html\">Chartjs</a></li>\n              <li><a href=\"chart-sparkline.html\">Sparkline Chart</a></li>\n              <li><a href=\"chart-extra-chart.html\">Extra chart</a></li>\n              <li><a href=\"chart-peity.html\">Peity Charts</a></li>\n            </ul>\n          </li>\n          <li>\n            <a className=\"has-arrow \" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-brush\" /><span className=\"hide-menu\">Icons</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><a href=\"icon-material.html\">Material Icons</a></li>\n              <li><a href=\"icon-fontawesome.html\">Fontawesome Icons</a></li>\n              <li><a href=\"icon-themify.html\">Themify Icons</a></li>\n              <li><a href=\"icon-linea.html\">Linea Icons</a></li>\n              <li><a href=\"icon-weather.html\">Weather Icons</a></li>\n              <li><a href=\"icon-simple-lineicon.html\">Simple Lineicons</a></li>\n              <li><a href=\"icon-flag.html\">Flag Icons</a></li>\n            </ul>\n          </li>\n          <li>\n            <a className=\"has-arrow \" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-map-marker\" /><span className=\"hide-menu\">Maps</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><a href=\"map-google.html\">Google Maps</a></li>\n              <li><a href=\"map-vector.html\">Vector Maps</a></li>\n            </ul>\n          </li>*/}\n            {/* <li> \n            <a className=\"has-arrow \" href=\"#\" aria-expanded=\"false\"><i className=\"mdi mdi-arrange-send-backward\" /><span className=\"hide-menu\">Multi level dd</span></a>\n            <ul aria-expanded=\"false\" className=\"collapse\">\n              <li><a href=\"#\">item 1.1</a></li>\n              <li><a href=\"#\">item 1.2</a></li>\n              <li>\n                <a className=\"has-arrow\" href=\"#\" aria-expanded=\"false\">Menu 1.3</a>\n                <ul aria-expanded=\"false\" className=\"collapse\">\n                  <li><a href=\"#\">item 1.3.1</a></li>\n                  <li><a href=\"#\">item 1.3.2</a></li>\n                  <li><a href=\"#\">item 1.3.3</a></li>\n                  <li><a href=\"#\">item 1.3.4</a></li>\n                </ul>\n              </li>\n              <li><a href=\"#\">item 1.4</a></li>\n            </ul>\n          </li> */}\n          </ul>\n        </nav>\n        {/* End Sidebar navigation */}\n      </div>\n      {/* End Sidebar scroll*/}\n      {/* Bottom points*/}\n      <div className=\"sidebar-footer\">\n        {/* item*/}\n        <a className=\"link\" data-toggle=\"tooltip\" title=\"Settings\"><i className=\"ti-settings\" /></a>\n        {/* item*/}\n        <a className=\"link\" data-toggle=\"tooltip\" title=\"Email\"><i className=\"mdi mdi-gmail\" /></a>\n        {/* item*/}\n        <a className=\"link\" data-toggle=\"tooltip\" title=\"Logout\"><i className=\"mdi mdi-power\" /></a>\n      </div>\n      {/* End Bottom points*/}\n    </aside>;\n  }\n}\n\nexport default Sidebar;\n","import { notification } from 'antd';\nimport { Modal, Button } from 'antd';\nimport ApolloClient, { gql } from \"apollo-boost\";\n\nconst headers = {\n    Authorization: window.localStorage.getItem(\"Authorization\")\n}\nconst client = new ApolloClient({\n    uri: \"/api/graphql\",\n    request: operation => {\n        operation.setContext({\n            headers: headers,\n        });\n    }\n});\n\nexport class GQL {\n    _literals: any;\n    constructor(literals: any, ...placeholders: any[]) {\n        this._literals = literals\n    }\n    getAll(params = {}) {\n        return client.query({\n            query: gql(this._literals)\n        })\n    }\n}\n\nexport class GQLAPI {\n    _literals: any;\n    _client: any;\n    constructor(literals: any, ...placeholders: any[]) {\n        this._literals = literals\n        this._client = new ApolloClient({\n            uri: \"/api/graphql/\" + this._literals,\n            request: operation => {\n                operation.setContext({\n                    headers: headers,\n                });\n            }\n        });\n    }\n    getAll(params = {}) {\n        return this._client.query({\n            query: gql(`{ allUsers}`)\n        })\n    }\n}\n\n\n\n\n\nconst confirm = Modal.confirm;\n\n\nexport function CallProcess(process: string, data: any, method: string) {\n\n    let args = {}\n    let url = '/api/' + process\n    if (method == \"GET\") {\n\n        args = {\n            headers: { Authorization: headers.Authorization, \"Content-Type\": \"application/json; charset=utf-8\" },\n        }\n        var esc = encodeURIComponent;\n        var query = Object.keys(data)\n            .map(k => esc(k) + '=' + esc(data[k]))\n            .join('&');\n\n        url = url + \"?\" + query\n\n\n    }\n    else if (method == \"POST\") {\n        args = {\n            method: 'POST',\n            headers: { Authorization: headers.Authorization, \"Content-Type\": \"application/json; charset=utf-8\" },\n            body: JSON.stringify(data)\n        }\n\n    }\n\n    else if (method == \"PUT\") {\n\n        args = {\n            method: 'PUT',\n            headers: { Authorization: headers.Authorization, \"Content-Type\": \"application/json; charset=utf-8\" },\n            body: JSON.stringify(data)\n        }\n        url = url + \"/\" + data.ID\n\n    }\n\n\n    else if (method == \"DELETE\") {\n        args = {\n            method: 'DELETE',\n            headers: { Authorization: headers.Authorization, \"Content-Type\": \"application/json; charset=utf-8\" }\n        }\n        url = url + \"/\" + data.ID\n\n    }\n\n\n    console.log(\"URL\", url)\n\n\n\n    return new Promise((resolve, reject) => {\n\n\n\n\n        fetch(url, args).then(function (response) {\n            return response.json();\n        })\n            .then(function (myJson: any) {\n\n                resolve(myJson)\n            });\n\n\n    })\n}\n\n\n\nclass Api {\n\n    _process: string;\n    msg: boolean\n    constructor(process: string) {\n        this._process = process;\n        this.msg = true\n    }\n\n\n    new(params: any) {\n\n\n        return new Promise((resolve, reject) => {\n\n            CallProcess(this._process, params, \"POST\").then((data: any) => {\n\n                resolve(data)\n                if (this.msg){\n                    notification.success({\n                        message: 'Se ha insertado con exito ',\n                        description: 'El Id de inserccion es  ' + data.Data.ID,\n                    });\n                }\n\n            })\n        })\n\n    }\n\n\n    get(ID: number, params = {}) {\n        console.log(\"ID\", ID)\n        return new Promise((resolve, reject) => {\n            CallProcess(this._process + \"/\" + ID, params, \"GET\").then((data: any) => { resolve(data.Data) })\n        })\n\n    }\n\n    getAll(params = {}) {\n        return new Promise((resolve, reject) => {\n            CallProcess(this._process, params, \"GET\").then((data: any) => { resolve(data) })\n        })\n\n    }\n    save(process: any) {\n\n        return new Promise((resolve, reject) => {\n\n            CallProcess(this._process, process, \"PUT\").then((data: any) => {\n                notification.success({\n                    message: 'Se ha actualizado con exito ',\n                    description: 'El Id ' + data.Data.ID,\n                });\n\n\n                resolve(data.Data)\n            })\n\n        })\n    }\n    delete(process: any) {\n\n        return new Promise((resolve, reject) => {\n\n\n            confirm({\n                title: '¿Esta seguro que desea borrar?',\n                content: 'Esta seguro que desea borrar el registro id : ' + process.ID,\n                okText: 'Si',\n                okType: 'danger',\n                cancelText: 'No',\n                onOk: () => {\n\n\n                    CallProcess(this._process, process, \"DELETE\").then((data: any) => {\n                        resolve(data.Data)\n                    })\n                },\n                onCancel() {\n                    resolve(process)\n                },\n            });\n\n\n        })\n\n\n    }\n\n}\n\nexport default Api","import React, { Component } from 'react';\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Table from 'react-bootstrap/Table'\n\n//\n\nfunction parseDate(jsonDateString: string) {\n    var d = new Date(jsonDateString);\n    return d.getDate() + \"/\" + d.getMonth() + \"/\" + d.getFullYear();\n}\n\n\nclass Experiment extends Component<{ experiment: any, close: any }, {}> {\n\n    constructor(props: any) {\n        super(props)\n\n\n\n    }\n    solvente(request: any) {\n\n        try {\n            return JSON.parse(request).solvente\n        } catch (error) {\n            return \"\"\n\n        }\n    }\n    step(detail: any) {\n        if (!detail.isReady && !detail.isCanceled && !detail.isObservate)\n            return <Button variant=\"warning\">En curso</Button>\n        if (detail.isCanceled)\n            return <Button variant=\"danger\">Anulado</Button>\n        if (detail.isObservate)\n            return <Button variant=\"info\">Observado</Button>\n        return <Button href={\"/\"} variant=\"success\">Descargar</Button>\n    }\n\n    render() {\n        let experiment = this.props.experiment\n        return (<Modal size=\"lg\" show={true} onHide={() => { this.props.close() }}>\n            <Modal.Header closeButton>\n                <Modal.Title><Button href={\"/pdf/\"+window.localStorage.getItem(\"Authorization\")+\"/\"+experiment.node.machineByMachineId.name+\"_\"+experiment.node.id+\".pdf\"} variant=\"success\">Descargar</Button> {experiment.node.userByOwnerId.name} {experiment.node.userByOwnerId.lastName} {experiment.node.machineByMachineId.name} #{experiment.node.id} </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Nombre</th>\n                            <th>Solvente</th>\n                            <th>Estado</th>\n                            <th>Precio</th>\n                        </tr>\n                    </thead>\n                    <tbody>\n                        {experiment.node.experimentDetailsByExperimentId.edges.map((detail: any, ix: number) => {\n                            return <tr>\n                                <td>{ix + 1}</td>\n                                <td>{detail.node.name}</td>\n                                <td>{this.solvente(detail.node.request)}</td>\n                                <td>{this.step(detail.node)} </td>\n                                <td>{detail.node.price} CR </td>\n\n                            </tr>\n                        })\n                        }\n\n                    </tbody>\n                </Table>\n\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={() => { this.props.close() }}>\n                    Cerrar\n          </Button>\n\n            </Modal.Footer>\n        </Modal>)\n\n    }\n}\nexport default Experiment;\n","import React, { Component } from 'react';\nimport {GQL} from '../Api';\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Experiment from './modal';\n\n//const ApiExperiments  =new  Api(\"experiments\")\n\nconst ApiExperiments=new GQL(`{\n  allExperiments(orderBy:ID_DESC,first:200) {\n    edges {\n      node {\n        id\n        groupPay\n\n        createdAt\n        experimentDetailsByExperimentId {\n          edges {\n            node {\n              id\n              name\n              file\n              isReady\n              isCanceled\n              isObservate\n              price\n              request\n            }\n          }\n        }\n        machineByMachineId {\n          name\n        }\n        userByOwnerId {\n          id\n          name\n          lastName\n          email\n        }\n        proyectByProyectId  {\n          id\n          name\n        }\n        \n      }\n    }\n  }\n}`)\n\n\nfunction parseDate(jsonDateString : string)  {\n  var d= new Date(jsonDateString);\n  return d.getDate() + \"/\" + d.getMonth() + \"/\" + d.getFullYear(); \n}\n\n\nclass Resumen extends Component<{},{modal:boolean,experiments:any[],experiment:any} > {\n  state={experiments:[],modal:false,experiment:null}\n\n  constructor(props:any) {\n    super(props)\n\n    ApiExperiments.getAll().then((experiments :any) => {  \n\n      console.log(experiments)\n     this.setState({experiments:experiments.data.allExperiments.edges}) \n}  )\n    \n\n}\n\n  render() {\n    return (  <div className=\"card\">\n\n\n\n\n     {this.state.modal?<Experiment  experiment={this.state.experiment} close={()=>{ this.setState({modal:false})} }/>:null}\n\n    <div className=\"card-body\">\n      <div className=\"d-flex no-block\">\n        <h4 className=\"card-title\">Resumen Mensual</h4>\n        \n      </div>\n      <h6 className=\"card-subtitle\">Ultimos 30 dias </h6>\n    </div>\n    <div className=\"card-body bg-light\">\n      <div className=\"row\">\n        <div className=\"col-6\">\n          <h2 className=\"mb-0\">Resumen por mes</h2>\n          <select className=\"custom-select\">\n            <option selected>Ultimos 30 dias</option>\n            <option value={1}>Septiembbre 2018</option>\n            <option value={2}>Agosto 2019</option>\n            <option value={3}>Julio 2019</option>\n          </select>\n        \n          </div>\n        <div className=\"col-6 align-self-center display-6 text-info text-right\"> {this.state.experiments.reduce( (a:number, b:any) => a + b.node.groupPay==2?b.node.experimentDetailsByExperimentId.edges.reduce( (a:number, b:any) => a + b.node.price, 0):0  , 0)} :CR  ${this.state.experiments.reduce( (a:number, b:any) => a + b.node.groupPay==1?b.node.experimentDetailsByExperimentId.edges.reduce( (a:number, b:any) => a + b.node.price, 0):0  , 0)} : U.F. </div>\n        \n      </div>\n    </div>\n    <div className=\"table-responsive\">\n      <table className=\"table table-hover no-wrap\">\n        <thead>\n          <tr>\n            <th className=\"text-center\">#</th>\n            <th>Equipo</th>\n            <th>Usuario</th>\n            <th>Proyecto</th>\n            <th>Estado</th>\n            <th>Fecha</th>\n            <th>Precio</th>\n          </tr>\n        </thead>\n        <tbody>\n           {this.state.experiments.map((experiment:any,ix) => {\n          return <tr key={ix} onClick={()=>{this.setState({modal:true,experiment:experiment}) }}>\n            {/* <a  > */}\n            <td className=\"text-center\">{experiment.node.id}</td>\n            <td className=\"txt-oflo\">{experiment.node.machineByMachineId.name}</td>\n            <td className=\"txt-oflo\">{experiment.node.userByOwnerId.name} {experiment.node.userByOwnerId.lastName}</td>\n            <td className=\"txt-oflo\">{experiment.node.proyectByProyectId.name}</td>\n            <td>{experiment.node.experimentDetailsByExperimentId.edges.reduce( (a:number, b:any) => a + b.node.isReady, 0) == experiment.node.experimentDetailsByExperimentId.edges.length ? <span className=\"label label-success label-rouded\">Finalizado</span>:null} </td>\n            <td className=\"txt-oflo\">{parseDate(experiment.node.createdAt)}</td>\n      \n            <td><span className=\"text-success\">\n           {experiment.node.groupPay==2?<div>{experiment.node.experimentDetailsByExperimentId.edges.reduce( (a:number, b:any) => a + b.node.price, 0)} CR\n\n           </div>:<div>\n           ${experiment.node.experimentDetailsByExperimentId.edges.reduce( (a:number, b:any) => a + b.node.price, 0)} U.F.\n           </div>}    \n            \n            \n            </span></td>\n            {/* </a> */}\n          </tr>\n       \n          })} \n          \n        </tbody>\n      </table>\n    </div>\n  </div>\n)\n\n    }\n}\nexport default Resumen;\n","import React, { Component } from 'react';\nimport Resumen from './resumen';\nimport Api, { GQL } from '../Api';\nimport { Modal, Button } from 'antd';\nimport { InputNumber } from 'antd';\n\nconst { confirm } = Modal;\n\n\n\nconst Approves = new GQL(`{\n    allProyects(condition: {ownerId: 3}) {\n      edges {\n        node {\n          id\n          name\n          proyectsUsersByProyectId(orderBy: ID_ASC, condition: {activateTime: null, deletedAt: null}) {\n            edges {\n              node {\n                id\n                createdAt\n                userByUserId {\n                  id\n                  name\n                  lastName\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  `)\n\n\nfunction parseDate(jsonDateString: string) {\n    var d = new Date(jsonDateString);\n    return d.getDate() + \"/\" + d.getMonth() + \"/\" + d.getFullYear();\n}\n\nexport default class Aprobar extends Component {\n\n    state = { users: [] }\n\n    constructor(props: any) {\n        super(props)\n\n\n        Approves.getAll().then((proyects) => {\n            console.log(proyects.data.allProyects.edges)\n            this.setState({ users: proyects.data.allProyects.edges })\n\n        })\n\n    }\n\n    onChange(value: any) {\n        console.log('changed', value);\n    }\n\n\n    showConfirm(user: any) {\n        confirm({\n            title: `¿Deseas aceptar a ${user.Name} ${user.LastName}? `,\n            content: (\n                <div>\n                    <p>Agregar cupo en UF Maximo 10 UF </p>\n                    <p> <InputNumber min={1} max={10} defaultValue={1} onChange={this.onChange} /> </p>\n                </div>\n            ),\n            onOk() {\n                console.log('OK');\n            },\n            onCancel() {\n                console.log('Cancel');\n            },\n        });\n    }\n\n    showDeleteConfirm(user: any) {\n        confirm({\n            title: '¿Estas seguro que no desea aceptar a ',\n            content: `${user.Name} ${user.LastName} ?`,\n            okText: 'Si',\n            okType: 'danger',\n            cancelText: 'No',\n            onOk() {\n                console.log('OK');\n            },\n            onCancel() {\n                console.log('Cancel');\n            },\n        });\n    }\n\n\n    render() {\n\n        return <div className=\"col-12\">\n            <div className=\"card\">\n                <div className=\"row\">\n                    <div className=\"col-lg-4\">\n\n                        <div className=\"card\">\n                            <div className=\"card-body\">\n                                <h4 className=\"card-title\">Usuarios pendientes</h4>\n                                <h6 className=\"card-subtitle\">{this.state.users.reduce((a: number, b: any) => a + b.node.proyectsUsersByProyectId.edges.length, 0)} usuarios pendientes</h6>\n                                <div className=\"steamline mt-5\">\n\n                                    {this.state.users.map((proyect: any, ix: number) => {\n\n                                        return <div> {proyect.node.proyectsUsersByProyectId.edges.map((user: any, jx: number) => {\n                                            return <div className=\"sl-item\" key={ix + \"-\" + jx}>\n                                                {/* <div className=\"sl-left\"> <img className=\"img-circle\" alt=\"user\" src=\"assets/images/users/3.jpg\" /> </div> */}\n                                                <div className=\"sl-right\">\n                                                    <div><a href=\"#\">{user.node.userByUserId.name} {user.node.userByUserId.lastName}</a> <span className=\"sl-date\">{parseDate(user.node.createdAt)} </span></div>\n                                                    <div className=\"desc\">{user.Proyect}\n                                                        <br /><button onClick={() => { this.showConfirm(user) }} className=\"btn mt-2 mr-1 btn-rounded btn-outline-success\">Aceptar</button> <button onClick={() => { this.showDeleteConfirm(user) }} className=\"btn mt-2 btn-rounded btn-outline-danger\">Rechazar</button> </div>\n                                                </div>\n                                            </div>\n                                        }\n                                        )} </div>\n                                    }\n\n                                    )}\n                                </div>\n                            </div>\n                        </div>\n\n\n\n                    </div>\n                    {/* <div className=\"col-lg-8 border-left\">\n                        <div className=\"card-body\">\n                            <div className=\"d-flex no-block align-items-center\">\n                                <h4 className=\"font-medium text-inverse\">Resumen de experimentos por semana</h4>\n                                <div className=\"ml-auto\">\n                                    <ul className=\"list-inline\">\n                                        <li className=\"pl-0\">\n                                            <h6 className=\"text-muted\"><i className=\"fa fa-circle mr-1 text-success\" />2016</h6>\n                                        </li>\n                                        <li>\n                                            <h6 className=\"text-muted\"><i className=\"fa fa-circle mr-1 text-info\" />2019</h6>\n                                        </li>\n                                    </ul>\n                                </div>\n                            </div>\n                            <div className=\"total-revenue4\" style={{ height: '350px' }} />\n                        </div>\n                    </div> */}\n                </div>\n            </div>\n        </div>\n        {/* Column */ }\n    }\n}\n","import React, { Component } from 'react';\nimport Resumen from './resumen';\nimport Aprobar from './aprobar';\nimport { GQL } from '../Api';\nimport { Link } from 'react-router-dom';\n\n\n\nconst experiments = new GQL(`{\n  allProyects(condition: {ownerId: 2}) {\n    edges {\n      node {\n        experimentsByProyectId {\n          edges {\n            node {\n              experimentDetailsByExperimentId {\n                totalCount\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  allProyectsUsers(condition: {userId: 2} )  {\n    edges {\n      node {\n        proyectByProyectId {\n          experimentsByProyectId {\n            edges {\n              node {\n                experimentDetailsByExperimentId {\n                  totalCount\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}`)\n\n\n\nconst encurso = new GQL(`{\n  allProyects(condition: {ownerId: 1}) {\n    edges {\n      node {\n        experimentsByProyectId {\n          edges {\n            node {\n              experimentDetailsByExperimentId(condition:{isReady:false}) {\n                totalCount\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n  allProyectsUsers(condition: {userId: 2} )  {\n    edges {\n      node {\n        proyectByProyectId {\n          experimentsByProyectId {\n            edges {\n              node {\n                experimentDetailsByExperimentId(condition:{isReady:false}) {\n                  totalCount\n                }\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}`)\n\nconst dependientes = new GQL(`{\n  allProyects(condition:{ownerId:2}) {\n    edges {\n      node {\n        proyectsUsersByProyectId {\n          totalCount\n        \n        }\n      }\n    }\n  }\n}`)\n\nconst montos = new GQL(`{\n  allProyects(condition:{ownerId:2}) {\n    edges {\n      node {\n        proyectsUsersByProyectId {\n          totalCount\n        \n        }\n      }\n    }\n  }\n}`)\n\n\n\nclass Dashboard extends Component {\n  state = { money: 0, dependientes: 0, experimentos: 0, encurso: 0 }\n  constructor(props: any) {\n    super(props)\n\n    dependientes.getAll().then((data: any) => {\n      this.setState({ dependientes: data.data.allProyects.edges.reduce((a: number, b: any) => a +  b.node.proyectsUsersByProyectId.totalCount, 0) })\n    })\n \n \n\n    encurso.getAll().then((data: any) => {\n      this.setState({ encurso: data.data.allProyects.edges.reduce((a: number, b: any) => a + b.node.experimentsByProyectId.edges.reduce((c: number, d: any) => c + d.node.experimentDetailsByExperimentId.totalCount,0 ) , 0) })\n    })\n    \n    experiments.getAll().then((data: any) => {\n      this.setState({ experimentos: data.data.allProyects.edges.reduce((a: number, b: any) => a + b.node.experimentsByProyectId.edges.reduce((c: number, d: any) => c + d.node.experimentDetailsByExperimentId.totalCount,0 ) , 0) })\n    })\n \n\n  }\n\n  render() {\n    return <div>\n      <div className=\"row page-titles\">\n        <div className=\"col-md-6 col-8 align-self-center\">\n          <h3 className=\"text-themecolor mb-0 mt-0\">Resumen</h3>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Inicio</a></li>\n            <li className=\"breadcrumb-item active\">Resumen</li>\n          </ol>\n        </div>\n        <div className=\"col-md-6 col-4 align-self-center\">\n\n          <Link to={\"/app/NewExperiment\"} className=\"btn  hidden-sm-down btn-success\"><i className=\"mdi mdi-plus-circle\" /> Solicitar un nuevo experimento </Link>\n \n\n          &nbsp;&nbsp;\n          <a href=\"http://uci-fq.uc.cl:81/GoToOldSystem/\"className=\"btn float-right hidden-sm-down btn-info\"><i className=\"mdi mdi-plus-circle\" /> Ir al portal antiguo </a>\n\n\n        </div>\n      </div>\n      {/* ============================================================== */}\n      {/* End Bread crumb and right sidebar toggle */}\n      {/* ============================================================== */}\n      {/* ============================================================== */}\n      {/* Start Page Content */}\n      {/* ============================================================== */}\n      <div className=\"row\">\n        {/* Column */}\n        <div className=\"col-md-6 col-lg-2 col-xlg-2\">\n          <div className=\"card card-inverse card-info\">\n            <div className=\"box bg-info text-center\">\n              <h1 className=\"font-light text-white\">10 UF</h1>\n              <h6 className=\"text-white\">Monto Disponible</h6>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-md-6 col-lg-2 col-xlg-2\">\n          <div className=\"card card-inverse card-info\">\n            <div className=\"box bg-info text-center\">\n              <h1 className=\"font-light text-white\">10 CR</h1>\n              <h6 className=\"text-white\">Creditos Disponible</h6>\n            </div>\n          </div>\n        </div>\n\n        {/* Column */}\n        <div className=\"col-md-6 col-lg-3 col-xlg-3\">\n          <div className=\"card card-primary card-inverse\">\n            <div className=\"box text-center\">\n              <h1 className=\"font-light text-white\">{this.state.dependientes}</h1>\n              <h6 className=\"text-white\">Dependientes</h6>\n            </div>\n          </div>\n        </div>\n        {/* Column */}\n        <div className=\"col-md-6 col-lg-3 col-xlg-3\">\n          <div className=\"card card-inverse card-success\">\n            <div className=\"box text-center\">\n              <h1 className=\"font-light text-white\">{this.state.experimentos}</h1>\n              <h6 className=\"text-white\">Experimentos</h6>\n            </div>\n          </div>\n        </div>\n        {/* Column */}\n        <div className=\"col-md-6 col-lg-2 col-xlg-2\">\n          <div className=\"card card-inverse card-warning\">\n            <div className=\"box text-center\">\n              <h1 className=\"font-light text-white\">{this.state.encurso}</h1>\n              <h6 className=\"text-white\">Experimentos en curso</h6>\n            </div>\n          </div>\n        </div>\n      </div>\n      {/* Row */}\n      <div className=\"row\">\n        {/* Column */}\n\n        <Aprobar />\n      </div>\n\n      <div className=\"col-lg-12\">\n\n        <Resumen />\n\n      </div>\n\n      {/* Row */}\n      {/* Row */}\n      <div className=\"row\">\n\n        {/* Column */}\n\n        {/* Column */}\n      </div>\n      {/* Row */}\n\n      {/* Row */}\n      {/* Row */}\n\n\n    </div>\n\n\n  }\n\n}\n\nexport default Dashboard;\n","import React, { Component } from 'react';\nimport {GQL} from '../Api';\nimport { Link } from \"react-router-dom\";\n\n\n//const ApiExperiments  =new  Api(\"experiments\")\n\nconst ApiExperiments=new GQL(`{\n  allUsers {\n    edges {\n      node {\n        id\n        name\n        lastName\n        email\n        rut\n        dv\n        rolesUsersByUserId {\n          edges {\n            node {\n              roleByRoleId {\n                name\n              }\n            }\n          }\n        }\n      }\n    }\n  }\n}\n`)\n\n\nfunction parseDate(jsonDateString : string)  {\n  var d= new Date(jsonDateString);\n  return d.getDate() + \"/\" + d.getMonth() + \"/\" + d.getFullYear(); \n}\n\n\nclass Resumen extends Component {\n  state={experiments:[]}\n\n  constructor(props:any) {\n    super(props)\n\n    ApiExperiments.getAll().then((experiments :any) => {  \n\n      console.log(experiments)\n     this.setState({experiments:experiments.data.allUsers.edges}) \n}  )\n    \n\n}\n\n  render() {\n    return (  <div className=\"card\">\n\n    \n    <div className=\"table-responsive\">\n      <table className=\"table table-hover no-wrap\">\n        <thead>\n          <tr>\n            <th className=\"text-center\">#</th>\n            <th>Nombre</th>\n            <th>Apellido</th>\n            <th>Email</th>\n            <th>Rol</th>\n            <th>Rut</th>\n            <th>Editar</th>\n          </tr>\n        </thead>\n        <tbody>\n           {this.state.experiments.map((experiment:any,ix) => {\n          return     <tr key={ix}>\n         \n            <td className=\"text-center\">{experiment.node.id}</td>\n            <td className=\"txt-oflo\">{experiment.node.name}</td>\n            <td className=\"txt-oflo\">{experiment.node.lastName}</td>\n            <td className=\"txt-oflo\">{experiment.node.email}</td>\n           <td className=\"txt-oflo\">{experiment.node.rolesUsersByUserId.edges.map((role :any ,ix:number )=>{return  <div key={ix}> {role.node.roleByRoleId.name} </div> }) }</td>\n            <td className=\"txt-oflo\">{experiment.node.rut}-{experiment.node.dv}</td>\n\n            <td className=\"txt-oflo\"> <Link to={\"/app/users/\"+experiment.node.id} >  Editar </Link></td>\n       \n          </tr>     \n          })} \n          \n        </tbody>\n      </table>\n    </div>\n  </div>\n)\n\n    }\n}\nexport default Resumen;\n","import React, { Component } from 'react';\nimport Resumen from './resumen';\n\n\nclass Users extends Component {\n\n  render() {\n    return <div>\n      <div className=\"row page-titles\">\n        <div className=\"col-md-6 col-8 align-self-center\">\n          <h3 className=\"text-themecolor mb-0 mt-0\">Usuarios</h3>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Inicio</a></li>\n            <li className=\"breadcrumb-item active\">Listar usuarios</li>\n          </ol>\n        </div>\n\n      </div>\n\n      <div className=\"col-lg-12\">\n\n        <Resumen />\n\n      </div>\n\n\n\n    </div>\n\n\n  }\n\n}\n\nexport default Users;\n","import React, { Component } from 'react';\nimport { GQL } from '../Api';\nimport Modal from 'react-bootstrap/Modal'\nimport Button from 'react-bootstrap/Button'\nimport Table from 'react-bootstrap/Table'\nimport Form from 'react-bootstrap/Form'\nimport {  notification } from 'antd';\n\n\nconst proyects = new GQL(`{\n    allProyects(orderBy:ID_ASC) {\n      edges {\n        node {\n          id\n          name\n          userByOwnerId {\n            id\n            name\n            lastName\n            email\n          }\n        }\n      }\n    }\n  }`)\n\ninterface UserByOwnerId {\n    id: number;\n    name: string;\n    lastName: string;\n    email: string;\n}\n\ninterface Node {\n    id: number;\n    name: string;\n    userByOwnerId: UserByOwnerId;\n}\n\ninterface Edge {\n    node: Node;\n}\n\ninterface AllProyects {\n    edges: Edge[];\n}\n\ninterface Data {\n    allProyects: AllProyects;\n}\n\ninterface RootObject {\n    data: Data;\n}\n\n\nclass AddProyects extends Component<{user:number,close:any}, { experiments: any, search: string }> {\n    state = { experiments: [], search: \"\" }\n    constructor(props: any) {\n        super(props)\n\n        proyects.getAll().then((data: RootObject) => { this.setState({ experiments: data.data.allProyects.edges }) })\n\n    }\n\n    close() {\n        const args = {\n            message: 'Notification Title',\n            description:\n              'I will never close automatically. I will be close automatically. I will never close automatically.',\n            duration: 0,\n          };\n          notification.open(args);\n        // this.props.close()\n\n    }\n    search(experiment: Node) {\n        let word = `${experiment.name}${experiment.userByOwnerId.name}${experiment.userByOwnerId.lastName}${experiment.userByOwnerId.email}`.toLowerCase()\n\n        let n = word.includes(this.state.search.toLocaleLowerCase());\n        if (this.state.search==\"\" || n)\n            return true\n        return false\n\n    }\n\n    render() {\n        let experiments = this.state.experiments\n        return (<Modal size=\"lg\" show={true} onHide={() => { this.close() }}>\n            <Modal.Header closeButton>\n                <Modal.Title>Proyectos </Modal.Title>\n            </Modal.Header>\n            <Modal.Body>\n\n\n                <Form.Group controlId=\"exampleForm.ControlInput1\">\n\n                    <Form.Control type=\"text\" placeholder=\"Buscador..\" onChange={(e: any) => { this.setState({ search: e.target.value }) }} />\n                </Form.Group>\n\n                <Table striped bordered hover>\n                    <thead>\n                        <tr>\n                            <th>#</th>\n                            <th>Proyecto</th>\n                            <th>Responsable</th>\n                            <th>Opciones</th>\n\n                        </tr>\n                    </thead>\n\n\n                    <tbody>\n                        {experiments.map((edge: Edge, ix: number) => {\n                            let experiment = edge.node\n                            if (this.search(experiment) == false) {\n                                return null\n                            }\n\n                            return <tr>\n                                <td>{experiment.id}</td>\n                                <td>{experiment.name}</td>\n                                <td>{experiment.userByOwnerId.name} {experiment.userByOwnerId.lastName} </td>\n                                <td><Button onClick={()=>{alert(this.props.user)}} variant=\"success\">Agregar</Button> </td>\n\n                            </tr>\n                        })\n                        }\n\n                    </tbody>\n                </Table>\n\n            </Modal.Body>\n            <Modal.Footer>\n                <Button variant=\"secondary\" onClick={() => { this.close() }}>\n                    Cerrar\n          </Button>\n\n            </Modal.Footer>\n        </Modal>)\n\n    }\n}\n\nexport default AddProyects;","\nimport React, { Component, Props } from 'react';\nimport AddProyects from './addproyect';\n\n\nclass EditUserId extends Component<{ user: any, roles: any },{modal:boolean}> {\n    user: any\n    state={modal:false}\n    constructor(props: any) {\n        super(props)\n\n\n        this.user = props.user\n    }\n\n    check(rol:any,user:any){\n\n        for(let user_rol of user.rolesUsersByUserId.edges){\n            if(user_rol.node.roleId == rol.node.id){\n                return true\n            }\n        }\n        return false\n\n\n    }\n\n    render() {\n        return <div className=\"card card-outline-info\">\n                              {this.state.modal?<AddProyects user={this.user.id} close={()=>{ this.setState({modal:false})}} />:null}\n            <div className=\"card-header\">\n                <h4 className=\"mb-0 text-white\">{this.user.name} {this.user.lastName}</h4>\n            </div>\n            <div className=\"card-body\">\n                <form action=\"#\" className=\"form-horizontal\">\n                    <div className=\"form-body\">\n                        <h3 className=\"box-title\">Información Personal</h3>\n                        <hr className=\"mt-0 mb-5\" />\n                        <div className=\"row\">\n                            <div className=\"col-lg-6 col-md-12\">\n                                <div className=\"form-group row\">\n                                    <label className=\"col-sm-3 text-right col-form-label\">Nombre</label>\n                                    <div className=\"col-md-9\">\n                                        <input type=\"text\" className=\"form-control\" defaultValue={this.user.name} />\n                                    </div>\n                                </div>\n                            </div>\n                            {/*/span*/}\n                            <div className=\"col-lg-6 col-md-12\">\n                                <div className=\"form-group  row\">\n                                    <label className=\"control-label text-right col-md-3\">Apellido</label>\n                                    <div className=\"col-md-9\">\n                                        <input type=\"text\" className=\"form-control form-control-danger\" defaultValue={this.user.lastName} />\n                                    </div>\n                                </div>\n                            </div>\n                            {/*/span*/}\n                        </div>\n                        {/*/row*/}\n\n                        <div className=\"row\">\n                            <div className=\"col-lg-6 col-md-12\">\n                                <div className=\"form-group row\">\n                                    <label className=\"col-sm-3 text-right col-form-label\">Email</label>\n                                    <div className=\"col-md-9\">\n                                        <input type=\"text\" className=\"form-control\" defaultValue={this.user.email} />\n                                    </div>\n                                </div>\n                                <div className=\"form-group row\">\n                                    <label className=\"col-sm-3 text-right col-form-label\">Limite</label>\n                                    <div className=\"col-md-9\">\n                                        <input type=\"text\" className=\"form-control\" defaultValue={this.user.limit} />\n                                    </div>\n                                </div>\n                                \n                            </div>\n                            {/*/span*/}\n                            <div className=\"col-lg-6 col-md-12\">\n                            <div className=\"form-group row\">\n                                    <label className=\"col-sm-3 text-right col-form-label\">Creditos</label>\n                                    <div className=\"col-md-9\">\n                                        <input type=\"text\" className=\"form-control\" defaultValue={this.user.credit} />\n                                    </div>\n                                </div>\n                                <div className=\"form-group  row\">\n                                    <label className=\"control-label text-right col-md-3\">Contraseña</label>\n                                    <div className=\"col-md-9\">\n                                        <input type=\"password\" className=\"form-control\" defaultValue=\"\" />\n                                    </div>\n                                </div>\n                            </div>\n                            {/*/span*/}\n                        </div>\n                        {/*/row*/}\n\n\n\n\n                        <div className=\"row\">\n                            <div className=\"col-lg-6 col-md-12\">\n                                <div className=\"form-group row\">\n                                    <label className=\"control-label text-right col-md-3\">Dirección</label>\n                                    <div className=\"col-md-9\">\n                                        <input type=\"text\" className=\"form-control\" defaultValue={this.user.address} />\n                                    </div>\n                                </div>\n                            </div>\n                            {/*/span*/}\n                            <div className=\"col-lg-6 col-md-12\">\n                                <div className=\"form-group row\">\n                                    <label className=\"control-label text-right col-md-3\">Categorias</label>\n                                    <div className=\"col-md-9\">\n                                        <div className=\"mb-2\">\n                                            {this.props.roles.map((rol: any, ix: number) => <div className=\"custom-control custom-checkbox\" key={ix}>\n                                                <input type=\"checkbox\" className=\"custom-control-input\" defaultChecked={this.check(rol,this.user )} id={\"customCheck\"+ix} />\n                                                <label className=\"custom-control-label\" htmlFor={\"customCheck\"+ix} >{rol.node.name}</label>\n                                            </div>)\n                                            }\n\n                                        </div>\n                                    </div>\n                                </div>\n                            </div>\n                            {/*/span*/}\n                        </div>\n\n                        <hr />\n                        <div className=\"form-actions\">\n                            <div className=\"row\">\n                                <div className=\"col-md-6\">\n                                    <div className=\"row\">\n                                        <div className=\"col-md-offset-3 col-md-9\">\n                                            <button type=\"submit\" className=\"btn btn-success\">Actualizar cambios </button>\n                                            <button type=\"button\" className=\"btn btn-inverse\">Cancel</button>\n                                        </div>\n                                    </div>\n                                </div>\n                                <div className=\"col-md-6\"> </div>\n                            </div>\n                        </div>\n\n\n\n                        <h3 className=\"box-title\">Proyectos</h3>\n\n                         \n\n                        <hr className=\"mt-0 mb-5\" />\n                        {/*/row*/}\n                        <div className=\"row\">\n                            <div className=\"col-lg-12 col-md-12\">\n\n                                <div className=\"table-responsive\">\n                                    <table className=\"table no-wrap\">\n                                        <thead>\n                                            <tr>\n                                                <th>#</th>\n                                                <th>Proyecto</th>\n                                                <th>Responsable </th>\n                                                <th>Activado/por </th>\n                                                <th>Desactivado</th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                            {this.user.proyectsUsersByUserId.edges.map((proyect: any, ix: number) => {\n                                                return <tr key={ix}>\n                                                    <td> {proyect.node.proyectByProyectId.id}</td>\n                                                    <td>{proyect.node.proyectByProyectId.name}</td>\n                                                    <td> {proyect.node.proyectByProyectId.userByOwnerId.name} {proyect.node.proyectByProyectId.userByOwnerId.lastName} </td>\n                                                    <td>{proyect.node.proyectByProyectId.activateTime ? null : \"Aun no aceptado\"} {proyect.node.proyectByProyectId.userByActivateBy ? <div>{proyect.node.proyectByProyectId.userByActivateBy.name} {proyect.node.proyectByProyectId.userByActivateBy.lastName}</div> : null}</td>\n                                                    <td><span className=\"label label-danger\">Desactivar</span> </td>\n                                                </tr>\n                                            })}\n\n                                            {this.user.proyectsByOwnerId.edges.map((proyect: any, ix: number) => {\n                                                return <tr key={ix}>\n                                                    <td> {proyect.node.id}</td>\n                                                    <td>{proyect.node.name}</td>\n                                                    <td> {this.user.name} {this.user.lastName} </td>\n                                                    <td> </td>\n                                                    <td><span className=\"label label-info\">Propio</span> </td>\n                                                </tr>\n                                            })}\n\n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                        {/*/row*/}\n                    </div>\n\n                    <hr />\n                    <div className=\"form-actions\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-offset-3 col-md-9\">\n                                        <button onClick={(e)=>{ e.preventDefault(); this.setState({modal:true})}} className=\"btn btn-success\">Agregar nuevo proyecto como colaborador</button>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-6\"> </div>\n                        </div>\n                    </div>\n\n\n\n                </form>\n            </div>\n        </div>\n\n\n\n\n    }\n\n}\n\nexport default EditUserId;\n","import { Link } from \"react-router-dom\";\n\nimport React, { Component } from 'react';\nimport Resumen from './resumen';\nimport EditUserId from \"./edituser\";\nimport { GQL } from \"../Api\";\n\n\nclass EditUser extends Component<{match:any}> {\n  user : any\n  state={load:false,user:null,roles:[]}\n  constructor(props :any){\n      super(props)\n      this.user= new GQL(`{\n        allRoles {\n          edges {\n            node {\n              id\n              name\n            }\n          }\n        }\n        allUsers(condition: {id: ${+props.match.params.id}}, first: 1) {\n          edges {\n            node {\n              id\n              name\n              lastName\n              email\n              address\n              rut\n              dv\n              limit\n              credit\n              createdAt\n              updatedAt\n              rolesUsersByUserId {\n                edges {\n                  node {\n                    roleId\n                  }\n                }\n              }\n              proyectsUsersByUserId {\n                edges {\n                  node {\n                    proyectByProyectId {\n                      id\n                      name\n                      userByOwnerId {\n                        id\n                        name\n                        lastName\n                      }\n                    }\n                    userByActivateBy {\n                      id\n                      name\n                      lastName\n                      email\n                    }\n                    activateTime\n                    desactiveBy\n                    userByDesactiveBy {\n                      id\n                      name\n                      lastName\n                      email\n                    }\n                  }\n                }\n              }\n              proyectsByOwnerId {\n                edges {\n                  node {\n                    id\n                    name\n                  }\n                }\n              }\n            }\n          }\n        }\n      }      \n      `)\n      this.user.getAll().then((user:any) => {  this.setState({load:true,user:user.data.allUsers.edges[0].node,roles:user.data.allRoles.edges })})\n\n\n\n    }\n\n  render() {\n    return <div>\n      <div className=\"row page-titles\">\n        <div className=\"col-md-6 col-8 align-self-center\">\n          <h3 className=\"text-themecolor mb-0 mt-0\">Usuarios</h3>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Inicio</a></li>\n            <li className=\"breadcrumb-item active\">Editar usuarios</li>\n          </ol>\n        </div>\n\n      </div>\n\n      <div className=\"col-lg-12\">\n\n   {this.state.load ?<EditUserId user={this.state.user} roles={this.state.roles} />:null}\n\n\n      </div>\n\n\n\n    </div>\n\n\n  }\n\n}\n\nexport default EditUser;\n","import { Link } from \"react-router-dom\";\n\nimport React, { Component } from 'react';\n\nimport { GQL } from \"../Api\";\nimport { any } from \"prop-types\";\n\n\ninterface Node {\n    id: number;\n    name: string;\n    file: string;\n    __typename: string;\n}\n\ninterface Edge {\n    node: Node;\n    __typename: string;\n}\n\ninterface ExperimentDetailsByExperimentId {\n    edges: Edge[];\n    __typename: string;\n}\n\ninterface UserByOwnerId {\n    id: number;\n    name: string;\n    lastName: string;\n    __typename: string;\n}\n\ninterface UserByOwnerId2 {\n    id: number;\n    name: string;\n    lastName: string;\n    __typename: string;\n}\n\ninterface ProyectByProyectId {\n    id: number;\n    name: string;\n    userByOwnerId: UserByOwnerId2;\n    __typename: string;\n}\n\ninterface RootObject {\n    id: number;\n    experimentDetailsByExperimentId: ExperimentDetailsByExperimentId;\n    userByOwnerId: UserByOwnerId;\n    proyectByProyectId: ProyectByProyectId;\n    __typename: string;\n}\n\n\nclass Files extends Component<{experiments:any},{experiments:RootObject}> {\n\n\n  constructor(props :any){\n      super(props)\n      this.state={experiments : props.experiments as RootObject}\n    }\n\n    UNSAFE_componentWillReceiveProps(nextProps:any){\n        this.setState({experiments : nextProps.experiments as RootObject})\n\n\n    }\n    \n\n  render() {\n    return <div className=\"row\">\n    <div className=\"col-sm-12\">\n      <div className=\"card card-body\">\n        <h4 className=\"card-title\">Cargando muestra # {this.state.experiments.id} para {this.state.experiments.userByOwnerId.name} {this.state.experiments.userByOwnerId.lastName}  </h4>\n        <h5 className=\"card-subtitle\"> Proyecto {this.state.experiments.proyectByProyectId.name} Responsable {this.state.experiments.proyectByProyectId.userByOwnerId.name} {this.state.experiments.proyectByProyectId.userByOwnerId.lastName}  </h5>\n        <div className=\"row\">\n          <div className=\"col-sm-6 col-xs-12\">\n            <form className=\"form-horizontal row\">\n              <div className=\"col-12\">\n                \n              <div className=\"table-responsive\">\n                                    <table className=\"table no-wrap\">\n                                        <thead>\n                                            <tr>\n                                                <th>Posicion </th>\n                                                <th>Nombre</th>\n                                                <th>Archivo </th>\n                                                <th>Opciones </th>\n                                              \n                                            \n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                           {this.state.experiments.experimentDetailsByExperimentId.edges.map((experiment:Edge,ix:number)=>{\n                                                return   <tr key={ix}>\n                                                <td> {ix+1 }</td>\n                                                <td> {experiment.node.name }</td>\n                                                <td> {experiment.node.file }</td>\n\n                                                <td><span className=\"label label-success\">Seleccionar</span> <span className=\"label label-info\">Enviar RMN200</span> </td>\n                                            </tr> })} \n  {/* \n\n                                            {this.user.proyectsByOwnerId.edges.map((proyect:any,ix:number)=>{\n                                                return   <tr key={ix}>\n                                                <td> {proyect.node.id }</td>\n                                                <td>{proyect.node.name }</td>\n                                                <td> {this.user.name } {this.user.lastName } </td>\n                                                <td> </td>\n                                                <td><span className=\"label label-danger\">Desactivar</span> </td>\n                                            </tr> })} */}\n                                            \n                                        </tbody>\n                                    </table>\n                                </div>\n                           \n\n              </div>\n            </form>\n       \n          </div>\n          <div className=\"col-sm-5 offset-sm-1 col-xs-12\">\n            \n          <div className=\"table-responsive\">\n                                    <table className=\"table no-wrap\">\n                                        <thead>\n                                            <tr>\n                                                <th>#</th>\n                                                <th>Archivo </th>\n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                          {/* {this.state.data.map((data:any,ix:number)=>{\n                                                return   <tr key={ix}>\n                                                <td> {data.node.id }</td>\n                                                <td> {data.node.userByOwnerId.name } {data.node.userByOwnerId.lastName } </td>\n                                                <td> {data.node.proyectByProyectId.name }</td>\n                                                <td> {data.node.proyectByProyectId.userByOwnerId.name }  {data.node.proyectByProyectId.userByOwnerId.lastName }</td>\n\n                                                <td><span className=\"label label-success\">Seleccionar</span> <span className=\"label label-info\">Enviar RMN200</span> </td>\n                                            </tr> })} */}\n  {/* \n\n                                            {this.user.proyectsByOwnerId.edges.map((proyect:any,ix:number)=>{\n                                                return   <tr key={ix}>\n                                                <td> {proyect.node.id }</td>\n                                                <td>{proyect.node.name }</td>\n                                                <td> {this.user.name } {this.user.lastName } </td>\n                                                <td> </td>\n                                                <td><span className=\"label label-danger\">Desactivar</span> </td>\n                                            </tr> })} */}\n                                            \n                                        </tbody>\n                                    </table>\n                                </div>\n\n          </div>\n        </div>\n      </div>\n    </div>\n  </div>\n\n  }\n\n}\n\nexport default Files;","import { Link } from \"react-router-dom\";\n\nimport React, { Component } from 'react';\n\nimport { GQL } from \"../Api\";\nimport Files from \"./files\";\n\n\nclass Upload extends Component<{match:any}> {\n  experiments : any\n  state={load:false,data:[],experiments:null}\n  constructor(props :any){\n      super(props)\n      this.experiments= new GQL(`{\n        allExperiments(first:100,orderBy:ID_DESC,condition:{machineId:1}) {\n          edges {\n            node {\n              id\n              experimentDetailsByExperimentId(condition:{isReady:true}) {\n                edges {\n                  node {\n                    id\n                    name\n                    file\n                  }\n                }\n              }\n              userByOwnerId {\n                id\n                name\n                lastName\n              }\n              proyectByProyectId {\n                id\n                name\n                userByOwnerId {\n                  id\n                  name\n                  lastName\n                }\n              }\n            }\n          }\n        }\n      }    \n      `)\n      this.experiments.getAll().then((user:any) => {  this.setState({load:true,data:user.data.allExperiments.edges })})\n\n\n\n    }\n\n  render() {\n    return <div>\n      <div className=\"row page-titles\">\n        <div className=\"col-md-6 col-8 align-self-center\">\n          <h3 className=\"text-themecolor mb-0 mt-0\">Cargar resultados de RMN400</h3>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Inicio</a></li>\n            <li className=\"breadcrumb-item active\">carga de resultado</li>\n          </ol>\n        </div>\n\n      </div>\n\n      <div className=\"col-lg-12\">\n\n\n      <div className=\"card card-outline-info\">\n      \n            <div className=\"card-body\">\n                <form action=\"#\" className=\"form-horizontal\">\n                    <div className=\"form-body\">\n                        \n                        \n                       {this.state.experiments?<Files experiments={this.state.experiments}/>:null}\n\n                        <h3 className=\"box-title\">Experimentos</h3>\n                        <hr className=\"mt-0 mb-5\" />\n                        {/*/row*/}\n                        <div className=\"row\">\n                            <div className=\"col-lg-12 col-md-12\">\n\n                                <div className=\"table-responsive\">\n                                    <table className=\"table no-wrap\">\n                                        <thead>\n                                            <tr>\n                                                <th>#</th>\n                                                <th>Usuario </th>\n                                                <th>Proyecto</th>\n                                                <th>Responsable </th>\n                                                <th>Opciones </th>\n                                              \n                                            \n                                            </tr>\n                                        </thead>\n                                        <tbody>\n                                          {this.state.data.map((data:any,ix:number)=>{\n                                                return   <tr key={ix}>\n                                                <td> {data.node.id }</td>\n                                                <td> {data.node.userByOwnerId.name } {data.node.userByOwnerId.lastName } </td>\n                                                <td> {data.node.proyectByProyectId.name }</td>\n                                                <td> {data.node.proyectByProyectId.userByOwnerId.name }  {data.node.proyectByProyectId.userByOwnerId.lastName }</td>\n                                                <td><span onClick={()=>{ this.setState({experiments:data.node})} } className=\"label label-success\">Seleccionar</span> <span className=\"label label-info\">Enviar RMN200</span> </td>\n                                            </tr> })}\n \n                                            \n                                        </tbody>\n                                    </table>\n                                </div>\n                            </div>\n                        </div>\n                        {/*/row*/}\n                    </div>\n\n                    <hr />\n                    <div className=\"form-actions\">\n                        <div className=\"row\">\n                            <div className=\"col-md-6\">\n                                <div className=\"row\">\n                                    <div className=\"col-md-offset-3 col-md-9\">\n                                        <button type=\"submit\" className=\"btn btn-success\">Agregar nuevo proyecto</button>\n                                    </div>\n                                </div>\n                            </div>\n                            <div className=\"col-md-6\"> </div>\n                        </div>\n                    </div>\n\n\n\n                </form>\n            </div>\n        </div>\n\n\n\n      </div>\n\n\n\n    </div>\n\n\n  }\n\n}\n\nexport default Upload;","import React, { Component } from 'react';\nimport Api, { GQL } from \"../Api\";\n\nconst send = new Api(\"createExperiment\")\n\n\nclass RMN extends Component{\n\n\n  constructor(props) {\n    super(props)\n\n    // this.state = { load: false, machines: [], owned: [], proyects: [] }\n  this.state={machine:null,experiment : this.DefaultState() ,experiments : [] }\n    this.user = new GQL(`\n      {\n        allProyectsCredits(condition: {id: ${this.props.proyect_id}}) {\n          edges {\n            node {\n              id\n              name\n              lastName\n              proyect\n              available\n              credit\n            }\n          }\n        }\n        allMachines(condition:{id:2}) {\n          edges {\n            node {\n              id\n              name\n            }\n          }\n        }\n      }       \n      `)\n    //   this.state = {machines:{} as AllMachines }\n    this.user.getAll().then((out) => { this.setState({ machine: out.data.allMachines.edges, amount: +out.data.allProyectsCredits.edges[0].node.credit  }) })\n\n\n\n  }\n\n  Price(name){\n    let bidimensional = [\"cosy\",\"tocsy\",\"hsqc= obj.hmbc\",\"noesy\"]\n\n    if (bidimensional.includes(name)){\n        return 2\n    }\n    return 1 \n\n  }\n\n  DefaultState(){\n    let obj ={}\n    obj.name=\"\"\n    obj.solvente=\"\"\n    obj.preparete=1\n    obj.observate=\"\"\n    obj.recovery = true\n    obj.H1 =obj.C13 = obj.dept = obj.cosy = obj.tocsy = obj.hsqc= obj.hmbc = obj.noesy  =false\n    obj.B11 = obj.F19 = obj.P31 = obj.Si29 = obj.Pt125 =obj.Li7 = obj.Al27  = obj.Ag109 = obj.Otro = false\n    return obj\n\n  }\n\n  handlePreparete(num) {\n    let obj = this.state.experiment\n    obj.preparete = num\n    this.setState({ experiment: obj })\n\n  }\n\n  handleRecovery(recovery) {\n     let obj = this.state.experiment\n      obj.recovery = recovery\n    \n    this.setState({ experiment: obj })\n  }\n\n  handleOption(option){\n        let obj = this.state.experiment\n        obj[option] = !obj[option] \n        let amount = this.state.amount\n        if (  obj[option] ){\n          amount = amount-this.Price(option)\n        } \n        else{\n          amount = amount+this.Price(option)\n        }\n\n\n        this.setState({ experiment: obj,amount:amount })\n\n  }\n\n  handleName(event){\n    let obj = this.state.experiment\n    obj.name = event.target.value\n    this.setState({ experiment: obj })\n  }\n\n  handleObservate(event){\n    let obj = this.state.experiment\n    obj.observate = event.target.value\n    this.setState({ experiment: obj })\n  }\n\n  handleSolvent(event) {\n    let obj = this.state.experiment\n    obj.solvente = event.target.value\n    this.setState({value: event.target.value});\n  }\n\n  handleSubmit(event) {\n    // alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n    let obj = JSON.parse(JSON.stringify (this.state.experiment) )\n    this.state.experiments.push(obj)\n    let exp = this.DefaultState()\n    this.setState({experiment:exp})\n  }\n  handleSend(event) {\n    // alert('A name was submitted: ' + this.state.value);\n    event.preventDefault();\n    send.new({user_id : 1 , machine_id: +this.props.machine_id,experiments: this.state.experiments, proyect_id: +this.props.proyect_id })\n    \n\n  }\n\n\n  handleLast(){\n      this.state.experiments.pop()\n      this.setState({})\n  }\n\n  render() {\n    return <div className=\"col-lg-12\">\n\n\n        <div className=\"card card-outline-info\">\n\n          <div className=\"card-body\">\n            <form  className=\"form-horizontal\" onSubmit={(e)=> this.handleSubmit(e)}>\n              <div className=\"form-body\" >\n                <h3 className=\"box-title float-left \">{ this.state.machine!=null? this.state.machine[0].node.name :null }                            </h3>\n                <h2 className=\"box-title  float-right\">                   Creditos disponibles :    { this.state.amount!=null? this.state.amount :null }          </h2>\n              \n                <div className=\"form-horizontal\">\n        <div className=\"panel panel-default\">\n          <div className=\"panel-heading\">\n            <p className=\"mb20\"></p>\n            <div className=\"table-responsive\">\n              <table className=\"table mb30\">\n                <thead>\n                  <tr>\n                    <th> <label htmlFor=\"nombre_de_muestra\">Nombre de la muestra</label></th>\n                    <th> <label htmlFor=\"solvente\">Solvente</label></th>\n                    <th> <label htmlFor=\"preparacion_muestra\">Preparacion de la muestra</label></th>\n                    <th> <label htmlFor=\"Observaciones\">Observaciones/Cinetica u otros </label></th>\n                    <th> <label htmlFor=\"devolucion\">Recuperación la muestra</label></th>\n                  </tr>\n                </thead>\n                <tbody>\n                  <tr>\n                    <td><input value={this.state.experiment.name} onChange={(e)=>{this.handleName(e)} }  className=\"form-control ng-pristine ng-valid ng-touched\" id=\"nombre_de_muestra\" name=\"nombre_de_muestra\" ng-model=\"test.nombre_de_muestra\" type=\"text\"  /></td>\n                    <td><select className=\"form-control ng-pristine ng-untouched ng-valid\"  onChange={(e)=> this.handleSolvent(e)}>                        \n                    <option value=\"\"></option>\n                        <option value=\"Cloroformo-d1\">Cloroformo-d1</option>\n                        <option value=\"DMSO-d6\">DMSO-d6</option>\n                        <option value=\"D2O\">D2O</option>\n                        <option value=\"Acetona-d6\">Acetona-d6</option>\n                        <option value=\"Acido acetico-d4\">Acido acetico-d4</option>\n                        <option value=\"Acido F3-Acetico-d1\">Acido F3-Acetico-d1</option>\n                        <option value=\"Aceto nitrilo-d3\">Aceto nitrilo-d3</option>\n                        <option value=\"Benceno-d6\">Benceno-d6</option>\n                        <option value=\"Ciclohexano-d12\">Ciclohexano-d12</option>\n                        <option value=\"Diclorometano-d2\">Diclorometano-d2</option>\n                        <option value=\"Dietileter-d10\">Dietileter-d10</option>\n                        <option value=\"Diohexano-d6\">Diohexano-d6</option>\n                        <option value=\"DCl\">DCl</option>\n                        <option value=\"D2So4\">D2So4</option>\n                        <option value=\"Etanol-d6\">Etanol-d6</option>\n                        <option value=\"Metanol-d4\">Metanol-d4</option>\n                        <option value=\"Nitrobenceno-d5\">Nitrobenceno-d5</option>\n                        <option value=\"nitrometano-d3\">nitrometano-d3</option>\n                        <option value=\"Propanol-d8\">Propanol-d8</option>\n                        <option value=\"Piridina-d5\">Piridina-d5</option>\n                        <option value=\"Tolueno-d8\">Tolueno-d8</option>\n                        <option value=\"THF-d8\">THF-d8</option>\n                        <option value=\"DMF-d7\">DMF-d7</option>\n                        <option value=\"Otro\">Otro</option></select></td>\n                    <td><div ><label><input type=\"checkbox\" onClick={(e)=>{this.handlePreparete(1) }} checked={this.state.experiment.preparete==1}/> Lista en tubo</label></div>\n                      <div ><label><input type=\"checkbox\"  onClick={(e)=>{this.handlePreparete(2) }} checked={this.state.experiment.preparete==2} /> Muestra en solvente deulterado (Requiere tubo)</label></div>\n                      <div ><label><input type=\"checkbox\"  onClick={(e)=>{this.handlePreparete(3) }} checked={this.state.experiment.preparete==3} /> Preparación UCI-FQ (se añade solvente y tubo)</label></div></td>\n                    <td><textarea value={this.state.experiment.solvente} onChange={(e)=>{this.handleObservate(e)} }   className=\"form-control ng-pristine ng-untouched ng-valid\" id=\"Observaciones\" name=\"Observaciones\" ng-model=\"test.Observaciones\" rows={1} value={\"\"} /></td>\n                    <td><div ><label><input type=\"checkbox\"  onClick={(e)=>{this.handleRecovery(true) }  } checked={this.state.experiment.recovery} />SI</label></div>\n                      <div ><label><input type=\"checkbox\" onClick={(e)=>{this.handleRecovery(false) }  } checked={!this.state.experiment.recovery} />NO</label></div></td>\n                  </tr>\n                </tbody>\n              </table>\n              <table className=\"table mb30\">\n                <thead>\n                  <tr>\n                    <th> <label htmlFor=\"H1\">H1</label></th>\n                    <th> <label htmlFor=\"C13\">C13</label></th>\n                    <th> <label htmlFor=\"dept\">DEPT</label></th>\n                    <th> <label htmlFor=\"cosy\">COSY</label></th>\n                    <th> <label htmlFor=\"tocsy\">TOCSY</label></th>\n                    <th> <label htmlFor=\"HMQC\">HSQC</label></th>\n                    <th> <label htmlFor=\"HMBC\">HMBC</label></th>\n                    <th> <label htmlFor=\"NOESY\">NOESY</label></th>\n                    <th> <label htmlFor=\"OtrosNucleos\">OtrosNucleos</label></th>\n                  </tr>\n                  <tr>\n                    <td><input onClick={(e)=>this.handleOption(\"H1\")  } id=\"H1\" name=\"H1\" ng-model=\"test.H1\" type=\"checkbox\" checked={this.state.experiment.H1} className=\"ng-pristine ng-untouched ng-valid\" /></td>\n                    <td><input onClick={(e)=>this.handleOption(\"C13\")  } id=\"C13\" name=\"C13\" ng-model=\"test.C13\" type=\"checkbox\" checked={this.state.experiment.C13} className=\"ng-pristine ng-untouched ng-valid\" /></td>\n                    <td><input onClick={(e)=>this.handleOption(\"dept\")  } id=\"dept\" name=\"dept\" ng-model=\"test.dept\" type=\"checkbox\" checked={this.state.experiment.dept} className=\"ng-pristine ng-untouched ng-valid\" /></td>\n                    <td><input onClick={(e)=>this.handleOption(\"cosy\")  } id=\"cosy\" name=\"cosy\" ng-model=\"test.cosy\" type=\"checkbox\" checked={this.state.experiment.cosy} className=\"ng-pristine ng-untouched ng-valid\" /></td>\n                    <td><input onClick={(e)=>this.handleOption(\"tocsy\")  } id=\"tocsy\" name=\"tocsy\" ng-model=\"test.tocsy\" type=\"checkbox\" checked={this.state.experiment.tocsy} className=\"ng-pristine ng-untouched ng-valid\" /></td>\n                    <td><input onClick={(e)=>this.handleOption(\"hsqc\")  } id=\"HMQC\" name=\"HMQC\" ng-model=\"test.HMQC\" type=\"checkbox\" checked={this.state.experiment.hsqc} className=\"ng-pristine ng-untouched ng-valid\" /></td>\n                    <td><input onClick={(e)=>this.handleOption(\"hmqc\")  } id=\"HMBC\" name=\"HMBC\" ng-model=\"test.HMBC\" type=\"checkbox\" checked={this.state.experiment.hmqc} className=\"ng-pristine ng-untouched ng-valid\" /></td>\n                    <td><input onClick={(e)=>this.handleOption(\"noesy\")  } id=\"NOESY\" name=\"NOESY\" ng-model=\"test.NOESY\" type=\"checkbox\" checked={this.state.experiment.noesy} className=\"ng-pristine ng-untouched ng-valid\" /></td>\n                    <td>   \n                        <div ><label><input checked={this.state.experiment.B11}  onClick={(e)=>this.handleOption(\"B11\")  }  type=\"checkbox\"  /> B11</label></div>\n                      <div ><label><input checked={this.state.experiment.F19}  onClick={(e)=>this.handleOption(\"F19\")  }  type=\"checkbox\"  /> F19</label></div>\n                      <div ><label><input checked={this.state.experiment.P31}  onClick={(e)=>this.handleOption(\"P31\")  }  type=\"checkbox\"  /> P31</label></div>\n                      <div ><label><input checked={this.state.experiment.Si29}  onClick={(e)=>this.handleOption(\"Si29\")  }  type=\"checkbox\" /> Si29</label></div>\n                      <div ><label><input checked={this.state.experiment.Pt125}  onClick={(e)=>this.handleOption(\"Pt125\")  }  type=\"checkbox\" /> Pt125</label></div>\n                      <div ><label><input checked={this.state.experiment.Li7}  onClick={(e)=>this.handleOption(\"Li7\")  }  type=\"checkbox\" /> Li7</label></div>\n                      <div ><label><input checked={this.state.experiment.Al27}  onClick={(e)=>this.handleOption(\"Al27\")  }  type=\"checkbox\" /> Al27</label></div>\n                      <div ><label><input checked={this.state.experiment.Ag109}  onClick={(e)=>this.handleOption(\"Ag109\")  }  type=\"checkbox\" /> Ag109</label></div>\n\n                      \n                      <div ><label><input checked={this.state.experiment.Otro}  onClick={(e)=>this.handleOption(\"Otro\")  }  type=\"checkbox\" /> Otro</label></div>\n                    </td>\n                  </tr>\n                </thead></table>\n            </div>{/* panel-body */}\n \n          </div>{/* panel-default */}\n        </div>\n      </div>\n\n                <hr />\n                <div className=\"form-actions\">\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <div className=\"row\">\n                        <div className=\"col-md-offset-3 col-md-9\">\n                          <button type=\"submit\" className=\"btn btn-success\">Agregar </button>\n                          <button type=\"button\" className=\"btn btn-inverse\">Cancel</button>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\"> </div>\n                  </div>\n                </div>\n\n\n\n\n              </div>\n\n\n\n            </form>\n          </div>\n        \n        \n        \n        </div>\n\n\n        <div className=\"card card-outline-info\">\n\n{this.state.experiments.length?<div className=\"card-body\">\n  <form  className=\"form-horizontal\" onSubmit={(e)=> this.handleSend(e)}>\n    \n  <div className=\"form-horizontal\">\n        <div className=\"panel panel-default\">\n          <div className=\"panel-heading\">\n            <div className=\"table-responsive\">\n              <table className=\"table mb30\">\n                <thead>\n                  <tr><th> <label htmlFor=\"nombre_de_muestra\">Numero </label></th>\n                    <th> <label htmlFor=\"nombre_de_muestra\">Muestra</label></th>\n                    <th> <label htmlFor=\"nombre_de_muestra\">Costo Presupuestado</label></th>\n                  </tr></thead>\n                <tbody>\n                 {this.state.experiments.map((experiment,ix)=><tr key={ix} className=\"ng-scope\">\n                    <th className=\"ng-binding\">{ix+1}</th>\n                    <th className=\"ng-binding\">{experiment.name}</th>\n                    <th className=\"ng-binding\">100</th>\n                 </tr> )}\n                </tbody>\n              </table>\n            </div>{/* table-responsive */}\n            <div className=\"panel-footer\">\n              <button className=\"btn btn-success mr5\" >Enviar orden</button>\n              <button className=\"btn btn-danger\" onClick={()=>{ this.handleLast()}  } >Eliminar Ultimo</button>\n            </div>{/* panel-footer */}\n          </div>{/* table-responsive */} </div>{/* table-responsive */}\n      </div>\n\n  </form>\n</div>:null}\n\n\n\n</div>\n\n\n\n      </div>\n\n\n \n\n\n  }\n\n}\n\nexport default RMN;","\nimport React, { Component } from 'react';\nimport Api, { GQL, GQLAPI } from \"../Api\";\nimport { thisTypeAnnotation } from '@babel/types';\nimport RMN from './rmn';\n\ninterface Node {\n  id: number;\n  name: string;\n}\n\ninterface Machines {\n  node: Node;\n}\n\ninterface AllMachines {\n  edges: Machines[];\n}\n\ninterface UserByOwnerId {\n  id: number;\n  name: string;\n  lastName: string;\n}\n\ninterface Node2 {\n  id: number;\n  name: string;\n  userByOwnerId: UserByOwnerId;\n}\n\ninterface Edge2 {\n  node: Node2;\n}\n\ninterface AllProyects {\n  edges: Edge2[];\n}\n\ninterface UserByOwnerId2 {\n  name: string;\n  lastName: string;\n}\n\ninterface ProyectByProyectId {\n  name: string;\n  userByOwnerId: UserByOwnerId2;\n}\n\ninterface Node3 {\n  proyectByProyectId: ProyectByProyectId;\n}\n\ninterface Edge3 {\n  node: Node3;\n}\n\ninterface AllProyectsUsers {\n  edges: Edge3[];\n}\n\ninterface Data {\n  allMachines: AllMachines;\n  allProyects: AllProyects;\n  allProyectsUsers: AllProyectsUsers;\n}\n\nexport interface RootObject {\n  data: Data;\n}\n\n\nclass NewExperiment extends Component<{}, { load: boolean, machines: Machines[], owned: Edge2[], proyects: Edge3[], proyect_id: number, machine: number }> {\n  user: any\n\n\n  constructor(props: any) {\n    super(props)\n\n    this.state = { load: false, machines: [], owned: [], proyects: [],proyect_id:0 , machine:0 }\n    //   this.state={machines:[] as Machines ,owned:null,proyects:null}\n    this.user = new Api(\"graphql/proyects\")\n    //   this.state = {machines:{} as AllMachines }\n    this.user.getAll().then((out: any) => { console.log(out); this.setState({ machines: out.data.allMachines.edges as Machines[], owned: out.data.allProyects.edges as Edge2[], proyects: out.data.allProyectsUsers.edges as Edge3[] }) })\n\n\n\n  }\n\n  handleProyect(event: any) {\n    this.setState({ proyect_id: event.target.value })\n\n  }\n\n  handleMachine(event: any) {\n    this.setState({ machine: event.target.value })\n  }\n\n\n  handleSubmit(event: any) {\n    event.preventDefault();\n    this.setState({load:true})\n\n  }\n\n\n\n  render() {\n    return <div>\n      <div className=\"row page-titles\">\n        <div className=\"col-md-6 col-8 align-self-center\">\n          <h3 className=\"text-themecolor mb-0 mt-0\">Crear un nuevo  Experimento</h3>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Inicio</a></li>\n            <li className=\"breadcrumb-item active\">Nuevo experimento</li>\n          </ol>\n        </div>\n\n      </div>\n\n      <div className=\"col-lg-12\">\n\n\n        <div className=\"card card-outline-info\">\n\n          <div className=\"card-body\">\n            <form action=\"#\" className=\"form-horizontal\" onSubmit={(e:any) => this.handleSubmit(e)   }>\n              <div className=\"form-body\">\n                <h3 className=\"box-title\">Información Personal                                 </h3>\n                <hr className=\"mt-0 mb-3\" />\n                <div className=\"row\">\n                  <div className=\"col-lg-12 col-md-12\">\n                    <div className=\"form-group row\">\n                      <label className=\"col-sm-3 text-right col-form-label\">Maquina</label>\n                      <div className=\"col-md-9\">\n                        <select className=\"custom-select col-12\" onChange={(e: any) => { this.handleMachine(e) }}>\n                          <option >Seleccionar una maquina</option>\n                          {this.state.machines.map((machine: any, ix: number) => <option key={ix} value={machine.node.id} >{machine.node.name}</option>)}\n                        </select>\n\n\n                      </div>\n                    </div>\n\n                  </div>\n                  {/*/span*/}\n                  <div className=\"col-lg12 col-md-12\">\n                    <div className=\"form-group  row\">\n                      <label className=\"control-label text-right col-md-3\">Proyecto</label>\n                      <div className=\"col-md-9\">\n                        <select className=\"custom-select col-12\" onChange={(e: any) => { this.handleProyect(e) }} >\n                          <option >Seleccione un proyecto</option>\n                          {this.state.owned.map((owned: any, ix: number) => <option key={\"1\" + ix} value={owned.node.id} >{owned.node.name} Responsable {owned.node.userByOwnerId.name} {owned.node.userByOwnerId.lastName}</option>)}\n\n\n                          {this.state.proyects.map((proyect: any, ix: number) => <option key={\"A\" + ix} value={proyect.node.proyectByProyectId.id} >{proyect.node.proyectByProyectId.name} Responsable {proyect.node.proyectByProyectId.userByOwnerId.name} {proyect.node.proyectByProyectId.userByOwnerId.lastName} </option>)}\n                        </select>\n                      </div>\n                    </div>\n                  </div>\n                  {/*/span*/}\n                </div>\n                {/*/row*/}\n\n                <hr />\n                <div className=\"form-actions\">\n                  <div className=\"row\">\n                    <div className=\"col-md-6\">\n                      <div className=\"row\">\n                        <div className=\"col-md-offset-3 col-md-9\">\n                          <button type=\"submit\" className=\"btn btn-success\">Siguiente </button>\n                          <button type=\"button\" className=\"btn btn-inverse\">Cancel</button>\n                        </div>\n                      </div>\n                    </div>\n                    <div className=\"col-md-6\"> </div>\n                  </div>\n                </div>\n\n\n\n\n              </div>\n\n\n\n            </form>\n          </div>\n        </div>\n\n\n\n      </div>\n\n\n      {this.state.load ? <RMN proyect_id={this.state.proyect_id} machine_id={this.state.machine} /> : null}\n\n      {/* <RMN proyect_id={144} machine_id={1} /> */}\n    </div>\n\n\n  }\n\n}\n\nexport default NewExperiment;","\nimport React, { Component } from 'react';\nimport { GQL } from '../../Api';\n\n\n\nclass AddPayment extends Component<{}, {users:any,proyects:any }> {\n  user: any\n\n\n  constructor(props: any) {\n    super(props)\n\n    this.state = { users: [], proyects: [] }\n    //   this.state={machines:[] as Machines ,owned:null,proyects:null}\n    this.user = new GQL(`{\n      allUsers {\n        edges {\n          node {\n            id\n            name\n            lastName\n          }\n        }\n      }\n      allProyects {\n        edges {\n          node {\n            id\n            name\n            userByOwnerId {\n              id\n              name\n              lastName\n            }\n          }\n        }\n      }\n    }\n    `).getAll().then((out:any) => { this.setState({users:out.data.allUsers.edges, proyects:out.data.allProyects.edges }) } )\n\n\n\n  }\n\n  render() {\n    return <div>\n\n\n\n      <div className=\"row page-titles\">\n        <div className=\"col-md-6 col-8 align-self-center\">\n          <h3 className=\"text-themecolor mb-0 mt-0\">Agregar un pago</h3>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Inicio</a></li>\n            <li className=\"breadcrumb-item active\">Agregar un pago  a un usuario o un proyecto</li>\n          </ol>\n        </div>\n\n      </div>\n\n\n\n\n\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Agregar saldo a un usuario</h4>\n              <form className=\"form pt-3\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputuname\">Usuario </label>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\" id=\"basic-addon1\">\n                        <i className=\"ti-user\" />\n                      </span>\n                    </div>\n                    <select className=\"form-control\" >\n                            <option>Elegir un usuario</option>\n\n                            {this.state.users.map((user:any,ix:number)=><option key={ix} value={user.node.id }> {user.node.name}  {user.node.lastName}</option>  )}\n\n                    </select>                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputEmail1\">Saldo</label>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\" id=\"basic-addon1\">\n                        <i className=\"ti-money\" />\n                      </span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Agregar saldo en U.F.\" />\n                  </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-success waves-effect waves-light mr-2\">Agregar Saldo</button>\n                <button type=\"submit\" className=\"btn btn-inverse waves-effect waves-light\">Cancel</button>\n              </form>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Agregar saldo a un proyecto</h4>\n              <form className=\"form pt-3\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputuname\">Proyecto </label>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\" id=\"basic-addon1\">\n                        <i className=\"ti-user\" />\n                      </span>\n                    </div>\n                    <select className=\"form-control\" >\n                            <option>Elegir un proyecto</option>\n\n                            {this.state.proyects.map((proyect:any,ix:number)=><option key={ix} value={proyect.node.id }> {proyect.node.name} R :  {proyect.node.userByOwnerId.name} {proyect.node.userByOwnerId.lastName}</option>  )}\n\n                    </select>                  </div>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputEmail1\">Saldo</label>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\" id=\"basic-addon1\">\n                        <i className=\"ti-money\" />\n                      </span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Agregar saldo en U.F.\" />\n                  </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-success waves-effect waves-light mr-2\">Agregar Saldo</button>\n                <button type=\"submit\" className=\"btn btn-inverse waves-effect waves-light\">Cancel</button>\n              </form>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n\n\n    </div>\n\n\n  }\n\n}\n\nexport default AddPayment;","\nimport React, { Component } from 'react';\nimport { GQL } from '../../Api';\n\nclass Transfer extends Component<{}, {proyects:any}> {\n  user: any\n\n\n  constructor(props: any) {\n    super(props)\n\n    this.state = {  proyects: [] }\n    //   this.state={machines:[] as Machines ,owned:null,proyects:null}\n    this.user = new GQL(`{\n\n      allProyects {\n        edges {\n          node {\n            id\n            name\n            \n          }\n        }\n      }\n    }\n    `).getAll().then((out:any) => { this.setState({proyects:out.data.allProyects.edges }) } )\n\n\n\n  }\n\n  render() {\n    return <div>\n      <div className=\"row page-titles\">\n        <div className=\"col-md-6 col-8 align-self-center\">\n          <h3 className=\"text-themecolor mb-0 mt-0\">Transferir saldo desde mi cuenta  a un proyecto </h3>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Inicio</a></li>\n            <li className=\"breadcrumb-item active\">Transferencia de saldos </li>\n          </ol>\n        </div>\n\n      </div>\n\n\n\n\n\n      <div className=\"row\">\n        <div className=\"col-lg-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Transferir saldos en U.F.</h4>\n              <form className=\"form pt-3\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputuname\">Usuario </label>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\" id=\"basic-addon1\">\n                        <i className=\"ti-user\" />\n                      </span>\n                    </div>\n                    <select className=\"form-control\" >\n                            <option>Elegir un proyecto</option>\n\n                            {this.state.proyects.map((proyect:any,ix:number)=><option key={ix} value={proyect.node.id }> {proyect.node.name} </option>  )}\n\n                    </select>                   </div>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputEmail1\">Saldo</label>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\" id=\"basic-addon1\">\n                        <i className=\"ti-money\" />\n                      </span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Agregar saldo en U.F.\" />\n                  </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-success waves-effect waves-light mr-2\">Agregar saldo</button>\n                <button type=\"submit\" className=\"btn btn-inverse waves-effect waves-light\">Cancel</button>\n              </form>\n            </div>\n          </div>\n        </div>\n        <div className=\"col-lg-6\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <h4 className=\"card-title\">Transferir creditos </h4>\n              <form className=\"form pt-3\">\n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputuname\">Proyecto </label>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\" id=\"basic-addon1\">\n                        <i className=\"ti-user\" />\n                      </span>\n                    </div>\n                    <select className=\"form-control\" >\n                            <option>Elegir un proyecto</option>\n\n                            {this.state.proyects.map((proyect:any,ix:number)=><option key={ix} value={proyect.node.id }> {proyect.node.name} </option>  )}\n\n                    </select>                    </div>\n                </div>\n                <div className=\"form-group\">\n                  <label htmlFor=\"exampleInputEmail1\">Saldo</label>\n                  <div className=\"input-group\">\n                    <div className=\"input-group-prepend\">\n                      <span className=\"input-group-text\" id=\"basic-addon1\">\n                        <i className=\"ti-money\" />\n                      </span>\n                    </div>\n                    <input type=\"text\" className=\"form-control\" id=\"exampleInputEmail1\" placeholder=\"Agregar saldo en U.F.\" />\n                  </div>\n                </div>\n\n                <button type=\"submit\" className=\"btn btn-success waves-effect waves-light mr-2\">Agregar saldo</button>\n                <button type=\"submit\" className=\"btn btn-inverse waves-effect waves-light\">Cancel</button>\n              </form>\n            </div>\n          </div>\n        </div>\n\n      </div>\n\n\n\n    </div>\n\n\n  }\n\n}\n\nexport default Transfer;","\nimport React, { Component } from 'react';\nimport { GQL } from '../../Api';\n\nclass BuyBugs extends Component<{}, {}> {\n  user: any\n\n\n  constructor(props: any) {\n    super(props)\n\n    this.state = { load: false, machines: [], owned: [], proyects: [] }\n    //   this.state={machines:[] as Machines ,owned:null,proyects:null}\n    this.user = new GQL(`{\n        allMachines {\n          edges {\n            node {\n              id\n              name\n            }\n          }\n        }\n        allProyects(condition: {ownerId: 2}) {\n          edges {\n            node {\n              id\n              name\n              userByOwnerId {\n                id\n                name\n                lastName\n              }\n            }\n          }\n        }\n        allProyectsUsers(condition: {userId: 246}) {\n          edges {\n            node {\n              proyectByProyectId {\n                name\n                userByOwnerId {\n                  name\n                  lastName\n                }\n              }\n            }\n          }\n        }\n      }       \n      `)\n\n\n\n  }\n\n  render() {\n    return <div>\n      <div className=\"row page-titles\">\n        <div className=\"col-md-6 col-8 align-self-center\">\n          <h3 className=\"text-themecolor mb-0 mt-0\">Comprar bolsas RMN </h3>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Inicio</a></li>\n            <li className=\"breadcrumb-item active\">comprar bolsas RMN </li>\n          </ol>\n        </div>\n\n      </div>\n\n      <div className=\"row\">\n        <div className=\"col-12\">\n          <div className=\"card\">\n            <div className=\"card-body\">\n              <div className=\"row pricing-plan\">\n                <div className=\"col-md-4 col-xs-12 col-sm-6 no-padding\">\n                  <div className=\"pricing-box\">\n                    <div className=\"pricing-body border-left\">\n                      <div className=\"pricing-header\">\n                        <h4 className=\"text-center\">Silver</h4>\n                        <h2 className=\"text-center\"><span className=\"price-sign\">$</span>18</h2>\n                        <p className=\"uppercase\">U.F.</p>\n                      </div>\n                      <div className=\"price-table-content\">\n                        <div className=\"price-row\"><i className=\"icon-user\" /> 3 Members</div>\n                        <div className=\"price-row\"><i className=\"icon-screen-smartphone\" /> Single Device</div>\n                        <div className=\"price-row\"><i className=\"icon-drawar\" /> 50GB Storage</div>\n                        <div className=\"price-row\"><i className=\"icon-refresh\" /> Monthly Backups</div>\n                        <div className=\"price-row\">\n                          <button className=\"btn btn-success waves-effect waves-light mt-3\">Canjear</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-4 col-xs-12 col-sm-6 no-padding\">\n                  <div className=\"pricing-box border-left\">\n                    <div className=\"pricing-body\">\n                      <div className=\"pricing-header\">\n                        <h4 className=\"text-center\">Gold</h4>\n                        <h2 className=\"text-center\"><span className=\"price-sign\">$</span>27</h2>\n                        <p className=\"uppercase\">U.F.</p>\n                      </div>\n                      <div className=\"price-table-content\">\n                        <div className=\"price-row\"><i className=\"icon-user\" /> 5 Members</div>\n                        <div className=\"price-row\"><i className=\"icon-screen-smartphone\" /> Single Device</div>\n                        <div className=\"price-row\"><i className=\"icon-drawar\" /> 80GB Storage</div>\n                        <div className=\"price-row\"><i className=\"icon-refresh\" /> Monthly Backups</div>\n                        <div className=\"price-row\">\n                          <button className=\"btn btn-success waves-effect waves-light mt-3\">Canjear</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                <div className=\"col-md-4 col-xs-12 col-sm-6 no-padding\">\n                  <div className=\"pricing-box featured-plan\">\n                    <div className=\"pricing-body\">\n                      <div className=\"pricing-header\">\n                        <h4 className=\"price-lable text-white bg-success  \">Mas barato</h4>\n                        <h4 className=\"text-center\">Platinum</h4>\n                        <h2 className=\"text-center\"><span className=\"price-sign\">$</span>36</h2>\n                        <p className=\"uppercase\">U.F.</p>\n                      </div>\n                      <div className=\"price-table-content\">\n                        <div className=\"price-row\"><i className=\"icon-user\" /> 10 Members</div>\n                        <div className=\"price-row\"><i className=\"icon-screen-smartphone\" /> Single Device</div>\n                        <div className=\"price-row\"><i className=\"icon-drawar\" /> 120GB Storage</div>\n                        <div className=\"price-row\"><i className=\"icon-refresh\" /> Monthly Backups</div>\n                        <div className=\"price-row\">\n                          <button className=\"btn btn-lg btn-info waves-effect waves-light mt-3\">Canjear</button>\n                        </div>\n                      </div>\n                    </div>\n                  </div>\n                </div>\n                \n              </div>\n            </div>\n          </div>\n        </div>\n      </div>\n\n    </div>\n\n\n  }\n\n}\n\nexport default BuyBugs;","import React, { Component } from 'react';\nimport {GQL} from '../Api';\nimport { Link } from \"react-router-dom\";\n\n\n//const ApiExperiments  =new  Api(\"experiments\")\n\nconst ApiExperiments=new GQL(`\n{\n  allProyectsCredits{\n    edges {\n      node {\n        id\n        name\n        proyect\n        lastName\n        available\n        credit\n      }\n    }\n  }\n}\n\n`)\n\n\nfunction parseDate(jsonDateString : string)  {\n  var d= new Date(jsonDateString);\n  return d.getDate() + \"/\" + d.getMonth() + \"/\" + d.getFullYear(); \n}\n\n\nclass Resumen extends Component {\n  state={experiments:[]}\n\n  constructor(props:any) {\n    super(props)\n\n    ApiExperiments.getAll().then((experiments :any) => {  \n\n      console.log(experiments)\n     this.setState({experiments:experiments.data.allProyectsCredits.edges}) \n}  )\n    \n\n}\n\n  render() {\n    return (  <div className=\"card\">\n\n    \n    <div className=\"table-responsive\">\n      <table className=\"table table-hover no-wrap\">\n        <thead>\n          <tr>\n            <th className=\"text-center\">#</th>\n            <th>Proyecto</th>\n            <th>Responsable </th>\n            <th>Saldo Max Posible</th>\n            <th>Credito Max Posible</th>\n            <th>Editar</th>\n          </tr>\n        </thead>\n        <tbody>\n           {this.state.experiments.map((experiment:any,ix) => {\n          return     <tr key={ix}>\n         \n            <td className=\"text-center\">{experiment.node.id}</td>\n            <td className=\"txt-oflo\">{experiment.node.proyect}</td>\n            <td className=\"txt-oflo\">{experiment.node.name} {experiment.node.lastName} </td>\n            <td className=\"txt-oflo\">{experiment.node.available/100} U.F. </td>\n            <td className=\"txt-oflo\">{experiment.node.credit} CR </td>      \n            <td className=\"txt-oflo\"> <Link to={\"/proyects/\"+experiment.node.id} >  Editar </Link></td>\n       \n          </tr>     \n          })} \n          \n        </tbody>\n      </table>\n    </div>\n  </div>\n)\n\n    }\n}\nexport default Resumen;\n","import React, { Component } from 'react';\nimport Resumen from './resumen';\n\n\nclass Proyects extends Component {\n\n  render() {\n    return <div>\n      <div className=\"row page-titles\">\n        <div className=\"col-md-6 col-8 align-self-center\">\n          <h3 className=\"text-themecolor mb-0 mt-0\">Proyectos</h3>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Inicio</a></li>\n            <li className=\"breadcrumb-item active\">Lista de proyectos</li>\n          </ol>\n        </div>\n\n      </div>\n\n      <div className=\"col-lg-12\">\n\n        <Resumen />\n\n      </div>\n\n\n\n    </div>\n\n\n  }\n\n}\n\nexport default Proyects;\n","import React, { Component } from 'react';\nimport {GQL} from '../Api';\nimport { Link } from \"react-router-dom\";\n\n\n//const ApiExperiments  =new  Api(\"experiments\")\n\nconst ApiExperiments=new GQL(`\n{\n  allExperimentDetails(condition: {isObservate: true}) {\n    edges {\n      node {\n        id\n        name\n        price\n        observate\n        experimentByExperimentId {\n          id\n          proyectByProyectId {\n            id\n            name\n            userByOwnerId {\n              id\n              name\n              lastName\n            }\n          }\n          userByOwnerId {\n            id\n            name\n            lastName\n          }\n        }\n      }\n    }\n  }\n}\n\n`)\n\n\nfunction parseDate(jsonDateString : string)  {\n  var d= new Date(jsonDateString);\n  return d.getDate() + \"/\" + d.getMonth() + \"/\" + d.getFullYear(); \n}\n\n\nclass Resumen extends Component {\n  state={experiments:[]}\n\n  constructor(props:any) {\n    super(props)\n\n    ApiExperiments.getAll().then((experiments :any) => {  \n\n      console.log(experiments)\n     this.setState({experiments:experiments.data.allExperimentDetails.edges}) \n}  )\n    \n\n}\n\n  render() {\n    return (  <div className=\"card\">\n\n    \n    <div className=\"table-responsive\">\n      <table className=\"table table-hover no-wrap\">\n        <thead>\n          <tr>\n            <th className=\"text-center\">#</th>\n            <th>Experimento</th>\n            <th>Creador</th>\n            <th>Proyecto</th>\n            <th>Responsable</th>\n\n            <th>Observacion</th>\n            <th>Costo</th>\n            <th>Muestra</th>\n          </tr>\n        </thead>\n        <tbody>\n           {this.state.experiments.map((experiment:any,ix) => {\n          return     <tr key={ix}>\n         \n            <td className=\"text-center\">{experiment.node.experimentByExperimentId.id}</td>\n            <td className=\"txt-oflo\">{experiment.node.name}</td>\n            <td className=\"txt-oflo\">{experiment.node.experimentByExperimentId.userByOwnerId.name} {experiment.node.experimentByExperimentId.userByOwnerId.lastName} </td>\n            <td className=\"txt-oflo\">{experiment.node.experimentByExperimentId.proyectByProyectId.name}  </td>      \n            <td className=\"txt-oflo\">{experiment.node.experimentByExperimentId.proyectByProyectId.userByOwnerId.name} {experiment.node.experimentByExperimentId.proyectByProyectId.userByOwnerId.lastName} </td>\n            <td className=\"txt-oflo\">{experiment.node.observate}</td>\n\n            <td className=\"txt-oflo\">{experiment.node.price/100} U.F.</td>\n\n            <td className=\"txt-oflo\"> <Link to={\"/proyects/\"+experiment.node.id} > Solicitud </Link> <Link to={\"/proyects/\"+experiment.node.id} >  Descargar </Link></td>\n       \n          </tr>     \n          })} \n          \n        </tbody>\n      </table>\n    </div>\n  </div>\n)\n\n    }\n}\nexport default Resumen;\n","import React, { Component } from 'react';\nimport Resumen from './resumen';\n\n\nclass Observates extends Component {\n\n  render() {\n    return <div>\n      <div className=\"row page-titles\">\n        <div className=\"col-md-6 col-8 align-self-center\">\n          <h3 className=\"text-themecolor mb-0 mt-0\">Proyectos</h3>\n          <ol className=\"breadcrumb\">\n            <li className=\"breadcrumb-item\"><a href=\"javascript:void(0)\">Inicio</a></li>\n            <li className=\"breadcrumb-item active\">Lista de proyectos</li>\n          </ol>\n        </div>\n\n      </div>\n\n      <div className=\"col-lg-12\">\n\n        <Resumen />\n\n      </div>\n\n\n\n    </div>\n\n\n  }\n\n}\n\nexport default Observates;\n","import React, { Component } from 'react';\nimport Toast from 'react-bootstrap/Toast'\nimport Api from '../Api';\n\nconst login = new Api(\"login/singin\")\nclass Login extends Component<{}, { email: string, password: string }> {\n\n  login(event: any) {\n    event.preventDefault();\n    console.log(this.state)\n    login.msg = false\n    login.new({email:this.state.email,password:this.state.password}).then((data:any)=>{\n      \n      if (data.Login){\n        window.localStorage.clear()\n        window.localStorage.setItem(\"Authorization\",data.Jwt)\n        window.location.reload()\n      }\n\n      \n      } )\n\n  }\n\n  render() {\n\n    return <section id=\"wrapper\">\n\n\n        <div className=\"login-register\" style={{ backgroundImage: 'url(../assets/images/background/uc.jpeg)' }}>\n     \n\n          <div className=\"login-box card\">\n            <div className=\"card-body\">\n              <form className=\"form-horizontal form-material\" id=\"loginform\" onSubmit={(e) => { this.login(e) }} >\n                <h3 className=\"box-title mb-3\">Ingresar al sistema</h3>\n                <div className=\"form-group \">\n                  <div className=\"col-xs-12\">\n                    <input className=\"form-control\" onChange={(e) => { this.setState({ email: e.target.value }) }} type=\"text\" required placeholder=\"Email\" /> </div>\n                </div>\n                <div className=\"form-group\">\n                  <div className=\"col-xs-12\">\n                    <input className=\"form-control\" onChange={(e) => { this.setState({ password: e.target.value }) }} type=\"password\" required placeholder=\"Contraseña\" /> </div>\n                </div>\n                <div className=\"form-group\">\n                  <div className=\"col-md-12\">\n                    <div className=\"checkbox checkbox-primary float-left pt-0\">\n\n                    </div> <a href=\"javascript:void(0)\" id=\"to-recover\" className=\"text-dark float-right\"><i className=\"fa fa-lock mr-1\" /> ¿Olvidaste la contraseña?</a> </div>\n                </div>\n                <div className=\"form-group text-center mt-3\">\n                  <div className=\"col-xs-12\">\n                    <button className=\"btn btn-info btn-lg btn-block text-uppercase waves-effect waves-light\" type=\"submit\">Ingresar</button>\n                  </div>\n                </div>\n\n\n                <div className=\"form-group mb-0\">\n                  <div className=\"col-sm-12 text-center\">\n                    <p> <a href=\"register.html\" className=\"text-info ml-1\"><b>¿No tienes cuenta ?</b></a></p>\n                  </div>\n                </div>\n              </form>\n              <form className=\"form-horizontal\" id=\"recoverform\" action=\"index.html\">\n                <div className=\"form-group \">\n                  <div className=\"col-xs-12\">\n                    <h3>Recover Password</h3>\n                    <p className=\"text-muted\">Enter your Email and instructions will be sent to you! </p>\n                  </div>\n                </div>\n                <div className=\"form-group \">\n                  <div className=\"col-xs-12\">\n                    <input className=\"form-control\" type=\"text\" required placeholder=\"Email\" /> </div>\n                </div>\n                <div className=\"form-group text-center mt-3\">\n                  <div className=\"col-xs-12\">\n                    <button className=\"btn btn-primary btn-lg btn-block text-uppercase waves-effect waves-light\" type=\"submit\">Reset</button>\n                  </div>\n                </div>\n              </form>\n            </div>\n          </div>\n        </div>\n    </section>\n      }\n    }\n    \n    export default Login;\n","import React, { Component } from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Sidebar from './Sider/sider';\nimport Dashboard from './Dashboard/dashboard';\nimport Users from './Users/users';\nimport { BrowserRouter as Router, Route, Link } from \"react-router-dom\";\nimport EditUser from './Users/edit';\nimport Upload from './upload/results';\nimport NewExperiment from './Experiments/new';\nimport AddPayment from './Payments/addPayment/add';\nimport Transfer from './Payments/transfer/transfer';\nimport BuyBugs from './Payments/buybugs/buybugs';\nimport Proyects from './Proyects/proyects';\nimport Observates from './Observate/proyects';\nimport Login from './Login/App';\nimport Api from './Api';\nimport User from './user';\nimport { userInfo } from 'os';\n\n\n\nconst App: React.FC = () => {\n\n  return (<Router> \n   \n    <div id=\"main-wrapper\">\n    {/* ============================================================== */}\n    {/* Topbar header - style you can find in pages.scss */}\n    {/* ============================================================== */}\n    <header className=\"topbar\">\n      <nav className=\"navbar top-navbar navbar-expand-md navbar-light\">\n        {/* ============================================================== */}\n        {/* Logo */}\n        {/* ============================================================== */}\n\n        {/* ============================================================== */}\n        <div className=\"navbar-collapse\">\n          {/* ============================================================== */}\n          {/* toggle and nav items */}\n          {/* ============================================================== */}\n          <ul className=\"navbar-nav mr-auto mt-md-0 \">\n            {/* This is  */}\n            <li className=\"nav-item\"> <a className=\"nav-link nav-toggler hidden-md-up text-muted waves-effect waves-dark\" href=\"javascript:void(0)\"><i className=\"ti-menu\" /></a> </li>\n\n          </ul>\n          {/* ============================================================== */}\n          {/* User profile and search */}\n          {/* ============================================================== */}\n          <ul className=\"navbar-nav my-lg-0\">\n            <li className=\"nav-item hidden-sm-down\">\n              <form className=\"app-search\">\n                <input type=\"text\" className=\"form-control\" placeholder=\"Buscar ...\" /> <a className=\"srh-btn\"><i className=\"ti-search\" /></a> </form>\n            </li>\n            <li className=\"nav-item dropdown\">\n              <a className=\"nav-link dropdown-toggle text-muted waves-effect waves-dark\" data-toggle=\"dropdown\" aria-haspopup=\"true\" aria-expanded=\"false\"> Manuel Alba </a>\n              <div className=\"dropdown-menu dropdown-menu-right animated flipInY\">\n                <ul className=\"dropdown-user\">\n                  <li>\n                    <div className=\"dw-user-box\">\n                      <div className=\"u-text\">\n                        <h4>{User.Name} {User.LastName}</h4>\n                        <p className=\"text-muted\">malba@mmae.cl</p><a href=\"profile.html\" className=\"btn btn-rounded btn-danger btn-sm\">Ver Perfil  </a></div>\n                    </div>\n                  </li>\n                  <li role=\"separator\" className=\"divider\" />\n                  <li><a href=\"#\"><i className=\"ti-user\" /> Mi perfil</a></li>\n                  <li><a href=\"#\"><i className=\"ti-wallet\" /> Mi balance</a></li>\n                  {/* <li><a href=\"#\"><i className=\"ti-email\" /> Mensajes</a></li> */}\n                  <li role=\"separator\" className=\"divider\" />\n                  <li><a href=\"#\"><i className=\"ti-settings\" />  Configurar cuenta</a></li>\n                  <li role=\"separator\" className=\"divider\" />\n                  <li><a onClick={()=>{ window.localStorage.clear();window.location.reload() }}><i className=\"fa fa-power-off\" /> Cerrar sesión</a></li>\n                </ul>\n              </div>\n            </li>\n          </ul>\n        </div>\n      </nav>\n    </header>\n    {/* ============================================================== */}\n    {/* End Topbar header */}\n    {/* ============================================================== */}\n    {/* ============================================================== */}\n    {/* Left Sidebar - style you can find in sidebar.scss  */}\n    {/* ============================================================== */}\n\n    <Sidebar />\n    {/* ============================================================== */}\n    {/* End Left Sidebar - style you can find in sidebar.scss  */}\n    {/* ============================================================== */}\n    {/* ============================================================== */}\n    {/* Page wrapper  */}\n    {/* ============================================================== */}\n    <div className=\"page-wrapper\">\n      {/* ============================================================== */}\n      {/* Container fluid  */}\n      {/* ============================================================== */}\n      <div className=\"container-fluid\">\n        {/* ============================================================== */}\n        {/* Bread crumb and right sidebar toggle */}\n        {/* ============================================================== */}\n\n        <Route exact path=\"/\" component={Dashboard} />\n        <Route exact path=\"/app/\" component={Dashboard} />\n        <Route exact path=\"/app/edit-users\" component={Users} />\n        <Route exact path=\"/app/users/:id\" component={EditUser} />\n        <Route exact path=\"/app/upload/:machine\" component={Upload} />\n        <Route exact path=\"/app/NewExperiment\" component={NewExperiment} />\n        <Route exact path=\"/app/AddPayment\" component={AddPayment} />\n        <Route exact path=\"/app/Transfer\" component={Transfer} />\n        <Route exact path=\"/app/buybugs\" component={BuyBugs} />\n        <Route exact path=\"/app/edit-proyects\" component={Proyects} />\n        <Route exact path=\"/app/observates\" component={Observates} />\n\n\n\n\n        {/* ============================================================== */}\n        {/* End Right sidebar */}\n        {/* ============================================================== */}\n      </div>\n      {/* ============================================================== */}\n      {/* End Container fluid  */}\n      {/* ============================================================== */}\n      {/* ============================================================== */}\n      {/* footer */}\n      {/* ============================================================== */}\n      <footer className=\"footer\">\n        © 2019 Uci-fq.uc.cl Powered By mmae.cl\n    </footer>\n      {/* ============================================================== */}\n      {/* End footer */}\n      {/* ============================================================== */}\n    </div>\n    {/* ============================================================== */}\n    {/* End Page wrapper  */}\n    {/* ============================================================== */}\n  </div></Router>\n  );\n}\nconst autorization = window.localStorage.getItem(\"Authorization\")\n\nconst Info = async () => {\n  const login = new Api(\"login/me\")\n\n  let data = await login.getAll()\n  console.log(data)\n  console.log(\"adsfpoi\")\n  return <App />\n}\n\n\n\nclass INIT extends Component<{}, { load: boolean }> {\n  state = { load: false }\n  constructor(props: any) {\n    super(props)\n    if (autorization != null) {\n      const login = new Api(\"login/me\")\n      login.getAll().then((data: any) => { \n        // let user = userInfo<data>\n        User.load(data)  \n        this.setState({ load: true })\n       })\n    }\n  }\n  render() {\n    if (autorization == null)\n      return <Login />\n      return <App/>\n    if (!this.state.load)\n      return <div></div>\n  }\n}\n\n\nexport default INIT;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\ntype Config = {\n  onSuccess?: (registration: ServiceWorkerRegistration) => void;\n  onUpdate?: (registration: ServiceWorkerRegistration) => void;\n};\n\nexport function register(config?: Config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(\n      (process as { env: { [key: string]: string } }).env.PUBLIC_URL,\n      window.location.href\n    );\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl: string, config?: Config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl: string, config?: Config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\n// import 'bootstrap/dist/css/bootstrap.min.css';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\n\n\n\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}